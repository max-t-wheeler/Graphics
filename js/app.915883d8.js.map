{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/components/Three/ThreeApp.vue?4abb","webpack:///./src/components/Contact/ContactApp.vue?4469","webpack:///./src/components/Three/Navpane/NavpaneControls.vue?8419","webpack:///./src/components/Home/Home.vue?aade","webpack:///./src/App.vue?22f4","webpack:///./src/components/Toolbar.vue?f16d","webpack:///src/components/Toolbar.vue","webpack:///./src/components/Toolbar.vue?2909","webpack:///./src/components/Toolbar.vue","webpack:///./src/components/Home/Home.vue?db50","webpack:///src/components/Home/Home.vue","webpack:///./src/components/Home/Home.vue?1e70","webpack:///./src/components/Home/Home.vue","webpack:///./src/components/Three/ThreeApp.vue?8b59","webpack:///./src/components/Three/Navpane/Navpane.vue?27c8","webpack:///./src/components/Three/Navpane/NavpaneControls.vue?6cfc","webpack:///src/components/Three/Navpane/NavpaneControls.vue","webpack:///./src/components/Three/Navpane/NavpaneControls.vue?68ad","webpack:///./src/components/Three/Navpane/NavpaneControls.vue","webpack:///./src/components/Three/animations/animation.js","webpack:///./src/components/Three/animations/utils.js","webpack:///./src/components/Three/animations/art/blanket.js","webpack:///./src/components/Three/animations/art/bounceRipple.js","webpack:///./src/components/Three/animations/art/chrysanthedad.js","webpack:///./src/components/Three/animations/art/chrysanthemum.js","webpack:///./src/components/Three/animations/art/chrysanthemum2.js","webpack:///./src/components/Three/animations/art/chrysanthemum3.js","webpack:///./src/components/Three/animations/art/chrysanthemum4.js","webpack:///./src/components/Three/animations/art/chrysanthemum5.js","webpack:///./src/components/Three/animations/art/chrysanthemum6.js","webpack:///./src/components/Three/animations/art/chrysanthemum7.js","webpack:///./src/components/Three/animations/art/chrysanthemum8.js","webpack:///./src/components/Three/animations/art/chrysanthemum9.js","webpack:///./src/components/Three/animations/art/clam.js","webpack:///./src/components/Three/animations/art/collide0scope.js","webpack:///./src/components/Three/animations/art/concentricPolygons.js","webpack:///./src/components/Three/animations/art/concentricPolygons2.js","webpack:///./src/components/Three/animations/art/fauxlidoscope.js","webpack:///./src/components/Three/animations/art/flowers.js","webpack:///./src/components/Three/animations/art/gyr0scope.js","webpack:///./src/components/Three/animations/art/pearl.js","webpack:///./src/components/Three/animations/art/pinwheel.js","webpack:///./src/components/Three/animations/art/snowflake.js","webpack:///./src/components/Three/animations/art/sloshRipple.js","webpack:///./src/components/Three/animations/art/starryNight.js","webpack:///./src/components/Three/animations/art/wrigglingDonut.js","webpack:///./src/components/Three/animations/math/mosaic.js","webpack:///./src/components/Three/animations/math/mosaic2.js","webpack:///./src/components/Three/animations/math/offsetStar.js","webpack:///./src/components/Three/animations/math/sacredCircles.js","webpack:///./src/components/Three/animations/math/unoriginal.js","webpack:///./src/components/Three/animations/physics/sineWave.js","webpack:///./src/components/Three/animations/shapes/circle.js","webpack:///./src/components/Three/animations/shapes/cube.js","webpack:///./src/components/Three/animations/shapes/polygon.js","webpack:///./src/components/Three/animations/shapes/rectangle.js","webpack:///./src/components/Three/animations/shapes/triangle.js","webpack:///./src/components/Three/animations/simulations/amparo.js","webpack:///./src/components/Three/animations/simulations/andorinha.js","webpack:///./src/components/Three/animations/simulations/antigua.js","webpack:///./src/components/Three/animations/simulations/batidinha.js","webpack:///./src/components/Three/animations/simulations/bicardi.js","webpack:///./src/components/Three/animations/simulations/blouse.js","webpack:///./src/components/Three/animations/simulations/brazil.js","webpack:///./src/components/Three/animations/simulations/choro.js","webpack:///./src/components/Three/animations/simulations/dialogo.js","webpack:///./src/components/Three/animations/simulations/flower.js","webpack:///./src/components/Three/animations/simulations/games.js","webpack:///./src/components/Three/animations/simulations/lamento.js","webpack:///./src/components/Three/animations/simulations/look.js","webpack:///./src/components/Three/animations/simulations/mojave.js","webpack:///./src/components/Three/animations/simulations/sabia.js","webpack:///./src/components/Three/animations/simulations/tereza.js","webpack:///./src/components/Three/animations/simulations/triste.js","webpack:///./src/components/Three/animations/simulations/wave.js","webpack:///./src/components/Three/animations/index.js","webpack:///./src/components/Three/Navpane/canvasManager.js","webpack:///src/components/Three/Navpane/Navpane.vue","webpack:///./src/components/Three/Navpane/categoryManager.js","webpack:///./src/components/Three/Navpane/animationManager.js","webpack:///./src/components/Three/Navpane/Navpane.vue?38a3","webpack:///./src/components/Three/Navpane/Navpane.vue","webpack:///src/components/Three/ThreeApp.vue","webpack:///./src/components/Three/ThreeApp.vue?3c6d","webpack:///./src/components/Three/ThreeApp.vue","webpack:///./src/components/Media/MediaApp.vue?4010","webpack:///src/components/Media/MediaApp.vue","webpack:///./src/components/Media/MediaApp.vue?f6e1","webpack:///./src/components/Media/MediaApp.vue","webpack:///./src/components/CV/CVApp.vue?05dc","webpack:///src/components/CV/CVApp.vue","webpack:///./src/components/CV/CVApp.vue?b427","webpack:///./src/components/CV/CVApp.vue","webpack:///./src/components/Contact/ContactApp.vue?8c46","webpack:///src/components/Contact/ContactApp.vue","webpack:///./src/components/Contact/ContactApp.vue?f16f","webpack:///./src/components/Contact/ContactApp.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/Toolbar.vue?5cec","webpack:///./src/components/Three/Navpane/Navpane.vue?9b06","webpack:///./src/components/Media/MediaApp.vue?3edd","webpack:///./src/components/CV/CVApp.vue?fb90"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","home","contents","screenType","_e","staticRenderFns","on","$event","selectHome","_v","_s","homeContents","_l","app","selectApp","toolbarLink","directives","rawName","modifiers","src","tooltip","class","icon","props","toolbarLinks","methods","appContents","display","application","component","attributes","mounted","moveAttributes","frame","clearInterval","id","elems","style","top","containerHeight","Math","cos","left","containerWidth","sin","appContainer","overflow","elem","classList","add","textContent","text","fontSize","size","zIndex","homeContainer","appendChild","expression","domProps","target","composing","searchedText","screenAspectRatio","category","item","active","activate","parameters","_b","resetAnimation","toFullScreen","resetInput","animation","parameter","label","maxValue","minValue","$set","components","Animation","scene","camera","dynamic","controllable","colorNodes","type","color","mod","phi","PI","polygon","center","radius","numVertices","theta","axis","vertices","Float32Array","geometry","THREE","setAttribute","material","line","position","set","offsetStar","offset","Star","numStems","numSplits","stemGroup","splitGroup","stemVertices","stemGeometry","stemMaterial","splitVertices","splitGeometry","splitMaterial","Flower","rootPosition","pistolPosition","petalRadius","numPetals","numNodes","petalColor","pistolColor","stem","petalGroup","petalCenter","petal","pistolGeometry","pistolMaterial","wireframe","pistol","sacredGeometry","numPolygons","polygonRadius","globalRadius","geomGroup","polyCenter","poly","Graph","partitionSizes","vertexRadius","numEdges","vertexGroup","edgeGroup","vertexCenter","vertexGeometry","vertexMaterial","vertex","layout","angle","children","count","numSides","sideScale","sideSpacing","floor","sideAngle","numLevels","levelScale","interLevelSpacing","intraLevelSpacing","edgeGeometry","edgeMaterial","edge","createVertexSet","assignVertexCoordinates","addEdges","metadata","address","hidden","defaultValue","currentValue","numFaces","Blanket","parseFloat","mesh","rotateZ","BounceRipple","x","col","scale","numCenters","numLayers","Chrysanthedad","polyCenterOffset","polyClusterCenter","k","Chrysanthemum","rotation","z","Chrysanthemum2","Chrysanthemum3","Chrysanthemum4","Chrysanthemum5","rotateX","Chrysanthemum6","Chrysanthemum7","Chrysanthemum8","Chrysanthemum9","numRidges","Clam","sqrt","pow","endpoints","numCircles","Collide0scope","ConcentricPolygons","ConcentricPolygons2","cameraZoomMax","cameraZoomMin","numSteps","numLanes","Fauxlidoscope","cameraAmplitude","cameraDisplacement","concentricPolygonGroup","layerGroup","numFlowers","Temp","root","flower","rate","Gyr0scope","Pearl","pearlGeometry","pearlMaterial","pearl","Pinwheel","Snowflake","geom","SloshRipple","numStars","StarryNight","starCenter","random","starRadius","abs","star","WrigglingDonut","Mosaic","Mosaic2","group1","group2","OffsetStar","circleRadius","SacredCircles","nodeRadius","divisor","visible","amplitude","frequency","phase","displacement","numPoints","SineWave","node_x","node_y","numSpokes","Circle","Cube","Polygon","Rectangle","colors","vertexColors","Triangle","numPartitions","graphRadius","Amparo","graph","initialize","Andorinha","Antigua","y","Batidinha","Bicardi","Blouse","Brazil","Choro","Dialogo","Games","Lamento","dampening","Look","Mojave","Sabia","Tereza","Triste","Wave","ANIMATION_MAP","blanket","chrysanthedad","chrysanthemum","chrysanthemum2","chrysanthemum3","chrysanthemum4","chrysanthemum5","chrysanthemum6","chrysanthemum7","chrysanthemum8","chrysanthemum9","collide","fauxlidoscope","flowers","Flowers","gyro","pinwheel","snowflake","mosaic","mosaic2","unoriginal","Unoriginal","circle","clam","cube","polystarter","rectangle","triangle","amparo","andorinha","antigua","batidinha","bicardi","blouse","brazil","choro","dialogo","games","lamento","look","mojave","sabia","tereza","triste","wave","generateAnimation","OrbitControls","require","CanvasManager","canvas","checkCanvasSize","setCamera","setRenderer","addEventListener","controls","renderer","domElement","dt","draw","tick","backgroundColor","antialias","setClearColor","setPixelRatio","devicePixelRatio","canvasWidth","canvasHeight","cv","document","getElementById","offsetWidth","offsetHeight","setSize","aspect","updateProjectionMatrix","animationId","requestAnimationFrame","render","update","CATEGORIES","ANIMATIONS","bounceRipple","collide0scope","concentricPolygons","concentricPolygons2","gyr0scope","sloshRipple","starryNight","wrigglingDonut","sacredCircles","sineWave","NavpaneControls","categories","animations","canvasManager","cancelAnimationFrame","param","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","computed","visibleAnimations","filter","visibleCategories","Navpane","player","embedref","mediaPlayers","cvSection","header","detail","onSlideLeft","currentSlide","onSlideRight","cvContents","slide","visibleCvContents","contactInfoItem","contactLink","contactInfo","contactLinks","Toolbar","Home","ThreeApp","MediaApp","CVApp","ContactApp","checkScreenSize","innerWidth","innerHeight","resizeApp","updated","Vue","use","BootstrapVue","config","productionTip","h","App","$mount"],"mappings":"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","file":"js/app.915883d8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeApp.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app-base\"}},[_c('app-toolbar',{staticClass:\"toolbar\",attrs:{\"homeContents\":_vm.home,\"appContents\":_vm.contents}}),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.home.display)?_c('home-page',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[0].display)?_c('three-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[1].display)?_c('media-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[2].display)?_c('cv-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[3].display)?_c('contact-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-navbar',{attrs:{\"toggleable\":\"md\",\"type\":\"dark\"}},[_c('b-navbar-toggle',{attrs:{\"target\":\"nav_collapse\"}}),_c('b-navbar-brand',{on:{\"click\":function($event){return _vm.selectHome()}}},[_c('span',{staticClass:\"fa fa-home\"}),_vm._v(\" \"+_vm._s(_vm.homeContents.name)+\" \")]),_c('b-collapse',{attrs:{\"is-nav\":\"\",\"id\":\"nav_collapse\"}},[_c('b-navbar-nav',_vm._l((_vm.appContents),function(app){return _c('b-nav-item',{key:app.name,on:{\"click\":function($event){return _vm.selectApp(app)}}},[_vm._v(_vm._s(app.name))])}),1),_c('b-navbar-nav',{staticClass:\"ml-auto\"},_vm._l((_vm.toolbarLinks),function(toolbarLink){return _c('b-nav-item',{key:toolbarLink.name,attrs:{\"right\":\"\"}},[_c('a',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"toolbar-icon external\",attrs:{\"rel\":\"noopener\",\"href\":toolbarLink.src,\"target\":\"_blank\",\"title\":toolbarLink.tooltip}},[_c('span',{staticClass:\"fa\",class:toolbarLink.icon})])])}),1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n      <b-navbar toggleable=\"md\" type=\"dark\">\n        <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n        <b-navbar-brand @click=\"selectHome()\">\n          <span class=\"fa fa-home\"/>\n          {{ homeContents.name }}\n        </b-navbar-brand>\n        <b-collapse is-nav id=\"nav_collapse\">\n          <b-navbar-nav>\n            <b-nav-item v-for=\"app in appContents\" :key=\"app.name\" @click=\"selectApp(app)\">{{ app.name }}</b-nav-item>\n          </b-navbar-nav>\n          <b-navbar-nav class=\"ml-auto\">\n            <b-nav-item right v-for=\"toolbarLink in toolbarLinks\" :key=\"toolbarLink.name\">\n              <a rel=\"noopener\" class=\"toolbar-icon external\" :href=\"toolbarLink.src\" target=\"_blank\" v-b-tooltip.hover :title=\"toolbarLink.tooltip\">\n                <span class=\"fa\" :class=\"toolbarLink.icon\"/>\n              </a>\n            </b-nav-item>\n          </b-navbar-nav>\n        </b-collapse>\n      </b-navbar>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['homeContents', 'appContents'],\n  data () {\n    return {\n      toolbarLinks: [\n        {\n          name: 'github',\n          src: 'https://github.com/max-t-wheeler',\n          icon: 'fa-github',\n          tooltip: 'Must'\n        },\n        {\n          name: 'linkedin',\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin',\n          tooltip: 'use'\n        },\n        {\n          name: 'facebook',\n          src: 'https://www.facebook.com/max.t.wheeler',\n          icon: 'fa-facebook',\n          tooltip: 'right'\n        },\n        {\n          name: 'soundcloud',\n          src: 'https://soundcloud.com/empty-dubs',\n          icon: 'fa-soundcloud',\n          tooltip: 'click'\n        }\n      ]\n    }\n  },\n  methods: {\n    selectHome: function () {\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      this.homeContents.display = true;\n    },\n    selectApp: function (application) {\n      this.homeContents.display = false;\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      application.display = true;\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.navbar-brand {\n  font-size: 1rem;\n  padding: 0;\n}\n\n.nav-link {\n  font-size: 1rem;\n  padding: 0;\n}\n\n.toolbar-icon {\n\n  color: black;\n  text-decoration: none;\n}\n\n.toolbar-icon:hover, .toolbar-icon:active, .toolbar-icon:visited {\n  color: black;\n}\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Toolbar.vue?vue&type=template&id=8672a6e0&\"\nimport script from \"./Toolbar.vue?vue&type=script&lang=js&\"\nexport * from \"./Toolbar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Toolbar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"home-container\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h='center' id='home-container'>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'HomeApp',\n  data () {\n    return {\n      attributes: [\n        {\n          text: 'artist',\n          size: 5\n        },\n        {\n          text: 'designer',\n          size: 3\n        },\n        {\n          text: 'dreamer',\n          size: 3\n        },\n        {\n          text: 'engineer',\n          size: 4\n        },\n        {\n          text: 'entrepreneur',\n          size: 3\n        },\n        {\n          text: 'fighter',\n          size: 1\n        },\n        {\n          text: 'geek',\n          size: 2\n        },\n        {\n          text: 'glutton',\n          size: 3\n        },\n        {\n          text: 'heartbreaker',\n          size: 1\n        },\n        {\n          text: 'lover',\n          size: 1\n        },\n        {\n          text: 'mathematician',\n          size: 4\n        },\n        {\n          text: 'musician',\n          size: 5\n        },\n        {\n          text: 'nerd',\n          size: 3\n        },\n        {\n          text: 'poet',\n          size: 3\n        },\n        {\n          text: 'realist',\n          size: 3\n        },\n        {\n          text: 'romantic',\n          size: 2\n        },\n        {\n          text: 'scientist',\n          size: 4\n        },\n        {\n          text: 'taoist',\n          size: 2\n        }\n      ]\n    }\n  },\n  mounted () {\n\n    const appContainer = document.querySelector('.application');\n    const homeContainer = document.getElementById('home-container')\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n\n    appContainer.style.overflow = 'hidden';\n\n    function moveAttributes () {\n      const elems = document.querySelectorAll('.home-attribute');\n      let t = 0;\n      const id = setInterval(frame, 5);\n      function frame () {\n        if (t === 35000000) {\n          clearInterval(id);\n        } else {\n          for (let i = 0; i < elems.length; ++i) {\n            elems[i].style.top = containerHeight / 2 + Math.cos(i + t / 1000) * containerHeight / 2 + 'px';\n            elems[i].style.left = containerWidth / 20 + Math.sin(i + t / 1000) * containerWidth / 3 + 'px';\n          }\n          t++;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.attributes.length; ++i) {\n\n      const elem = document.createElement('div');\n\n      elem.classList.add('home-attribute')\n      elem.textContent = this.attributes[i].text;\n      elem.style.fontSize = 10 * this.attributes[i].size + 'px';\n      elem.style.zIndex = i;\n\n      homeContainer.appendChild(elem);\n    }\n\n    moveAttributes();\n\n  }\n}\n\n</script>\n\n<style>\n\n.home-attribute {\n  backface-visibility: hidden;\n  filter: blur(0);\n  float:left;\n  position: relative;\n  -webkit-backface-visibility: hidden;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=3eef81be&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"fluid\":\"\",\"id\":\"three-container\"}},[(_vm.screenType === 'phone')?_c('b-row',[_c('b-col',[_c('h1',{attrs:{\"id\":\"three-phone-message\"}},[_vm._v(\"ROTATE ME\")])])],1):_c('b-row',[_c('b-col',{attrs:{\"id\":\"three-navpane\",\"md\":\"2\",\"sm\":\"3\"}},[_c('h2',{class:_vm.screenType,attrs:{\"id\":\"three-navpane-title\"}},[_vm._v(\"Animations\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchedText),expression:\"searchedText\"}],attrs:{\"type\":\"text\",\"id\":\"three-search-bar\",\"placeholder\":\"Search\",\"onfocus\":\"this.value=''\"},domProps:{\"value\":(_vm.searchedText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.searchedText=$event.target.value}}}),_c('three-navpane-menu',{class:[_vm.screenAspectRatio, _vm.screenType],attrs:{\"id\":\"three-navpane-menu\",\"screenType\":_vm.screenType,\"searchedText\":_vm.searchedText}})],1),_c('b-col',{attrs:{\"md\":\"10\",\"sm\":\"9\",\"id\":\"three-display\"}},[_c('canvas',{attrs:{\"id\":\"three-canvas\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.visibleCategories),function(category){return _c('div',{key:category.name,staticClass:\"three-navpane-category\"},[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:('category-' + category.name),expression:\"'category-' + category.name\"}],staticClass:\"three-navpane-category-text\"},[_vm._v(\" \"+_vm._s(category.name)+\" \")]),_c('b-collapse',{attrs:{\"id\":'category-' + category.name}},[_c('ul',{staticClass:\"three-navpane-list\"},_vm._l((_vm.visibleAnimations),function(item){return _c('li',{key:item.name,staticClass:\"three-navpane-item\"},[(item.category == category.name)?_c('div',[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:(item.name),expression:\"item.name\"}],staticClass:\"three-navpane-text\",class:{active: item.active},on:{\"click\":function($event){return _vm.activate(item)}}},[_vm._v(\" \"+_vm._s(item.text)+\" \")]),(item.parameters.length !== 0 && item.active)?_c('three-navpane-controls',_vm._b({attrs:{\"animation\":item,\"screenType\":_vm.screenType}},'three-navpane-controls',{activate: _vm.activate, resetAnimation: _vm.resetAnimation, toFullScreen: _vm.toFullScreen, resetInput: _vm.resetInput},false)):_vm._e()],1):_vm._e()])}),0)])],1)}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('br'),_vm._l((_vm.animation.parameters),function(parameter){return _c('div',{key:parameter.label,staticClass:\"three-navpane-controls\",class:_vm.screenType},[_c('p',[_vm._v(\" \"+_vm._s(parameter.label)+\" \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(parameter.currentValue),expression:\"parameter.currentValue\"}],staticClass:\"three-navpane-input\",attrs:{\"type\":\"number\",\"max\":parameter.maxValue,\"min\":parameter.minValue},domProps:{\"value\":(parameter.currentValue)},on:{\"blur\":function($event){return _vm.resetInput(parameter)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(parameter, \"currentValue\", $event.target.value)}}}),_c('br')])}),_c('br'),_c('div',{staticClass:\"three-navpane-controls\",class:_vm.screenType},[_c('b-button',{on:{\"click\":function($event){return _vm.activate(_vm.animation)}}},[_c('font-awesome-icon',{staticClass:\"three-navpane-button\",attrs:{\"icon\":\"play-circle\"}})],1),_c('b-button',{on:{\"click\":function($event){return _vm.resetAnimation(_vm.animation)}}},[_c('font-awesome-icon',{staticClass:\"three-navpane-button\",attrs:{\"icon\":\"sync\"}})],1),_c('b-button',{on:{\"click\":function($event){return _vm.toFullScreen()}}},[_c('font-awesome-icon',{staticClass:\"three-navpane-button\",attrs:{\"icon\":\"expand-arrows-alt\"}})],1)],1),_c('br')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <br>\n    <div v-for=\"parameter in animation.parameters\" :key=\"parameter.label\" class=\"three-navpane-controls\" :class='screenType'>\n      <p> {{parameter.label }} </p>\n      <input\n        class=\"three-navpane-input\"\n        type=\"number\"\n        :max=\"parameter.maxValue\"\n        :min=\"parameter.minValue\"\n        v-on:blur=\"resetInput(parameter)\"\n        v-model=\"parameter.currentValue\"/>\n      <br>\n    </div>\n    <br>\n    <div class=\"three-navpane-controls\" :class='screenType'>\n      <b-button @click=\"activate(animation)\">\n        <font-awesome-icon icon='play-circle' class='three-navpane-button'></font-awesome-icon>\n      </b-button>\n      <b-button @click=\"resetAnimation(animation)\">\n        <font-awesome-icon icon='sync' class='three-navpane-button'></font-awesome-icon>\n      </b-button>\n      <b-button @click=\"toFullScreen()\">\n        <font-awesome-icon icon='expand-arrows-alt' class='three-navpane-button'></font-awesome-icon>\n      </b-button>\n    </div>\n    <br>\n  </div>\n\n</template>\n\n<script>\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faExpandArrowsAlt, faPlayCircle, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nlibrary.add(faExpandArrowsAlt);\nlibrary.add(faPlayCircle);\nlibrary.add(faSync);\n\nexport default {\n  props: ['animation', 'screenType', 'activate', 'resetAnimation', 'toFullScreen', 'resetInput'],\n  components: {\n    'font-awesome-icon': FontAwesomeIcon,\n  }\n}\n\n</script>\n\n<style>\n\np {\n  margin-top: 8px;\n  margin-bottom: 0;\n}\n\n.three-navpane-controls {\n  text-align: left;\n}\n\n.three-navpane-controls.monitor {\n  text-align: center;\n}\n\n.three-navpane-input {\n  width: 80%;\n}\n\n.three-navpane-button {\n  font-size: 20px;\n}\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NavpaneControls.vue?vue&type=template&id=422e8bb4&\"\nimport script from \"./NavpaneControls.vue?vue&type=script&lang=js&\"\nexport * from \"./NavpaneControls.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NavpaneControls.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default class Animation {\n\n  constructor (scene, camera, animation) {\n\n    this.scene = scene;\n    this.camera = camera;\n    this.parameters = animation.parameters;\n    this.name = animation.name;\n    this.dynamic = animation.dynamic;\n    this.controllable = animation.controllable;\n\n}\n\n  draw () {\n\n\t}\n\n  update () {\n\n  }\n\n}\n","import * as THREE from 'three';\n\n/// //////////////////////////Styling//////////////////////////////////////\n\nexport function colorNodes (n, type) {\n\n  let color = null;\n\n  if (type === 'cool') {\n\n    const mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0x5dff00;\n        break;\n      case 1:\n        color = 0x1000ff;\n        break;\n      case 2:\n        color = 0xff00e1;\n        break;\n      case 3:\n        color = 0x009990;\n        break;\n\n    }\n\n  } else if (type === 'hot') {\n\n    const mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0xffffff;\n        break;\n\n    }\n\n  } else {\n\n    const mod = n % 7;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0x5dff00;\n        break;\n      case 4:\n        color = 0x1000ff;\n        break;\n      case 5:\n        color = 0xff00e1;\n        break;\n      case 6:\n        color = 0xffffff;\n        break;\n\n    }\n\n  }\n\n  return color;\n\n}\n\n/// //////////////////////////WebGL Helper export Functions//////////////////////////////////////\n\nexport function phi (t, n) {\n\n  const p = 2 * Math.PI * t / n;\n\n  return p;\n\n}\n\nexport function polygon (center, radius, numVertices, theta, color, axis) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(this.numVertices * 3);\n\n  for (let i = 0; i < this.numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  const geometry = new THREE.BufferGeometry();\n\n  geometry.setAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  const material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n  if (axis === 'relative') {\n    this.line.position.set(this.center[0], this.center[1], this.center[2]);\n  }\n\n}\n\nexport function offsetStar (numVertices, center, radius, theta, offset, color) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(numVertices * 3);\n\n  for (let i = 0; i < numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  const geometry = new THREE.BufferGeometry();\n\n  geometry.setAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  const material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n}\n\nexport function Star (center, numStems, numSplits, radius, color) {\n\n  this.center = center;\n  this.numStems = numStems;\n  this.numSplits = numSplits;\n  this.radius = radius;\n  this.color = color;\n\n  this.stemGroup = new THREE.Group();\n  this.splitGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numStems; ++i) {\n\n    this.stemVertices = new Float32Array(2 * 3);\n\n    this.stemVertices[0] = this.center[0];\n    this.stemVertices[1] = this.center[1];\n    this.stemVertices[2] = this.center[2];\n    this.stemVertices[3] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n    this.stemVertices[4] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n    this.stemVertices[5] = this.center[2];\n\n    const stemGeometry = new THREE.BufferGeometry();\n\n    stemGeometry.setAttribute(\n      'position',\n      new THREE.BufferAttribute(this.stemVertices, 3)\n    );\n\n    const stemMaterial = new THREE.LineBasicMaterial(\n      {\n        color: this.color\n      }\n    );\n\n    const line = new THREE.Line(stemGeometry, stemMaterial);\n\n    this.stemGroup.add(line);\n\n    for (let j = 0; j < this.numSplits; ++j) {\n\n      this.splitVertices = new Float32Array(2 * 3);\n\n      this.splitVertices[0] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n      this.splitVertices[1] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n      this.splitVertices[2] = this.center[2];\n      this.splitVertices[3] = this.radius * Math.sin(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[0];\n      this.splitVertices[4] = this.radius * Math.cos(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[1];\n      this.splitVertices[5] = this.center[2];\n\n      const splitGeometry = new THREE.BufferGeometry();\n\n      splitGeometry.setAttribute(\n        'position',\n        new THREE.BufferAttribute(this.splitVertices, 3)\n      );\n\n      const splitMaterial = new THREE.LineBasicMaterial(\n        {\n          color: this.color\n        }\n      );\n\n      const line = new THREE.Line(splitGeometry, splitMaterial);\n\n      this.splitGroup.add(line);\n\n    }\n\n  }\n\n}\n\nexport function Flower (rootPosition, pistolPosition, petalRadius, numPetals, numNodes, petalColor, pistolColor) {\n\n  this.rootPosition = rootPosition;\n  this.pistolPosition = pistolPosition;\n  this.petalRadius = petalRadius;\n  this.numPetals = numPetals;\n  this.numNodes = numNodes;\n  this.petalColor = petalColor;\n  this.pistolColor = pistolColor;\n\n  this.stemVertices = new Float32Array(2 * 3);\n\n  this.stemVertices[0] = this.rootPosition[0];\n  this.stemVertices[1] = this.rootPosition[1];\n  this.stemVertices[2] = this.rootPosition[2];\n  this.stemVertices[3] = this.pistolPosition[0];\n  this.stemVertices[4] = this.pistolPosition[1];\n  this.stemVertices[5] = this.pistolPosition[2];\n\n  const stemGeometry = new THREE.BufferGeometry();\n\n  stemGeometry.setAttribute(\n    'position',\n    new THREE.BufferAttribute(this.stemVertices, 3)\n  );\n\n  const stemMaterial = new THREE.LineBasicMaterial(\n    {\n      color: colorNodes(3)\n    }\n  );\n\n  this.stem = new THREE.Line(stemGeometry, stemMaterial);\n\n  this.petalGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPetals; ++i) {\n\n    const petalCenter = [\n      this.petalRadius * Math.cos(phi(i, this.numPetals)) + this.pistolPosition[0],\n      this.petalRadius * Math.sin(phi(i, this.numPetals)) + this.pistolPosition[1],\n      this.pistolPosition[2]\n    ];\n\n    const petal = new polygon(petalCenter, this.petalRadius, this.numNodes, phi(i, this.numPetals), this.petalColor);\n\n    this.petalGroup.add(petal.line);\n\n  }\n\n  const pistolGeometry = new THREE.CircleBufferGeometry(this.petalRadius / 3, 32);\n  const pistolMaterial = new THREE.MeshBasicMaterial({ color: this.pistolColor, wireframe: false });\n\n  this.pistol = new THREE.Mesh(pistolGeometry, pistolMaterial);\n  this.pistol.position.set(\n    this.pistolPosition[0],\n    this.pistolPosition[1],\n    this.pistolPosition[2]\n  );\n\n}\n\nexport function sacredGeometry (center, numPolygons, numNodes, polygonRadius, globalRadius, color) {\n\n  this.center = center;\n  this.numPolygons = numPolygons;\n  this.numNodes = numNodes;\n  this.polygonRadius = polygonRadius;\n  this.globalRadius = globalRadius;\n  this.color = color;\n\n  this.geomGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPolygons; ++i) {\n\n    const polyCenter = [\n      this.globalRadius * Math.cos(phi(i, this.numPolygons)) + this.center[0],\n      this.globalRadius * Math.sin(phi(i, this.numPolygons)) + this.center[1],\n      this.center[2]\n    ];\n\n    const poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, phi(i, this.numNodes), this.color);\n\n    this.geomGroup.add(poly.line);\n\n  }\n\n}\n\nexport class Graph {\n\n  constructor (partitionSizes, center, radius, vertexRadius, type) {\n\n    this.partitionSizes = partitionSizes;\n    this.center = center;\n    this.radius = radius;\n    this.vertexRadius = vertexRadius;\n    this.type = type;\n    this.numVertices = 0;\n    this.numEdges = 0;\n    this.vertexGroup = new THREE.Group();\n    this.edgeGroup = new THREE.Group();\n\n  }\n\n  createVertexSet (color) {\n\n    for (let i = 0; i < this.partitionSizes.length; ++i) {\n      this.numVertices = this.numVertices + this.partitionSizes[i];\n    }\n\n    const vertexCenter = [0, 0, 0];\n\n    if (color === 'sequence') {\n\n      for (let i = 0; i < this.numVertices; ++i) {\n\n        if (this.type === 'ball') {\n\n          const vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius, 32);\n          const vertexMaterial = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n          const vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n          this.vertexGroup.add(vertex);\n\n        } else if (this.type === 'point') {\n\n          const vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n          this.vertexGroup.add(vertex.line);\n\n        }\n\n      }\n\n    } else if (color === 'partite') {\n\n      for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n        for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n          if (this.type === 'ball') {\n\n            const vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius / this.numVertices, 32);\n            const vertexMaterial = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n            const vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n            this.vertexGroup.add(vertex);\n\n          } else if (this.type === 'point') {\n\n            const vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n            this.vertexGroup.add(vertex.line);\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  // assign coords to vertices in graph\n  assignVertexCoordinates (layout, angle = 0) {\n\n     if (layout === 'polar') {\n\n         const n = this.numVertices;\n\n         for (let i = 0; i < n; ++i) {\n\n           this.vertexGroup.children[i].position.set(\n             this.center[0] + this.radius * Math.cos(phi(i, n) + angle),\n             this.center[1] + this.radius * Math.sin(phi(i, n) + angle),\n             0\n           );\n\n         }\n\n     } else if (layout === 'partite') {\n\n         let count = 0;\n         const numSides = this.partitionSizes.length;\n\n         if (numSides === 1) {\n\n           const sideScale = (2 * this.radius / (this.partitionSizes[0] + 1));\n\n           if (this.partitionSizes[0] % 2 === 1) {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 const sideSpacing = j - Math.floor(this.partitionSizes[0] / 2)\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           } else {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 const sideSpacing = (j + ((1 - this.partitionSizes[0]) / 2));\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           }\n\n         } else {\n\n           for (let i = 0; i < numSides; ++i) {\n\n               const sideAngle = phi(i, numSides) + angle;\n               const sideScale = (2 * this.radius * Math.sin(Math.PI / numSides) / (this.partitionSizes[i] + 1));\n\n               if (this.partitionSizes[i] % 2 === 1) {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     const sideSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               } else {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     const sideSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               }\n\n               count += this.partitionSizes[i];\n\n           }\n\n         }\n\n     } else if (layout === 'concentric') {\n\n         let count = 0;\n\n         for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n             for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                 if (this.partitionSizes[i] !== 1) {\n\n                   this.vertexGroup.children[count + j].position.set(\n                     this.center[0] + this.radius * (this.radius + i) * Math.cos(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     this.center[1] + this.radius * (this.radius + i) * Math.sin(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     0\n                   );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     } else if (layout === 'grid') {\n\n         let count = 0;\n         const numLevels = this.partitionSizes.length;\n\n         for (let i = 0; i < numLevels; ++i) {\n\n             const levelScale = (2 * this.radius * Math.sin(Math.PI / numLevels) / (this.partitionSizes[i] + 1));\n             const interLevelSpacing = (i - Math.floor(numLevels / 2)) / numLevels;\n\n             if (this.partitionSizes[i] % 2 === 1) {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                   const intraLevelSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                   this.vertexGroup.children[count + j].position.set(\n                     levelScale * intraLevelSpacing,\n                     interLevelSpacing,\n                     0\n                   );\n\n                 }\n\n             } else {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     const intraLevelSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       levelScale * intraLevelSpacing,\n                       interLevelSpacing,\n                       0\n                     );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     }\n\n  }\n\n  addEdges (type) {\n\n    const n = this.numVertices;\n\n     if (type === 'complete') {\n\n         for (let i = 0; i < n - 1; ++i) {\n\n           for (let j = i + 1; j < n; ++j) {\n\n             const edgeGeometry = new THREE.Geometry();\n\n             const edgeMaterial = new THREE.LineBasicMaterial(\n              {\n                color: 0xffffff\n              }\n             );\n\n             edgeGeometry.vertices.push(\n               this.vertexGroup.children[i].position,\n               this.vertexGroup.children[j].position\n             );\n\n             const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n             this.edgeGroup.add(edge);\n\n           }\n\n         }\n\n     } else if (type === 'cycle') {\n\n       for (let i = 0; i < n; ++i) {\n\n         const edgeGeometry = new THREE.Geometry();\n\n         const edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n          if (i < n - 1) {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[i + 1].position\n            );\n          } else {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[0].position\n            );\n          }\n\n         const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'path') {\n\n       for (let i = 0; i < n - 1; ++i) {\n\n         const edgeGeometry = new THREE.Geometry();\n\n         const edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[i].position,\n           this.vertexGroup.children[i + 1].position\n         );\n\n         const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'wheel') {\n\n       for (let i = 1; i < n; ++i) {\n\n         const edgeGeometry = new THREE.Geometry();\n\n         const edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[0].position,\n           this.vertexGroup.children[i].position\n         );\n\n         const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     }\n\n     this.numEdges = this.edgeGroup.length;\n\n  }\n\n  initialize (type = 'null', layout = 'polar', angle = 0, color = 'partite') {\n    this.createVertexSet(color);\n    this.assignVertexCoordinates(layout, angle);\n    this.addEdges(type);\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three_conversion#art_blanket',\n  category: 'art',\n  controllable: false,\n  dynamic: false,\n  hidden: true,\n  name: 'blanket',\n  parameters: {\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numFaces: {\n      label: 'Number of Faces',\n      defaultValue: 4,\n      currentValue: 4,\n      maxValue: 500,\n      minValue: 3\n    }\n  },\n  text: 'blanket'\n}\n\nexport default class Blanket extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      const geometry = new THREE.CircleBufferGeometry((10 / (2 * this.numPolygons - i + 1)), this.numFaces);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      mesh.rotateZ(Math.PI * i / 4);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_bounce_ripple',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'bounce ripple',\n  parameters: {\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    radius: {\n      label: 'Radius',\n      defaultValue: 3,\n      currentValue: 3,\n      maxValue: 6,\n      minValue: 1\n    }\n  },\n  text: 'bounce ripple'\n}\n\nexport default class BounceRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    const x = [0, 0, 0];\n    const col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      const r = this.radius * i / 10;\n      const poly = new polygon(x, r, 100, 0, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].scale.set(Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), 1);\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_chrysanthedad',\n\tcategory: 'art',\n\tcontrollable: false,\n\tdynamic: true,\n\thidden: false,\n\tname: 'chrysanthedad',\n\tparameters: {\n\t\tnumCenters: {\n\t\t\tlabel: 'Number of Centers',\n\t\t\tdefaultValue: 4,\n\t\t\tcurrentValue: 4,\n\t\t\tmaxValue: 32,\n\t\t\tminValue: 2\n\t\t},\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 32,\n\t\t\tcurrentValue: 32,\n\t\t\tmaxValue: 32,\n\t\t\tminValue: 2\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 30,\n\t\t\tcurrentValue: 30,\n\t\t\tmaxValue: 32,\n\t\t\tminValue: 1\n\t\t},\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 8,\n\t\t\tminValue: 1\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 10,\n\t\t\tminValue: 1\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 8,\n\t\t\tminValue: 1\n\t\t}\n\t},\n\ttext: 'chrysanthedad'\n}\n\nexport default class Chrysanthedad extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n\tdraw () {\n\n\t\tconst center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1],\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.scene.position.set(0, 0, -5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].scale.set(1 + Math.cos((i % (this.numCenters * this.numPolygons)) * t / 75), 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75), 1);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_chrysanthemum',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: true,\n  name: 'chrysanthemum',\n  parameters: {\n    numNodes: {\n      label: 'Number of Nodes',\n      defaultValue: 8,\n      currentValue: 8,\n      maxValue: 120,\n      minValue: 4\n    },\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 16,\n      currentValue: 16,\n      maxValue: 120,\n      minValue: 12\n    },\n    polygonRadius: {\n      label: 'Polygon Radius',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 6,\n      minValue: 1\n    },\n    globalRadius: {\n      label: 'Global Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 6,\n      minValue: 1\n    }\n  },\n  text: 'chrysanthemum'\n}\n\nexport default class Chrysanthemum extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tconst x = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tx[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\tx[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n            const poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n            this.scene.add(poly.line);\n\n          }\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -4);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-3;\n      } else {\n       this.scene.children[i].rotation.z += 1e-3;\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_chrysanthemum2',\n  category: 'art',\n  controllable: true,\n  dynamic: true,\n  hidden: true,\n  name: 'chrysanthemum2',\n  parameters: {\n    numNodes: {\n      label: 'Number of Nodes',\n      defaultValue: 12,\n      currentValue: 12,\n      maxValue: 1000,\n      minValue: 0\n    },\n    polygonRadius: {\n      label: 'Polygon Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 1000,\n      minValue: 0\n    },\n    globalRadius: {\n      label: 'Global Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 1000,\n      minValue: 0\n    }\n  },\n  text: 'chrysanthemum 2'\n}\n\nexport default class Chrysanthemum2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          const poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_chrysanthemum3',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: true,\n  name: 'chrysanthemum3',\n  parameters: {\n    numNodes: {\n      label: 'Number of Nodes',\n      defaultValue: 12,\n      currentValue: 12,\n      maxValue: 1000,\n      minValue: 0\n    },\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 12,\n      currentValue: 12,\n      maxValue: 1000,\n      minValue: 0\n    }\n  },\n  text: 'chrysanthemum 3'\n}\n\nexport default class Chrysanthemum3 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n        for (let j = 0; j < i; ++j) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\t2 * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t2 * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          const poly = new polygon(polyCenter, 2, this.numNodes, 0, colorNodes(i * j));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -2.5);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_chrysanthemum4',\n\tcategory: 'art',\n\tcontrollable: false,\n\tdynamic: true,\n\thidden: true,\n\tname: 'chrysanthemum4',\n\tparameters: {\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 12,\n\t\t\tcurrentValue: 12,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 10,\n\t\t\tcurrentValue: 10,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'chrysanthemum 4'\n}\n\nexport default class Chrysanthemum4 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n      for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3));\n\t\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_chrysanthemum5',\n\tcategory: 'art',\n\tcontrollable: false,\n\tdynamic: true,\n\thidden: true,\n\tname: 'chrysanthemum5',\n\tparameters: {\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'chrysanthemum 5'\n}\n\nexport default class Chrysanthemum5 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tconst polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -3);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateX(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-1e-2);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_chrysanthemum',\n\tcategory: 'art',\n\tcontrollable: false,\n\tdynamic: true,\n\thidden: false,\n\tname: 'chrysanthemum6',\n\tparameters: {\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 120,\n\t\t\tminValue: 4\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 16,\n\t\t\tcurrentValue: 16,\n\t\t\tmaxValue: 120,\n\t\t\tminValue: 12\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 6,\n\t\t\tminValue: 1\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 6,\n\t\t\tminValue: 1\n\t\t}\n\t},\n\ttext: 'chrysanthemum'\n}\n\nexport default class Chrysanthemum6 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tconst polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-3);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_chrysanthemum7',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: true,\n\thidden: true,\n\tname: 'chrysanthemum7',\n\tparameters: {\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'chrysanthemum 7'\n}\n\nexport default class Chrysanthemum7 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numPolygons; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numPolygons)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numPolygons)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t}\n\n    }\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-4);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_chrysanthemum8',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: true,\n\thidden: true,\n\tname: 'chrysanthemum8',\n\tparameters: {\n\t\tnumCenters: {\n\t\t\tlabel: 'Number of Centers',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 30,\n\t\t\tcurrentValue: 30,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 3,\n\t\t\tcurrentValue: 3,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 3,\n\t\t\tcurrentValue: 3,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'chrysanthemum8'\n}\n\nexport default class Chrysanthemum8 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n\t\tconst center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].position.set(0, 0, Math.sin((i % (this.numLayers * this.numPolygons)) * t / 150));\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_chrysanthemum9',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: true,\n\thidden: true,\n\tname: 'chrysanthemum9',\n\tparameters: {\n\t\tnumCenters: {\n\t\t\tlabel: 'Number of Centers',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 32,\n\t\t\tcurrentValue: 32,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 30,\n\t\t\tcurrentValue: 30,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'chrysanthemum 9'\n}\n\nexport default class Chrysanthemum9 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 8);\n\n  }\n\n  draw () {\n\n\t\tconst center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].position.set(0, 0, 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75));\n\n\t\t}\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_clam',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'clam',\n\tparameters: {\n\t\tnumRidges: {\n\t\t\tlabel: 'Number of Ridges',\n\t\t\tdefaultValue: 200,\n\t\t\tcurrentValue: 200,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tradius: {\n\t\t\tlabel: 'Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'clam'\n}\n\nexport default class Clam extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\tconst phi = [];\n\n\t\tfor (let i = 0; i <= this.numRidges; ++i) {\n\t\t\tphi.push(2 * Math.PI * i / this.numRidges);\n\t\t}\n\n\t\tconst vertices = new Float32Array(phi.length * 3);\n\n\t\tfor (let i = 0; i < phi.length; ++i) {\n\t\t\tvertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n\t\t\tvertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n\t\t\tvertices[3 * i + 2] = 0;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\t\tcolor: 0x00ffff\n\t\t\t}\n\t\t);\n\n\t\tconst line = new THREE.Line(geometry, material);\n\n\t\tthis.scene.add(line);\n\n\t\tfor (let i = 0; i < this.numRidges; ++i) {\n\n\t\t\tconst endpoints = new Float32Array(6);\n\n\t\t\tendpoints[0] = 0;\n\t\t\tendpoints[1] = 0;\n\t\t\tendpoints[2] = 0;\n\t\t\tendpoints[3] = vertices[(3 * i) + 0];\n\t\t\tendpoints[4] = vertices[(3 * i) + 1];\n\t\t\tendpoints[5] = vertices[(3 * i) + 2];\n\n\t\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew THREE.BufferAttribute(endpoints, 3)\n\t\t\t);\n\n\t\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t\t{\n\t\t\t\t\tcolor: 0x00ffff\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst line = new THREE.Line(geometry, material);\n\n\t\t\tthis.scene.add(line);\n\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_collide0scope',\n  category: 'art',\n  controllable: true,\n  dynamic: true,\n  hidden: true,\n  name: 'collide',\n  parameters: {\n    numCircles: {\n      label: 'Number of Circles',\n      defaultValue: 20,\n      currentValue: 20,\n      maxValue: 100,\n      minValue: 2\n    }\n  },\n  text: 'collide0scope'\n}\n\nexport default class Collide0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      const geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: true });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\n        this.scene.children[i].position.z += (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z -= 0.01 * Math.cos(t);\n\n      } else {\n\n        this.scene.children[i].position.z -= (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z += 0.01 * Math.sin(t);\n\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_concentric_polygons',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'concentric polygons',\n  parameters: {\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 3\n    },\n    numFaces: {\n      label: 'Number of Faces',\n      defaultValue: 4,\n      currentValue: 4,\n      maxValue: 48,\n      minValue: 3\n    }\n  },\n  text: 'concentric polygons'\n}\n\nexport default class ConcentricPolygons extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = this.numPolygons; i >= 1; i--) {\n\n      const geometry = new THREE.CircleBufferGeometry((10 / (this.numPolygons - i + 1)), this.numFaces);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * (this.scene.children.length - i) * Math.sin(t / 4);\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_concentric_polygons2',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'concentric polygons 2',\n  parameters: {\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 20,\n      currentValue: 20,\n      maxValue: 100,\n      minValue: 1\n    },\n    radius: {\n      label: 'Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 20,\n      minValue: 1\n    }\n  },\n  text: 'concentric polygons 2'\n}\n\nexport default class ConcentricPolygons2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    const x = [0, 0, 0];\n    const t = 0;\n    const col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      const r = this.radius * i / this.numPolygons;\n      const poly = new polygon(x, r, i + 2, t, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z = Math.sin(i) * t / 2;\n\t\t\t} else {\n        this.scene.children[i].rotation.z = Math.sin(-i) * t / 2;\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_fauxlidoscope',\n\tcameraZoomMax: 100,\n\tcameraZoomMin: 1,\n\tcategory: 'art',\n\tcontrollable: false,\n\tdynamic: true,\n\thidden: false,\n\tname: 'fauxlidoscope',\n\tparameters: {\n\t\tnumSteps: {\n\t\t\tlabel: 'Number of Steps',\n\t\t\tdefaultValue: 12,\n\t\t\tcurrentValue: 12,\n\t\t\tmaxValue: 120,\n\t\t\tminValue: 1\n\t\t},\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 20,\n\t\t\tcurrentValue: 20,\n\t\t\tmaxValue: 120,\n\t\t\tminValue: 2\n\t\t},\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 3\n\t\t},\n\t\tnumLanes: {\n\t\t\tlabel: 'Number of Lanes',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 60,\n\t\t\tminValue: 2\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 1\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 10,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'fauxlidoscope'\n}\n\nexport default class Fauxlidoscope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSteps = parseFloat(this.parameters.numSteps.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.cameraAmplitude = (animation.cameraZoomMax - animation.cameraZoomMin) / 2;\n\t\tthis.cameraDisplacement = (animation.cameraZoomMax + animation.cameraZoomMin) / 2\n\n  }\n\n  draw () {\n\n\t\tconst concentricPolygonGroup = new THREE.Group();\n\n    for (let i = 0; i < this.numLayers; ++i) {\n\n\t\t\tconst layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tfor (let k = 1; k <= this.numSteps; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius / k, this.numNodes, Math.PI / 2, colorNodes(3));\n\n\t\t\t\t\tlayerGroup.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconcentricPolygonGroup.add(layerGroup);\n\n    }\n\n\t\tthis.scene.add(concentricPolygonGroup);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      }\n\n    }\n\n\t\tthis.camera.position.set(0, 0, this.cameraAmplitude * Math.sin(1e-1 * t + phi(3, 4)) + this.cameraDisplacement);\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tFlower\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_flowers',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'flowers',\n\tparameters: {\n\t\tnumFlowers: {\n\t\t\tlabel: 'Number of Flowers',\n\t\t\tdefaultValue: 3,\n\t\t\tcurrentValue: 3,\n\t\t\tmaxValue: 10,\n\t\t\tminValue: 1\n\t\t},\n\t\tnumPetals: {\n\t\t\tlabel: 'Number of Petals',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 256,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 2\n\t\t},\n\t\tpetalRadius: {\n\t\t\tlabel: 'Petal Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1,\n\t\t\tminValue: 1\n\t\t}\n\t},\n\ttext: 'flowers'\n}\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numFlowers = parseFloat(this.parameters.numFlowers.currentValue);\n\t\tthis.numPetals = parseFloat(this.parameters.numPetals.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.petalRadius = parseFloat(this.parameters.petalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tconst root = [0, -this.numFlowers, 0];\n\n\t\tlet pistol = [0, 0, 0];\n\n\t\tfor (let i = 0; i < this.numFlowers; ++i) {\n\n\t\t\tif (this.numFlowers % 2 === 0) {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - ((this.numFlowers - 1) / 2)),\n\t\t\t\t\t(this.numFlowers - 1) / 2,\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - Math.floor(this.numFlowers / 2)),\n\t\t\t\t\tMath.floor(this.numFlowers / 2),\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tconst flower = new Flower(root, pistol, this.petalRadius, this.numPetals, this.numNodes, colorNodes(i), colorNodes(2));\n\t\t\tthis.scene.add(flower.stem);\n\t\t\tthis.scene.add(flower.petalGroup);\n\t\t\tthis.scene.add(flower.pistol);\n\n\t\t\tthis.scene.position.set(0, 0, 1 - this.numFlowers);\n\n\t\t}\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_gyr0scope',\n  category: 'art',\n  controllable: true,\n  dynamic: true,\n  hidden: true,\n  name: 'gyro',\n  parameters: {\n    numCircles: {\n      label: 'Number of Circles',\n      defaultValue: 3,\n      currentValue: 3,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 100,\n      minValue: 0\n    }\n  },\n  text: 'gyr0scope'\n}\n\nexport default class Gyr0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      const geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: true });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, 1.5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      const r = 1;\n\n\t\t\tthis.scene.children[i].scale.set(1, r * Math.cos(t / 2), i + 1);\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-2 * this.rate * i * Math.cos(i * t);\n\n      } else {\n        this.scene.children[i].rotation.z += 1e-2 * this.rate * i * Math.sin(i * t);\n\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_pearl',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'pearl',\n\tparameters: {\n\t\tnumRidges: {\n\t\t\tlabel: 'Number of Ridges',\n\t\t\tdefaultValue: 200,\n\t\t\tcurrentValue: 200,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tradius: {\n\t\t\tlabel: 'Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'pearl'\n}\n\nexport default class Pearl extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\tconst phi = [];\n\n\t\tfor (let i = 0; i <= this.numRidges; ++i) {\n\t\t\tphi.push(2 * Math.PI * i / this.numRidges);\n\t\t}\n\n\t\tconst vertices = new Float32Array(phi.length * 3);\n\n\t\tfor (let i = 0; i < phi.length; ++i) {\n\t\t\tvertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n\t\t\tvertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n\t\t\tvertices[3 * i + 2] = 0;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\tcolor: 0x00ffff\n\t\t\t}\n\t\t);\n\n\t\tconst line = new THREE.Line(geometry, material);\n\n\t\tthis.scene.add(line);\n\n\t\tfor (let i = 0; i < this.numRidges; ++i) {\n\n\t\t\tconst endpoints = new Float32Array(6);\n\n\t\t\tendpoints[0] = 0;\n\t\t\tendpoints[1] = 0;\n\t\t\tendpoints[2] = 0;\n\t\t\tendpoints[3] = vertices[(3 * i) + 0];\n\t\t\tendpoints[4] = vertices[(3 * i) + 1];\n\t\t\tendpoints[5] = vertices[(3 * i) + 2];\n\n\t\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew THREE.BufferAttribute(endpoints, 3)\n\t\t\t);\n\n\t\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t\t{\n\t\t\t\t\tcolor: 0x00ffff\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst line = new THREE.Line(geometry, material);\n\n\t\t\tthis.scene.add(line);\n\n\t\t}\n\n\t\tconst pearlGeometry = new THREE.CircleBufferGeometry(this.radius / 10, 32);\n\n\t\tconst pearlMaterial = new THREE.MeshBasicMaterial(\n\t\t\t{\n\t\t\t\tcolor: 0xffffff\n\t\t\t}\n\t\t);\n\n\t\tconst pearl = new THREE.Mesh(pearlGeometry, pearlMaterial);\n\n\t\tthis.scene.add(pearl);\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_pinwheel',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'pinwheel',\n  parameters: {\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 20,\n      minValue: 1\n    },\n    numFaces: {\n      label: 'Number of Faces',\n      defaultValue: 4,\n      currentValue: 4,\n      maxValue: 32,\n      minValue: 3\n    }\n  },\n  text: 'pinwheel'\n}\n\nexport default class Pinwheel extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      const geometry = new THREE.CircleBufferGeometry((20 / (2 * this.numPolygons - (i / 2) + 1)), this.numFaces);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i + 1), wireframe: false });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * t * ((this.scene.children.length / 2) - i) * Math.PI * i / 160;\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tsacredGeometry\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_snowflake',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: true,\n\thidden: false,\n\tname: 'snowflake',\n\tparameters: {\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 12,\n\t\t\tminValue: 1\n\t\t},\n\t\tnumLanes: {\n\t\t\tlabel: 'Number of Lanes',\n\t\t\tdefaultValue: 12,\n\t\t\tcurrentValue: 12,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 8\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 12,\n\t\t\tcurrentValue: 12,\n\t\t\tmaxValue: 100,\n\t\t\tminValue: 3\n\t\t},\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 2\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\trate: {\n\t\t\tlabel: 'Rate',\n\t\t\tdefaultValue: 10,\n\t\t\tcurrentValue: 10,\n\t\t\tmaxValue: 500,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'snowflake'\n}\n\nexport default class Snowflake extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tconst layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < i * this.numLanes; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst geom = new sacredGeometry(polyCenter, this.numPolygons, this.numNodes, this.polygonRadius, this.globalRadius, colorNodes(3));\n\n\t\t\t\tlayerGroup.add(geom.geomGroup);\n\n\t\t\t}\n\n\t\t\tthis.scene.add(layerGroup);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tfor (let j = 0; j < this.scene.children[i].children.length; ++j) {\n\n\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, this.rate * 1e-2 * t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, -this.rate * 1e-2 * t);\n\t\t\t\t}\n\n\t\t\t}\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_slosh_ripple',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'slosh ripple',\n  parameters: {\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 200,\n      currentValue: 200,\n      maxValue: 500,\n      minValue: 10\n    },\n    radius: {\n      label: 'Radius',\n      defaultValue: 3,\n      currentValue: 3,\n      maxValue: 10,\n      minValue: 1\n    }\n  },\n  text: 'slosh ripple'\n}\n\nexport default class SloshRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    const x = [0, 0, 0];\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      const r = this.radius * i / 10;\n      const poly = new polygon(x, r, 100, 0, colorNodes(i - 1));\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\t\t\tif (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].scale.set(Math.cos(phi(i, 100) + t / 100), Math.cos(phi(i, 100) + t / 100), 1);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[i].scale.set(Math.sin(phi(i, 100) + t / 100), Math.sin(phi(i, 100) + t / 100), 1);\n\t\t\t}\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tStar\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#art_starry_night',\n\tcategory: 'art',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: false,\n\tname: 'starry night',\n\tparameters: {\n\t\tnumStars: {\n\t\t\tlabel: 'Number of Stars',\n\t\t\tdefaultValue: 42,\n\t\t\tcurrentValue: 42,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 1\n\t\t},\n\t\tnumStems: {\n\t\t\tlabel: 'Number of Stems',\n\t\t\tdefaultValue: 12,\n\t\t\tcurrentValue: 12,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 2\n\t\t},\n\t\tnumSplits: {\n\t\t\tlabel: 'Number of Splits',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 8,\n\t\t\tminValue: 1\n\t\t},\n\t\tradius: {\n\t\t\tlabel: 'Radius',\n\t\t\tdefaultValue: 42,\n\t\t\tcurrentValue: 42,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 1\n\t\t}\n\t},\n\ttext: 'starry night'\n}\n\nexport default class StarryNight extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numStars = parseFloat(this.parameters.numStars.currentValue);\n\t\tthis.numStems = parseFloat(this.parameters.numStems.currentValue);\n\t\tthis.numSplits = parseFloat(this.parameters.numSplits.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numStars; ++i) {\n\n\t\t\tconst starCenter = [\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.cos(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.sin(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius)\n\t\t\t];\n\n\t\t\tconst starRadius = Math.abs(Math.random() - 0.5);\n\n\t\t\tconst star = new Star(starCenter, this.numStems, this.numSplits, starRadius, colorNodes(i, 'hot'));\n\n\t\t\tthis.scene.add(star.stemGroup);\n\t\t\tthis.scene.add(star.splitGroup);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#art_wriggling_donut',\n  category: 'art',\n  controllable: false,\n  dynamic: true,\n  hidden: true,\n  name: 'wriggling donut',\n  parameters: {\n    numNodes: {\n      label: 'Number of Nodes',\n      defaultValue: 40,\n      currentValue: 40,\n      maxValue: 1000,\n      minValue: 0\n    },\n    numPolygons: {\n      label: 'Number of Polygons',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 1000,\n      minValue: 0\n    },\n    polygonRadius: {\n      label: 'Polygon Radius',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 1000,\n      minValue: 0\n    },\n    globalRadius: {\n      label: 'Global Radius',\n      defaultValue: 0.2,\n      currentValue: 0.2,\n      maxValue: 1000,\n      minValue: 0\n    }\n  },\n  text: 'wriggling donut'\n}\n\nexport default class WrigglingDonut extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n\n    for (let i = 1; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tx = [\n            this.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes)) * Math.sin(phi(i, this.numPolygons))),\n            this.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes)) * Math.cos(phi(i, this.numPolygons))),\n            0\n\t\t\t\t\t];\n\n          const poly = new polygon(x, this.polygonRadius, this.numNodes, 0, colorNodes(1));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotateZ(-10 * (Math.sin(t / 10) + Math.cos(t / 10)));\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#math_mosaic',\n\tcategory: 'math',\n\tcontrollable: true,\n\tdynamic: true,\n\thidden: true,\n\tname: 'mosaic',\n\tparameters: {\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 3\n\t\t},\n\t\tnumPolygons: {\n\t\t\tlabel: 'Number of Polygons',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 8,\n\t\t\tcurrentValue: 8,\n\t\t\tmaxValue: 100,\n\t\t\tminValue: 2\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 3,\n\t\t\tcurrentValue: 3,\n\t\t\tmaxValue: 50,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 50,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'mosaic'\n}\n\nexport default class Mosaic extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tconst polyClusterCenter = [\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.polygonRadius * Math.cos(phi(j, this.numNodes)),\n\t\t\t\t\tthis.polygonRadius * Math.sin(phi(j, this.numNodes)),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numLayers; ++k) {\n\n\t\t\t\t\tfor (let l = 0; l < this.numPolygons; ++l) {\n\n\t\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tk * (polyClusterCenter[0] + polyCenterOffset[0]) * Math.sin(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\tk * (polyClusterCenter[1] + polyCenterOffset[1]) * Math.cos(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i, 'cool'), 'relative');\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].position.set(0, Math.sin(t / 10) / this.polygonRadius, 0);\n      } else {\n\t\t\t\tthis.scene.children[i].position.set(0, -Math.sin(t / 10) / this.polygonRadius, 0);\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#math_mosaic2',\n\tcategory: 'math',\n\tcontrollable: false,\n\tdynamic: true,\n\thidden: false,\n\tname: 'mosaic2',\n\tparameters: {\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 40,\n\t\t\tcurrentValue: 40,\n\t\t\tmaxValue: 120,\n\t\t\tminValue: 1\n\t\t},\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 64,\n\t\t\tcurrentValue: 64,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 3\n\t\t},\n\t\tnumLanes: {\n\t\t\tlabel: 'Number of Lanes',\n\t\t\tdefaultValue: 24,\n\t\t\tcurrentValue: 24,\n\t\t\tmaxValue: 120,\n\t\t\tminValue: 4\n\t\t},\n\t\tpolygonRadius: {\n\t\t\tlabel: 'Polygon Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 20,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 0.5,\n\t\t\tcurrentValue: 0.5,\n\t\t\tmaxValue: 5,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'mosaic'\n}\n\nexport default class Mosaic2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tconst group1 = new THREE.Group();\n\t\tconst group2 = new THREE.Group();\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(3), 'relative');\n\n\t\t\t\tgroup1.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tfor (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(4));\n\n\t\t\t\tgroup2.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tthis.scene.add(group1);\n\t\tthis.scene.add(group2);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % (2) === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-1e-3);\n      }\n\n    }\n\n\t\tfor (let i = 0; i < this.scene.children[1].children.length; ++i) {\n\n\t\t\tif (i % (2) === 0) {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\toffsetStar\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#math_star',\n\tcategory: 'math',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'star',\n\tparameters: {\n\t\tnumVertices: {\n\t\t\tlabel: 'Number of Vertices',\n\t\t\tdefaultValue: 10,\n\t\t\tcurrentValue: 10,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tradius: {\n\t\t\tlabel: 'Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\toffset: {\n\t\t\tlabel: 'Offset',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'star'\n}\n\nexport default class OffsetStar extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.offset = parseFloat(this.parameters.offset.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t}\n\n\tdraw () {\n\n\t\tconst x = [0, 0, 0];\n\t\tconst star = new offsetStar(this.numVertices, x, this.radius, 0, this.offset, this.color);\n\n\t\tthis.scene.add(star.line);\n\n\t}\n\n}\n","import Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#math_sacred_circles',\n\tcategory: 'math',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: false,\n\tname: 'sacred circles',\n\tparameters: {\n\t\tnumLayers: {\n\t\t\tlabel: 'Number of Layers',\n\t\t\tdefaultValue: 12,\n\t\t\tcurrentValue: 12,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 3\n\t\t},\n\t\tnumCircles: {\n\t\t\tlabel: 'Number of Circles',\n\t\t\tdefaultValue: 12,\n\t\t\tcurrentValue: 12,\n\t\t\tmaxValue: 64,\n\t\t\tminValue: 1\n\t\t},\n\t\tcircleRadius: {\n\t\t\tlabel: 'Circle Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 5,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 10,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'sacred circles'\n}\n\nexport default class SacredCircles extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.circleRadius = parseFloat(this.parameters.circleRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t\tthis.camera.position.set(0, 0, 4);\n\n\t}\n\n\tdraw () {\n\n\t\tlet center = [0, 0, 0];\n\n\t\tfor (let i = 0; i < this.numCircles; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tcenter = [\n\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numCircles)) + Math.sin(phi(j, this.numLayers))),\n\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numCircles)) + Math.cos(phi(j, this.numLayers))),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(center, this.circleRadius, 100, 0, this.color);\n\n\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#math_unoriginal',\n\tcategory: 'math',\n\tcontrollable: true,\n\tdynamic: true,\n\thidden: false,\n\tname: 'unoriginal',\n\tparameters: {\n\t\tnumNodes: {\n\t\t\tlabel: 'Number of Nodes',\n\t\t\tdefaultValue: 24,\n\t\t\tcurrentValue: 24,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 3\n\t\t},\n\t\tnodeRadius: {\n\t\t\tlabel: 'Node Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 10,\n\t\t\tminValue: 0\n\t\t},\n\t\tglobalRadius: {\n\t\t\tlabel: 'Global Radius',\n\t\t\tdefaultValue: 2,\n\t\t\tcurrentValue: 2,\n\t\t\tmaxValue: 10,\n\t\t\tminValue: 0\n\t\t},\n\t\trate: {\n\t\t\tlabel: 'Rate',\n\t\t\tdefaultValue: 4,\n\t\t\tcurrentValue: 4,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tdivisor: {\n\t\t\tlabel: 'Divisor',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 100,\n\t\t\tminValue: 1\n\t\t}\n\t},\n\ttext: 'unoriginal'\n}\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.nodeRadius = parseFloat(this.parameters.nodeRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\t\tthis.divisor = parseFloat(this.parameters.divisor.currentValue);\n\n  }\n\n  draw () {\n\n\t\tconst geometry = new THREE.CircleBufferGeometry(this.globalRadius, this.numNodes);\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0xffffff, wireframe: true });\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t\tif (this.numNodes > 100) {\n\t\t\tmesh.visible = false;\n\t\t}\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tconst geometry = new THREE.CircleBufferGeometry(this.nodeRadius / 10, 32);\n\t\t\tconst material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n\t\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\t\tmesh.position.set(\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t);\n\n\t\t\tthis.scene.add(mesh);\n\n\t\t}\n\n  }\n\n  update (t) {\n\n\t\tconst n = this.numNodes / this.divisor;\n\t\tconst rate = this.rate;\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tif (Math.floor(rate * t) >= i % n) {\n\n\t\t\t\tthis.scene.children[i + 1].position.set(\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\t0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nexport const metadata = {\n  active: false,\n  address: '/three#physics_sine_wave',\n  category: 'physics',\n  controllable: true,\n  dynamic: false,\n  hidden: true,\n  name: 'sine wave',\n  parameters: {\n    amplitude: {\n      label: 'Amplitude',\n      defaultValue: 0.5,\n      currentValue: 0.5,\n      maxValue: 1000,\n      minValue: 0\n    },\n    frequency: {\n      label: 'Frequency',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 1000,\n      minValue: 0\n    },\n    phase: {\n      label: 'Phase',\n      defaultValue: 0,\n      currentValue: 0,\n      maxValue: 1000,\n      minValue: 0\n    },\n    displacement: {\n      label: 'Displacement',\n      defaultValue: 0,\n      currentValue: 0,\n      maxValue: 1000,\n      minValue: 0\n    },\n    numPoints: {\n      label: 'Number of Points',\n      defaultValue: 1500,\n      currentValue: 1500,\n      maxValue: 1000,\n      minValue: 0\n    }\n  },\n  text: 'sine wave'\n}\n\nexport default class SineWave extends Animation {\n\n  constructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.amplitude = parseFloat(this.parameters.amplitude.currentValue);\n    this.frequency = parseFloat(this.parameters.frequency.currentValue);\n    this.phase = parseFloat(this.parameters.phase.currentValue);\n    this.displacement = parseFloat(this.parameters.displacement.currentValue);\n    this.numPoints = parseFloat(this.parameters.numPoints.currentValue);\n\n  }\n\n  draw () {\n\n    const node_x = [];\n    const node_y = [];\n\n    for (let i = -this.numPoints; i <= this.numPoints; ++i) {\n      node_x.push(i / 1000);\n      node_y.push(this.amplitude * Math.sin(this.frequency * node_x[i + this.numPoints] + this.phase) + this.displacement);\n\n    }\n\n    const vertices = new Float32Array(node_x.length * 3);\n\n    for (let i = 0; i < node_x.length; ++i) {\n      vertices[3 * i + 0] = node_x[i];\n      vertices[3 * i + 1] = node_y[i];\n      vertices[3 * i + 2] = 0;\n    }\n\n    const geometry = new THREE.BufferGeometry();\n\n    geometry.setAttribute(\n      'position',\n      new THREE.BufferAttribute(vertices, 3)\n    );\n\n    const material = new THREE.LineBasicMaterial(\n      {\n        color: 0x00ffff\n      }\n    );\n\n    const line = new THREE.Line(geometry, material);\n\n    this.scene.add(line);\n\n  }\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#shapes_circle',\n\tcategory: 'shapes',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'circle',\n\tparameters: {\n\t\tnumSpokes: {\n\t\t\tlabel: 'Number of Spokes',\n\t\t\tdefaultValue: 5,\n\t\t\tcurrentValue: 5,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tradius: {\n\t\t\tlabel: 'Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'circle'\n}\n\nexport default class Circle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSpokes = parseFloat(this.parameters.numSpokes.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.CircleBufferGeometry(this.radius, this.numSpokes);\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0x00ffff, wireframe: true });\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#shapes_cube',\n\tcategory: 'shapes',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'cube',\n\tparameters: [],\n\ttext: 'cube'\n}\n\nexport default class Cube extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0x00ffff, wireframe: false });\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import * as THREE from 'three';\nimport Animation from '../animation';\n\nimport {\n\n\tphi\n\n} from '../utils';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#polystarter',\n\tcategory: 'shapes',\n\tcontrollable: true,\n\tdynamic: true,\n\thidden: true,\n\tname: 'polystarter',\n\tparameters: {\n\t\tradius: {\n\t\t\tlabel: 'Radius',\n\t\t\tdefaultValue: 1,\n\t\t\tcurrentValue: 1,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\tnumVertices: {\n\t\t\tlabel: 'Number of Vertices',\n\t\t\tdefaultValue: 6,\n\t\t\tcurrentValue: 6,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t},\n\t\ttheta: {\n\t\t\tlabel: 'Theta',\n\t\t\tdefaultValue: 0,\n\t\t\tcurrentValue: 0,\n\t\t\tmaxValue: 1000,\n\t\t\tminValue: 0\n\t\t}\n\t},\n\ttext: 'polystarter'\n}\n\nexport default class Polygon extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.center = [0, 0];\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.theta = parseFloat(this.parameters.theta.currentValue);\n\t\tthis.color = 0xf00a00;\n\n\t}\n\n\tdraw () {\n\n\t\tthis.vertices = new Float32Array(this.numVertices * 3);\n\n\t\tfor (let i = 0; i < this.numVertices; ++i) {\n\t\t\tthis.vertices[3 * i + 0] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n\t\t\tthis.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n\t\t\tthis.vertices[3 * i + 2] = 0;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(this.vertices, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\t\tcolor: this.color\n\t\t\t}\n\t\t);\n\n\t\tthis.line = new THREE.LineLoop(geometry, material);\n\n\t\tthis.scene.add(this.line);\n\t}\n\n\tupdate () {\n\n\t\tfor (let i = 0; i < this.scene.children.length; ++i) {\n\t\t\tthis.scene.children[i].rotation.z += 1;\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#shapes_rectangle',\n\tcategory: 'shapes',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'rectangle',\n\tparameters: [],\n\ttext: 'rectangle'\n}\n\nexport default class Rectangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\t/* eslint-disable no-mixed-spaces-and-tabs */\n\t\tconst vertices = new Float32Array([\n\t\t\t-0.5, -0.5, 0.0,\n\t\t\t 0.5, -0.5, 0.0,\n\t\t\t 0.5,  0.5, 0.0,\n\t\t\t-0.5,  0.5, 0.0,\n\t\t\t-0.5, -0.5, 0.0,\n\t\t\t 0.5,  0.5, 0.0\n\t\t]);\n\n\t\tconst colors = new Float32Array([\n\t\t\t1.0, 0.0, 0.0,\n\t\t\t0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 1.0,\n\t\t\t0.0, 1.0, 1.0,\n\t\t\t1.0, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0\n\t\t]);\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tgeometry.setAttribute(\n\t\t\t'color',\n\t\t\tnew THREE.BufferAttribute(colors, 3)\n\t\t);\n\n\t\tconst material = new THREE.MeshBasicMaterial(\n\t\t\t{\n\t\t\t\tvertexColors: THREE.VertexColors,\n\t\t\t\twireframe: false\n\t\t\t}\n\t\t);\n\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../animation';\n\nexport const metadata = {\n\tactive: false,\n\taddress: '/three#shapes_triangle',\n\tcategory: 'shapes',\n\tcontrollable: true,\n\tdynamic: false,\n\thidden: true,\n\tname: 'triangle',\n\tparameters: [],\n\ttext: 'triangle'\n}\n\nexport default class Triangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tconst vertices = new Float32Array([\n\t\t-0.5, -0.5, 0.0,\n\t\t\t0.5, -0.5, 0.0,\n\t\t\t0.0,  0.5, 0.0\n\t\t]);\n\n\t\tconst colors = new Float32Array([\n\t\t\t1.0, 0.0, 0.0,\n\t\t\t0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 1.0\n\t\t]);\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tgeometry.setAttribute(\n\t\t\t'color',\n\t\t\tnew THREE.BufferAttribute(colors, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\t\tvertexColors: THREE.VertexColors\n\t\t\t}\n\t\t);\n\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_amparo',\n  category: 'simulations',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'amparo',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    }\n  },\n  text: 'amparo'\n}\n\nexport default class Amparo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n\t\tthis.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\tthis.graph.radius * Math.sin(i * i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_andorinha',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'andorinha',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 6,\n      currentValue: 6,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 500,\n      currentValue: 500,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2.25,\n      currentValue: 2.25,\n      maxValue: 100,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    }\n  },\n  text: 'andorinha'\n}\n\nexport default class Andorinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.cos(i * this.rate * t / this.graph.numVertices),\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_antigua',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'antigua',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 50,\n      currentValue: 50,\n      maxValue: 1000,\n      minValue: 10\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 10,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 20,\n      currentValue: 20,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 50,\n      minValue: 1\n    }\n  },\n  text: 'antigua'\n}\n\nexport default class Antigua extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n    let count = 0;\n\n    for (let i = 0; i < this.graph.partitionSizes.length; ++i) {\n\n      for (let j = 0; j < this.graph.partitionSizes[i]; ++j) {\n        this.graph.vertexGroup.children[count + j].position.set(\n          this.graph.vertexGroup.children[count + j].position.x + Math.cos(phi(this.rate * t, i + 1)) / 5e2,\n          this.graph.vertexGroup.children[count + j].position.y + Math.sin(phi(this.rate * t, i + 1)) / 5e2,\n          0\n        );\n      }\n\n      count += this.graph.partitionSizes[i];\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_batidinha',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'batidinha',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 40,\n      currentValue: 40,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    }\n  },\n  text: 'batidinha'\n}\n\nexport default class Batidinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_bicardi',\n  category: 'simulations',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'bicardi',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 8,\n      currentValue: 8,\n      maxValue: 10,\n      minValue: 2\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 10,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 100,\n      minValue: 2\n    }\n  },\n  text: 'bicardi'\n}\n\nexport default class Bicardi extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tthis.graphRadius * Math.sin(this.scene.children[0].children[i].position.y - t * this.rate / this.graph.numVertices) * Math.sin(this.scene.children[0].children[i].position.y - i * t * this.rate / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_blouse',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'blouse',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 6,\n      currentValue: 6,\n      maxValue: 100,\n      minValue: 2\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 100,\n      currentValue: 100,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'blouse'\n}\n\nexport default class Blouse extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update () {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_brazil',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'brazil',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 6,\n      currentValue: 6,\n      maxValue: 100,\n      minValue: 2\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 100,\n      minValue: 1\n    },\n    divisor: {\n      label: 'Divisor',\n      defaultValue: 20,\n      currentValue: 20,\n      maxValue: 1000,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 100,\n      minValue: 1\n    }\n  },\n  text: 'brazil'\n}\n\nexport default class Brazil extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_choro',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'choro',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 200,\n      currentValue: 200,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 50,\n      minValue: 1\n    }\n  },\n  text: 'choro'\n}\n\nexport default class Choro extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.graphRadius * Math.cos(phi(i, this.graph.numVertices) + this.rate * Math.sin(this.scene.children[0].children[i].position.x - t) / 10),\n\t\t\t\tthis.graphRadius * Math.sin(phi(i, this.graph.numVertices) + this.rate * Math.cos(this.scene.children[0].children[i].position.y - t) / 10),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_dialogo',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'dialogo',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 40,\n      currentValue: 40,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 10,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'dialogo'\n}\n\nexport default class Dialogo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_flower',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'flower',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 6,\n      currentValue: 6,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 200,\n      currentValue: 200,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 10,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 20,\n      currentValue: 20,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'flower'\n}\n\nexport default class Flower extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_games',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'games',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 6,\n      currentValue: 6,\n      maxValue: 100,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'games'\n}\n\nexport default class Games extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update () {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_lamento',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'lamento',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 6,\n      currentValue: 6,\n      maxValue: 100,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 100,\n      currentValue: 100,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'lamento'\n}\n\nexport default class Lamento extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_look',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'look',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 6,\n      currentValue: 6,\n      maxValue: 100,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 1000,\n      currentValue: 1000,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    dampening: {\n      label: 'Dampening',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    }\n  },\n  text: 'look'\n}\n\nexport default class Look extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.dampening = parseFloat(this.parameters.dampening.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 5);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update () {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      if (i % 4 === 0) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 1) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 2) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n    }\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_mojave',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'mojave',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 8,\n      currentValue: 8,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 200,\n      currentValue: 200,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'mojave'\n}\n\nexport default class Mojave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 4);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_sabia',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'sabia',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 8,\n      currentValue: 8,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 200,\n      currentValue: 200,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'sabia'\n}\n\nexport default class Sabia extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_tereza',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'tereza',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 8,\n      currentValue: 8,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 200,\n      currentValue: 200,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'tereza'\n}\n\nexport default class Tereza extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(t / 10) * Math.sin(this.rate * i * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * (i - 1) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_triste',\n  category: 'simulations',\n  controllable: true,\n  dynamic: true,\n  hidden: false,\n  name: 'triste',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 100,\n      currentValue: 100,\n      maxValue: 1000,\n      minValue: 1\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 200,\n      currentValue: 200,\n      maxValue: 1000,\n      minValue: 100\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 1,\n      currentValue: 1,\n      maxValue: 5,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 1\n    },\n    divisor: {\n      label: 'Divisor',\n      defaultValue: 20,\n      currentValue: 20,\n      maxValue: 1000,\n      minValue: 3\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 3,\n      currentValue: 3,\n      maxValue: 100,\n      minValue: 1\n    }\n  },\n  text: 'triste'\n}\n\nexport default class Triste extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(this.rate * (i % this.divisor) * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(this.rate * (i % this.divisor) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../utils';\n\nexport const metadata = {\n  active: false,\n  address: '/three#simulations_wave',\n  category: 'simulations',\n  controllable: false,\n  dynamic: true,\n  hidden: false,\n  name: 'wave',\n  parameters: {\n    numPartitions: {\n      label: 'Number of Partitions',\n      defaultValue: 2,\n      currentValue: 2,\n      maxValue: 100,\n      minValue: 2\n    },\n    numVertices: {\n      label: 'Number of Vertices',\n      defaultValue: 120,\n      currentValue: 120,\n      maxValue: 1000,\n      minValue: 10\n    },\n    graphRadius: {\n      label: 'Graph Radius',\n      defaultValue: 4,\n      currentValue: 4,\n      maxValue: 100,\n      minValue: 1\n    },\n    vertexRadius: {\n      label: 'Vertex Radius',\n      defaultValue: 10,\n      currentValue: 10,\n      maxValue: 100,\n      minValue: 1\n    },\n    rate: {\n      label: 'Rate',\n      defaultValue: 5,\n      currentValue: 5,\n      maxValue: 1000,\n      minValue: 1\n    }\n  },\n  text: 'wave'\n}\n\nexport default class Wave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tMath.sin(this.scene.children[0].children[i].position.y - t * this.rate / 100) * Math.sin(i * t * this.rate / 100),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","// art\nimport Blanket from './art/blanket';\nimport BounceRipple from './art/bounceRipple';\nimport Chrysanthedad from './art/chrysanthedad';\nimport Chrysanthemum from './art/chrysanthemum';\nimport Chrysanthemum2 from './art/chrysanthemum2';\nimport Chrysanthemum3 from './art/chrysanthemum3';\nimport Chrysanthemum4 from './art/chrysanthemum4';\nimport Chrysanthemum5 from './art/chrysanthemum5';\nimport Chrysanthemum6 from './art/chrysanthemum6';\nimport Chrysanthemum7 from './art/chrysanthemum7';\nimport Chrysanthemum8 from './art/chrysanthemum8';\nimport Chrysanthemum9 from './art/chrysanthemum9';\nimport Clam from './art/clam';\nimport Collide0scope from './art/collide0scope';\nimport ConcentricPolygons from './art/concentricPolygons';\nimport ConcentricPolygons2 from './art/concentricPolygons2';\nimport Fauxlidoscope from './art/fauxlidoscope';\nimport Flowers from './art/flowers';\nimport Gyr0scope from './art/gyr0scope';\nimport Pearl from './art/pearl';\nimport Pinwheel from './art/pinwheel';\nimport Snowflake from './art/snowflake';\nimport SloshRipple from './art/sloshRipple';\nimport StarryNight from './art/starryNight';\nimport WrigglingDonut from './art/wrigglingDonut';\n\n// math\nimport Mosaic from './math/mosaic';\nimport Mosaic2 from './math/mosaic2';\nimport OffsetStar from './math/offsetStar';\nimport SacredCircles from './math/sacredCircles';\nimport Unoriginal from './math/unoriginal';\n\n// physics\nimport SineWave from './physics/sineWave';\n\n// shapes\nimport Circle from './shapes/circle';\nimport Cube from './shapes/cube';\nimport Polygon from './shapes/polygon';\nimport Rectangle from './shapes/rectangle';\nimport Triangle from './shapes/triangle';\n\n// simulations\nimport Amparo from './simulations/amparo';\nimport Andorinha from './simulations/andorinha';\nimport Antigua from './simulations/antigua';\nimport Batidinha from './simulations/batidinha';\nimport Bicardi from './simulations/bicardi';\nimport Blouse from './simulations/blouse';\nimport Brazil from './simulations/brazil';\nimport Choro from './simulations/choro';\nimport Dialogo from './simulations/dialogo';\nimport Flower from './simulations/flower';\nimport Games from './simulations/games';\nimport Lamento from './simulations/lamento';\nimport Look from './simulations/look';\nimport Mojave from './simulations/mojave';\nimport Sabia from './simulations/sabia';\nimport Tereza from './simulations/tereza';\nimport Triste from './simulations/triste';\nimport Wave from './simulations/wave';\n\nconst ANIMATION_MAP = {\n  // art\n  blanket: Blanket,\n  'bounce ripple': BounceRipple,\n  chrysanthedad: Chrysanthedad,\n  chrysanthemum: Chrysanthemum,\n  chrysanthemum2: Chrysanthemum2,\n  chrysanthemum3: Chrysanthemum3,\n  chrysanthemum4: Chrysanthemum4,\n  chrysanthemum5: Chrysanthemum5,\n  chrysanthemum6: Chrysanthemum6,\n  chrysanthemum7: Chrysanthemum7,\n  chrysanthemum8: Chrysanthemum8,\n  chrysanthemum9: Chrysanthemum9,\n  collide: Collide0scope,\n  'concentric polygons': ConcentricPolygons,\n  'concentric polygons 2': ConcentricPolygons2,\n  fauxlidoscope: Fauxlidoscope,\n  flowers: Flowers,\n  gyro: Gyr0scope,\n  pinwheel: Pinwheel,\n  snowflake: Snowflake,\n  'slosh ripple': SloshRipple,\n  'starry night': StarryNight,\n  'wriggling donut': WrigglingDonut,\n  // math\n  mosaic: Mosaic,\n  mosaic2: Mosaic2,\n  'sacred circles': SacredCircles,\n  star: OffsetStar,\n  unoriginal: Unoriginal,\n  // physics\n  'sine wave': SineWave,\n  // shapes\n  circle: Circle,\n  clam: Clam,\n  cube: Cube,\n  pearl: Pearl,\n  polystarter: Polygon,\n  rectangle: Rectangle,\n  triangle: Triangle,\n  // simulations\n  amparo: Amparo,\n  andorinha: Andorinha,\n  antigua: Antigua,\n  batidinha: Batidinha,\n  bicardi: Bicardi,\n  blouse: Blouse,\n  brazil: Brazil,\n  choro: Choro,\n  dialogo: Dialogo,\n  flower: Flower,\n  games: Games,\n  lamento: Lamento,\n  look: Look,\n  mojave: Mojave,\n  sabia: Sabia,\n  tereza: Tereza,\n  triste: Triste,\n  wave: Wave\n};\n\nexport function generateAnimation (scene, camera, animation) {\n\n  if (ANIMATION_MAP[animation.name]) {\n    return new ANIMATION_MAP[animation.name](scene, camera, animation);\n  }\n\n}\n","import * as THREE from 'three';\n\nimport { generateAnimation } from '../animations/index';\n\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default class CanvasManager {\n\n  constructor (canvas, animation) {\n    // initialize canvas\n\n    this.canvas = canvas;\n\n    this.checkCanvasSize();\n\n    this.setCamera(3);\n    this.setRenderer(0x000000);\n\n    this.checkCanvasSize();\n\n    window.addEventListener('resize', () => this.checkCanvasSize());\n\n    // initialize animation\n\n    this.scene = new THREE.Scene();\n\n    this.animation = generateAnimation(this.scene, this.camera, animation);\n\n    if (this.animation.controllable) {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    }\n\n    this.dt = 0;\n\n    this.animation.draw();\n\n    this.tick = this.tick.bind(this);\n\n    // run animation\n\n    this.tick();\n\n  }\n\n  setRenderer (backgroundColor) {\n\n    this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: true });\n    this.renderer.setClearColor(backgroundColor);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n  }\n\n  setCamera (offset) {\n\n    this.camera = new THREE.PerspectiveCamera(75, this.canvasWidth / this.canvasHeight, 0.1, 1000);\n    this.camera.position.z = offset;\n\n  }\n\n  checkCanvasSize () {\n\n    const cv = document.getElementById('three-display');\n\n    this.canvasWidth = cv.offsetWidth;\n    this.canvasHeight = cv.offsetHeight;\n\n    if (this.renderer) this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.camera) {\n\n      this.camera.aspect = this.canvasWidth / this.canvasHeight;\n      this.camera.updateProjectionMatrix();\n\n    }\n\n  }\n\n  tick () {\n\n    this.animationId = requestAnimationFrame(this.tick);\n\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.animation.dynamic) {\n      this.dt += 1e-2;\n\n      if (this.dt > 2 * Math.PI * 1e6) {\n        this.dt -= 2 * Math.PI * 1e6;\n      }\n\n      this.animation.update(this.dt);\n    }\n\n  }\n}\n","<template>\n\n  <div>\n    <div v-for=\"category in visibleCategories\" :key=\"category.name\" class=\"three-navpane-category\" >\n      <p v-b-toggle=\"'category-' + category.name\" class=\"three-navpane-category-text\"> {{ category.name }} </p>\n      <b-collapse :id=\"'category-' + category.name\">\n        <ul class=\"three-navpane-list\">\n          <li\n            v-for='item in visibleAnimations'\n            :key='item.name'\n            class = \"three-navpane-item\"\n            >\n            <div v-if='item.category == category.name'>\n              <p\n                v-b-toggle=\"item.name\"\n                class=\"three-navpane-text\"\n                :class='{active: item.active}'\n                v-on:click='activate(item)'\n                > {{ item.text }}\n              </p>\n              <three-navpane-controls\n                v-if=\"item.parameters.length !== 0 && item.active\"\n                :animation=\"item\"\n                :screenType=\"screenType\"\n                v-bind=\"{activate, resetAnimation, toFullScreen, resetInput}\"\n                />\n            </div>\n          </li>\n        </ul>\n      </b-collapse>\n    </div>\n  </div>\n\n</template>\n\n<script>\n\nimport NavpaneControls from './NavpaneControls';\nimport CanvasManager from './canvasManager';\nimport { CATEGORIES } from './categoryManager';\nimport { ANIMATIONS } from './animationManager';\n\nlet canvasManager;\n\nexport default {\n  props: ['screenType', 'searchedText'],\n  components: {\n    'three-navpane-controls': NavpaneControls\n  },\n  data () {\n    return {\n      display: false,\n      categories: CATEGORIES,\n      animations: ANIMATIONS\n    }\n  },\n  methods: {\n    activate: function (animation) {\n      for (let i = 0; i < this.animations.length; ++i) {\n        this.animations[i].active = false;\n      }\n      animation.active = true;\n      this.display = true;\n      const canvas = document.getElementById('three-canvas');\n      if (canvasManager) {\n        if (canvasManager.animationId > 0) {\n          cancelAnimationFrame(canvasManager.animationId);\n        }\n      }\n      canvasManager = new CanvasManager(canvas, animation);\n    },\n    resetAnimation: function (animation) {\n      for (const parameter in animation.parameters) {\n        const param = animation.parameters[parameter];\n        param.currentValue = param.defaultValue;\n      }\n      this.activate(animation);\n    },\n    toFullScreen: function () {\n      const canvas = document.getElementById('three-canvas');\n      if (canvas.requestFullscreen) {\n        canvas.requestFullscreen();\n      } else if (canvas.webkitRequestFullscreen) {\n        canvas.webkitRequestFullscreen();\n      } else if (canvas.mozRequestFullScreen) {\n        canvas.mozRequestFullScreen();\n      } else if (canvas.msRequestFullscreen) {\n        canvas.msRequestFullscreen();\n      }\n    },\n    resetInput: function (parameter) {\n      if (parameter.currentValue > parameter.maxValue) {\n        parameter.currentValue = parameter.maxValue\n      } else if (parameter.currentValue < parameter.minValue) {\n        parameter.currentValue = parameter.minValue\n      }\n    }\n  },\n  computed: {\n    visibleAnimations () {\n      return this.animations.filter(\n        animation => {\n          if (!animation.hidden) {\n            return animation.text.toLowerCase().includes(this.searchedText.toLowerCase())\n          }\n        }\n      );\n    },\n    visibleCategories () {\n      return this.categories.filter(\n        category => {\n          if (!category.hidden) {\n            return category\n          }\n        }\n      );\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.three-navpane-category-text {\n  font-family: \"Arial\";\n  font-weight: bold;\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n.three-navpane-category-text:focus {\n  outline: none;\n}\n\n.three-navpane-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.three-navpane-text {\n  color: purple;\n  text-decoration: underline;\n  font-family: \"Arial\";\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n.three-navpane-text:focus {\n  outline: none;\n}\n\n</style>\n","export const CATEGORIES = [\n    {\n      active: false,\n      hidden: false,\n      name: 'art'\n    },\n    {\n      active: false,\n      hidden: false,\n      name: 'math'\n    },\n    {\n      active: false,\n      hidden: true,\n      name: 'physics'\n    },\n    {\n      active: false,\n      hidden: true,\n      name: 'shapes'\n    },\n    {\n      active: false,\n      hidden: false,\n      name: 'simulations'\n    }\n]\n","// art\nimport { metadata as blanket } from '../animations/art/blanket';\nimport { metadata as bounceRipple } from '../animations/art/bounceRipple';\nimport { metadata as chrysanthedad } from '../animations/art/chrysanthedad';\nimport { metadata as chrysanthemum } from '../animations/art/chrysanthemum';\nimport { metadata as chrysanthemum2 } from '../animations/art/chrysanthemum2';\nimport { metadata as chrysanthemum3 } from '../animations/art/chrysanthemum3';\nimport { metadata as chrysanthemum4 } from '../animations/art/chrysanthemum4';\nimport { metadata as chrysanthemum5 } from '../animations/art/chrysanthemum5';\nimport { metadata as chrysanthemum6 } from '../animations/art/chrysanthemum6';\nimport { metadata as chrysanthemum7 } from '../animations/art/chrysanthemum7';\nimport { metadata as chrysanthemum8 } from '../animations/art/chrysanthemum8';\nimport { metadata as chrysanthemum9 } from '../animations/art/chrysanthemum9';\nimport { metadata as clam } from '../animations/art/clam';\nimport { metadata as collide0scope } from '../animations/art/collide0scope';\nimport { metadata as concentricPolygons } from '../animations/art/concentricPolygons';\nimport { metadata as concentricPolygons2 } from '../animations/art/concentricPolygons2';\nimport { metadata as fauxlidoscope } from '../animations/art/fauxlidoscope';\nimport { metadata as flowers } from '../animations/art/flowers';\nimport { metadata as gyr0scope } from '../animations/art/gyr0scope';\nimport { metadata as pearl } from '../animations/art/pearl';\nimport { metadata as pinwheel } from '../animations/art/pinwheel';\nimport { metadata as sloshRipple } from '../animations/art/sloshRipple';\nimport { metadata as snowflake } from '../animations/art/snowflake';\nimport { metadata as starryNight } from '../animations/art/starryNight';\nimport { metadata as wrigglingDonut } from '../animations/art/wrigglingDonut';\n\n// math\nimport { metadata as mosaic } from '../animations/math/mosaic';\nimport { metadata as mosaic2 } from '../animations/math/mosaic2';\nimport { metadata as offsetStar } from '../animations/math/offsetStar';\nimport { metadata as sacredCircles } from '../animations/math/sacredCircles';\nimport { metadata as unoriginal } from '../animations/math/unoriginal';\n\n// physics\nimport { metadata as sineWave } from '../animations/physics/sineWave';\n\n// shapes\nimport { metadata as circle } from '../animations/shapes/circle';\nimport { metadata as cube } from '../animations/shapes/cube';\nimport { metadata as polygon } from '../animations/shapes/polygon';\nimport { metadata as rectangle } from '../animations/shapes/rectangle';\nimport { metadata as triangle } from '../animations/shapes/triangle';\n\n// // simulations\nimport { metadata as amparo } from '../animations/simulations/amparo';\nimport { metadata as andorinha } from '../animations/simulations/andorinha';\nimport { metadata as antigua } from '../animations/simulations/antigua';\nimport { metadata as batidinha } from '../animations/simulations/batidinha';\nimport { metadata as bicardi } from '../animations/simulations/bicardi';\nimport { metadata as blouse } from '../animations/simulations/blouse';\nimport { metadata as brazil } from '../animations/simulations/brazil';\nimport { metadata as choro } from '../animations/simulations/choro';\nimport { metadata as dialogo } from '../animations/simulations/dialogo';\nimport { metadata as flower } from '../animations/simulations/flower';\nimport { metadata as games } from '../animations/simulations/games';\nimport { metadata as lamento } from '../animations/simulations/lamento';\nimport { metadata as look } from '../animations/simulations/look';\nimport { metadata as mojave } from '../animations/simulations/mojave';\nimport { metadata as sabia } from '../animations/simulations/sabia';\nimport { metadata as tereza } from '../animations/simulations/tereza';\nimport { metadata as triste } from '../animations/simulations/triste';\nimport { metadata as wave } from '../animations/simulations/wave';\n\n\nexport const ANIMATIONS = [\n    // art\n    blanket,\n    bounceRipple,\n    chrysanthedad,\n    chrysanthemum,\n    chrysanthemum2,\n    chrysanthemum3,\n    chrysanthemum4,\n    chrysanthemum5,\n    chrysanthemum6,\n    chrysanthemum7,\n    chrysanthemum8,\n    chrysanthemum9,\n    clam,\n    collide0scope,\n    concentricPolygons,\n    concentricPolygons2,\n    fauxlidoscope,\n    flowers,\n    gyr0scope,\n    pearl,\n    pinwheel,\n    sloshRipple,\n    snowflake,\n    starryNight,\n    wrigglingDonut,\n    // math\n    mosaic,\n    mosaic2,\n    sacredCircles,\n    offsetStar,\n    unoriginal,\n    // physics\n    sineWave,\n    // shapes\n    circle,\n    cube,\n    polygon,\n    rectangle,\n    triangle,\n    // simulations\n    amparo,\n    andorinha,\n    antigua,\n    batidinha,\n    bicardi,\n    blouse,\n    brazil,\n    choro,\n    dialogo,\n    flower,\n    games,\n    lamento,\n    look,\n    mojave,\n    sabia,\n    tereza,\n    triste,\n    wave\n]\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Navpane.vue?vue&type=template&id=4d99edc6&\"\nimport script from \"./Navpane.vue?vue&type=script&lang=js&\"\nexport * from \"./Navpane.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Navpane.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <b-container fluid id=\"three-container\">\n      <b-row v-if=\"screenType === 'phone'\">\n        <b-col>\n          <h1 id=\"three-phone-message\">ROTATE ME</h1>\n        </b-col>\n      </b-row>\n      <b-row v-else>\n        <b-col id=\"three-navpane\" md=\"2\" sm=\"3\">\n          <h2 id=\"three-navpane-title\" :class=\"screenType\">Animations</h2>\n          <input type=\"text\" id=\"three-search-bar\" placeholder=\"Search\" onfocus=\"this.value=''\" v-model=\"searchedText\"/>\n          <three-navpane-menu id=\"three-navpane-menu\" :class=\"[screenAspectRatio, screenType]\" :screenType=\"screenType\" :searchedText=\"searchedText\"/>\n        </b-col>\n        <b-col md=\"10\" sm=\"9\" id='three-display'>\n          <canvas id='three-canvas'></canvas>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport Navpane from './Navpane/Navpane';\n\nexport default {\n  props: ['screenType', 'screenAspectRatio'],\n  name: 'ThreeApp',\n  components: {\n    'three-navpane-menu': Navpane\n  },\n  data () {\n    return {\n      searchedText: ''\n    }\n  }\n}\n</script>\n\n<style>\n\n#three-phone-message {\n  position: relative;\n  top: 70%;\n  text-align: center;\n}\n\n#three-navpane {\n  height: 90vh;\n  background: none;\n  overflow: hidden;\n  position: relative;\n}\n\n#three-navpane-title {\n  position: relative;\n}\n\n#three-search-bar {\n  position: relative;\n  width: 100%;\n}\n\n#three-navpane-menu {\n  height: 87%;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: absolute;\n  margin-top: 10px;\n}\n::-webkit-scrollbar {\n  background: transparent;\n}\n\n#three-navpane-menu.tablet, #three-navpane-menu.phone {\n  height: 80%;\n}\n\n#three-navpane-menu.widescreen {\n  height: 75%;\n}\n\n#three-display {\n  height:90vh;\n  overflow: hidden;\n}\n\n#three-display.tablet, #three-display.phone {\n  height:85vh;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ThreeApp.vue?vue&type=template&id=77d07799&\"\nimport script from \"./ThreeApp.vue?vue&type=script&lang=js&\"\nexport * from \"./ThreeApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ThreeApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"media-container\"}},[_c('h1',[_vm._v(\"Sounds I Make\")]),_c('div',{attrs:{\"id\":\"media-players\"}},_vm._l((_vm.mediaPlayers),function(player){return _c('div',{key:player.name,staticClass:\"media-player\"},[_c('b-row',{staticClass:\"justify-content-md-center\"},[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(player.embedref)}})])],1)],1)}),0)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"media-container\">\n      <h1>Sounds I Make</h1>\n      <div id=\"media-players\">\n        <div v-for=\"player in mediaPlayers\" :key=\"player.name\" class=\"media-player\">\n          <b-row class=\"justify-content-md-center\">\n            <b-col md=\"6\">\n              <span v-html='player.embedref'></span>\n            </b-col>\n          </b-row>\n        </div>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'MediaApp',\n  data () {\n    return {\n      mediaPlayers: [\n        {\n          name: 'bandcamp-monkey',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=734807793/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=4110217143/transparent=true/\" seamless><a href=\"https://barncatboys.bandcamp.com/album/baby-songs\">Baby Songs by Barncat Productions</a></iframe>'\n        },\n        {\n          name: 'bandcamp-dub',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=916923795/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=3453975111/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/siblings-and-friends\">Siblings and Friends by Siblings and Friends</a></iframe>'\n        },\n        {\n          name: 'soundlcoud-cheerio',\n          embedref: '<iframe width=\"100%\" height=\"120px\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/713985979&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"></iframe>'\n        },\n        {\n          name: 'bandcamp-gross',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=3621861420/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=493506869/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/keepin-it-clean\">Keepin it Clean by Serge Dean</a></iframe>'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#media-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n  overflow: hidden;\n}\n\n#media-player {\n  width: 100%;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MediaApp.vue?vue&type=template&id=0e01f94b&\"\nimport script from \"./MediaApp.vue?vue&type=script&lang=js&\"\nexport * from \"./MediaApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MediaApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{class:_vm.screenType,attrs:{\"align-h\":\"center\",\"id\":\"cv-container\"}},[(_vm.screenType !== 'monitor')?_c('div',_vm._l((_vm.cvContents),function(cvSection){return _c('b-row',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('b-col',{staticClass:\"cv-section\",class:_vm.screenType,attrs:{\"cols\":\"12\"}},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2)],1)}),1):_vm._e(),(_vm.screenType === 'monitor')?_c('div',{attrs:{\"id\":\"cv-slider\"}},[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){return _vm.onSlideLeft(_vm.currentSlide)}}},[_c('span',{staticClass:\"fa fa-chevron-left\"})])],1),_c('b-col',{attrs:{\"cols\":\"8\"}},_vm._l((_vm.visibleCvContents),function(cvSection){return _c('div',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2)}),0),_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){return _vm.onSlideRight(_vm.currentSlide)}}},[_c('span',{staticClass:\"fa fa-chevron-right\"})])],1)],1)],1):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"cv-container\" :class=\"screenType\">\n      <div v-if=\"screenType !== 'monitor'\">\n        <b-row v-for=\"cvSection in cvContents\" :key=\"cvSection.header\" class=\"cv-section-content\">\n          <b-col cols=\"12\" class=\"cv-section\" :class=\"screenType\">\n            <h1>{{cvSection.header}}</h1> <br>\n            <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n          </b-col>\n        </b-row>\n      </div>\n      <div v-if=\"screenType === 'monitor'\" id=\"cv-slider\">\n        <b-row>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" @click=\"onSlideLeft(currentSlide)\">\n              <span class=\"fa fa-chevron-left\"></span>\n            </b-btn>\n          </b-col>\n          <b-col cols=\"8\">\n              <div v-for=\"cvSection in visibleCvContents\" :key=\"cvSection.header\" class=\"cv-section-content\">\n                <h1>{{cvSection.header}}</h1> <br>\n                <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n              </div>\n          </b-col>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" @click=\"onSlideRight(currentSlide)\">\n              <span class=\"fa fa-chevron-right\"></span>\n            </b-btn>\n          </b-col>\n        </b-row>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['screenType'],\n  name: 'CVApp',\n  data () {\n    return {\n      currentSlide: 0,\n      cvContents: [\n        {\n          display: true,\n          header: 'Education',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute'\n            },\n            {\n              type: 'cv-description',\n              text: 'B.S. in Physics and Mathematics (2015)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Experience',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Crux Informatics'\n            },\n            {\n              type: 'cv-description',\n              text: 'Data Integration Engineer (2019-)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'FactSet Research Systems, Inc.'\n            },\n            {\n              type: 'cv-description',\n              text: 'Product Manager, Risk and Quantitative Analytics (2016-2019)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Barncat Productions'\n            },\n            {\n              type: 'cv-description',\n              text: 'Chief Technology Officer, Head of Public Relations, Studio Musician (2015-2016)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute Department of Mathematics'\n            },\n            {\n              type: 'cv-description',\n              text: 'Research Student (2014-2015)'\n            },\n            {\n              type: 'cv-description',\n              text: 'Teaching Assistant, Introduction to Differential Equations (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Affiliations',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Pi Mu Epsilon, Kappa'\n            },\n            {\n              type: 'cv-description',\n              text: 'Secretary (2014-2015)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Delta Tau Delta, Upsilon'\n            },\n            {\n              type: 'cv-description',\n              text: 'Recording Secretary (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Accolades',\n          details: [\n            {\n              type: 'cv-description',\n              text: 'Rensselaer Medalist (2010)'\n            }\n          ]\n        }\n      ]\n    }\n  },\n  methods: {\n    onSlideLeft (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n\n      if (this.currentSlide === 0) {\n        this.currentSlide = this.cvContents.length - slide - 1;\n      } else {\n        this.currentSlide = slide - 1;\n      }\n\n      this.cvContents[this.currentSlide].display = true;\n    },\n    onSlideRight (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n      this.currentSlide = (slide + 1) % this.cvContents.length;\n      this.cvContents[this.currentSlide].display = true;\n    }\n  },\n  computed: {\n    visibleCvContents () {\n      return this.cvContents.filter(\n        cvContents => {\n          if (cvContents.display) {\n            return cvContents\n          }\n        }\n      );\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#cv-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n}\n\n#cv-container.monitor {\n  top: 30%;\n  overflow: hidden;\n}\n\n#cv-slider {\n  position: relative;\n  top: 50%;\n}\n\n.cv-slider-arrow, .cv-slider-arrow:hover, .cv-slider-arrow:active, .cv-slider-arrow:focus, .cv-slider-arrow:visited {\n  background: none;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  position: fixed;\n  top: 40%;\n}\n\n.cv-organization {\n  font-weight: bold;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CVApp.vue?vue&type=template&id=7acaf64f&\"\nimport script from \"./CVApp.vue?vue&type=script&lang=js&\"\nexport * from \"./CVApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CVApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"contact-container\"}},[_c('b-row',[_c('b-col',[_c('h1',[_vm._v(\"HIT ME UP\")])])],1),_vm._l((_vm.contactInfo),function(contactInfoItem){return _c('b-row',{key:contactInfoItem.text},[_c('b-col',[_c('p',[_vm._v(_vm._s(contactInfoItem.text))])])],1)}),_c('b-row',[_c('b-col',_vm._l((_vm.contactLinks),function(contactLink){return _c('a',{key:contactLink.icon,staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":contactLink.src,\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa\",class:contactLink.icon})])}),0)],1),_c('b-row',[_c('b-col',[_c('a',{staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":\"https://github.com/max-t-wheeler\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa fa-github\"})])])],1)],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"contact-container\">\n      <b-row>\n        <b-col>\n          <h1>HIT ME UP</h1>\n        </b-col>\n      </b-row>\n      <b-row v-for=\"contactInfoItem in contactInfo\" :key=\"contactInfoItem.text\" >\n        <b-col>\n          <p>{{ contactInfoItem.text }}</p>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a v-for=\"contactLink in contactLinks\" :key=\"contactLink.icon\" rel=\"noopener\" class=\"contact-icon\" :href=\"contactLink.src\" target=\"_blank\">\n            <span class=\"fa\" :class=\"contactLink.icon\"/>\n          </a>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a rel=\"noopener\" class=\"contact-icon\" href=\"https://github.com/max-t-wheeler\" target=\"_blank\">\n            <span class=\"fa fa-github\"/>\n          </a>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'ContactApp',\n  data () {\n    return {\n      contactInfo: [\n        {\n          text: 'Max T. Wheeler'\n        },\n        {\n          text: 'max.t.wheeler@gmail.com'\n        },\n        {\n          text: 'CT | MA | NY'\n        }\n      ],\n      contactLinks: [\n        {\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin'\n        },\n        {\n          src: 'https://www.facebook.com/max.t.wheeler',\n          icon: 'fa-facebook'\n        },\n        {\n          src: 'https://soundcloud.com/empty-dubs',\n          icon: 'fa-soundcloud'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#contact-container {\n  position: relative;\n  top: 20%;\n  text-align: center;\n}\n\n.contact-icon {\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n}\n\n.contact-icon:hover, .contact-icon:active, .contact-icon:visited {\n  color: black;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ContactApp.vue?vue&type=template&id=2674491d&\"\nimport script from \"./ContactApp.vue?vue&type=script&lang=js&\"\nexport * from \"./ContactApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ContactApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\n  <div id=\"app-base\">\n    <app-toolbar :homeContents=\"home\" :appContents=\"contents\" class=\"toolbar\"/>\n    <transition name=\"fade\" mode=\"out-in\">\n      <home-page v-if=\"home.display\" :screenType=\"screenType\" class=\"application\"/>\n      <three-app v-if=\"contents[0].display\" :screenType=\"screenType\" class=\"application\"/>\n      <media-app v-if=\"contents[1].display\" :screenType=\"screenType\" class=\"application\"/>\n      <cv-app v-if=\"contents[2].display\" :screenType=\"screenType\" class=\"application\"/>\n      <contact-app v-if=\"contents[3].display\" :screenType=\"screenType\" class=\"application\"/>\n    </transition>\n  </div>\n\n</template>\n\n<script>\n\nimport Toolbar from './components/Toolbar';\nimport Home from './components/Home/Home';\nimport ThreeApp from './components/Three/ThreeApp';\nimport MediaApp from './components/Media/MediaApp';\nimport CVApp from './components/CV/CVApp';\nimport ContactApp from './components/Contact/ContactApp';\n\nexport default {\n  name: 'App',\n  components: {\n    'app-toolbar': Toolbar,\n    'home-page': Home,\n    'three-app': ThreeApp,\n    'media-app': MediaApp,\n    'cv-app': CVApp,\n    'contact-app': ContactApp\n  },\n  data () {\n    return {\n      home: {\n        name: 'Home',\n        address: '#home',\n        display: true\n      },\n      contents: [\n        {\n          name: 'Sights',\n          address: '#sights',\n          display: false\n        },\n        {\n          name: 'Sounds',\n          address: '#sounds',\n          display: false\n        },\n        {\n          name: 'CV',\n          address: '#cv',\n          display: false\n        },\n        {\n          name: 'Contact',\n          address: '#contact',\n          display: false\n        }\n      ],\n      screenType: '',\n      screenAspectRatio: ''\n    }\n  },\n  methods: {\n    checkScreenSize: function () {\n\n      if (window.innerWidth < 576) {\n        this.screenType = 'phone';\n      } else if (window.innerWidth < 768) {\n        this.screenType = 'tablet';\n      } else {\n        this.screenType = 'monitor';\n      }\n\n      if (window.innerWidth / window.innerHeight > 2) {\n        this.screenAspectRatio = 'widescreen';\n      } else {\n        this.screenAspectRatio = 'normal';\n      }\n\n    },\n    resizeApp: function () {\n      window.addEventListener('resize', () => this.checkScreenSize());\n    }\n  },\n  mounted () {\n    this.checkScreenSize();\n  },\n  updated () {\n    this.resizeApp();\n  }\n}\n\n</script>\n\n<style>\n\nbody {\n  background: linear-gradient(10deg, rgba(0, 255, 255, 0.9), rgba(0, 102, 0, 0.9)), url(./assets/stars.jpg);\n}\n\n#app-base {\n  height: 100vh;\n  overflow: hidden;\n}\n\n.application {\n  height: 90vh;\n  overflow: auto;\n  overflow-x: hidden;\n}\n::-webkit-scrollbar {\n  background: transparent;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=32d36304&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport App from './App';\n\nVue.use(BootstrapVue);\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}