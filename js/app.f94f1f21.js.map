{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/components/Contact/ContactApp.vue?4469","webpack:///./src/components/Home/Home.vue?aade","webpack:///./src/App.vue?ff4a","webpack:///./src/components/Toolbar.vue?eb2c","webpack:///src/components/Toolbar.vue","webpack:///./src/components/Toolbar.vue?2909","webpack:///./src/components/Toolbar.vue","webpack:///./src/components/Home/Home.vue?29eb","webpack:///src/components/Home/Home.vue","webpack:///./src/components/Home/Home.vue?1e70","webpack:///./src/components/Home/Home.vue","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue?34e7","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue?d6f3","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue?561a","webpack:///src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue?059d","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/animation.js","webpack:///./src/components/OpenGL2WebGL/utils.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/blanket.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/bounceRipple.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthedad.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum3.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum4.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum5.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum6.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum7.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum8.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum9.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/clam.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/collide0scope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/fauxlidoscope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/flowers.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/gyr0scope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pearl.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pinwheel.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/snowflake.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/sloshRipple.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/starryNight.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/wrigglingDonut.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/offsetStar.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/sacredCircles.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/unoriginal.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/physics/sineWave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/circle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/cube.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/polygon.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/rectangle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/triangle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/amparo.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/andorinha.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/antigua.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/batidinha.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/bicardi.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/blouse.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/brazil.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/choro.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/dialogo.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/flower.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/games.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/lamento.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/look.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/mojave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/sabia.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/tereza.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/triste.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/wave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/index.js","webpack:///./src/components/OpenGL2WebGL/Navpane/canvasManager.js","webpack:///src/components/OpenGL2WebGL/Navpane/Navpane.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue?174b","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue","webpack:///src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue?9e80","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","webpack:///./src/components/Media/MediaApp.vue?a9da","webpack:///src/components/Media/MediaApp.vue","webpack:///./src/components/Media/MediaApp.vue?f6e1","webpack:///./src/components/Media/MediaApp.vue","webpack:///./src/components/CV/CVApp.vue?e6f0","webpack:///src/components/CV/CVApp.vue","webpack:///./src/components/CV/CVApp.vue?b427","webpack:///./src/components/CV/CVApp.vue","webpack:///./src/components/Contact/ContactApp.vue?caf5","webpack:///src/components/Contact/ContactApp.vue","webpack:///./src/components/Contact/ContactApp.vue?f16f","webpack:///./src/components/Contact/ContactApp.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/Toolbar.vue?5cec","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue?5211","webpack:///./src/components/Media/MediaApp.vue?3edd","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue?3574","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue?ca29","webpack:///./src/components/CV/CVApp.vue?fb90"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","home","contents","screenType","_e","staticRenderFns","on","$event","selectHome","_v","_s","homeContents","_l","app","selectApp","toolbarLink","directives","rawName","modifiers","src","tooltip","class","icon","props","toolbarLinks","methods","appContents","display","application","component","attributes","mounted","moveAttributes","frame","clearInterval","id","elems","style","top","containerHeight","Math","cos","left","containerWidth","sin","appContainer","overflow","elem","classList","add","textContent","text","fontSize","size","zIndex","homeContainer","appendChild","expression","domProps","target","composing","searchedText","screenAspectRatio","category","item","active","activate","parameters","_b","resetAnimation","toFullScreen","resetInput","animation","parameter","label","maxValue","minValue","$set","Animation","scene","camera","dynamic","controllable","colorNodes","type","color","mod","phi","PI","polygon","center","radius","numVertices","theta","axis","vertices","Float32Array","geometry","THREE","setAttribute","material","line","position","set","offsetStar","offset","Star","numStems","numSplits","stemGroup","splitGroup","stemVertices","stemGeometry","stemMaterial","splitVertices","splitGeometry","splitMaterial","Flower","rootPosition","pistolPosition","petalRadius","numPetals","numNodes","petalColor","pistolColor","stem","petalGroup","petalCenter","petal","pistolGeometry","pistolMaterial","wireframe","pistol","sacredGeometry","numPolygons","polygonRadius","globalRadius","geomGroup","polyCenter","poly","Graph","partitionSizes","vertexRadius","numEdges","vertexGroup","edgeGroup","vertexCenter","vertexGeometry","vertexMaterial","vertex","layout","angle","children","count","numSides","sideScale","sideSpacing","floor","sideAngle","numLevels","levelScale","interLevelSpacing","intraLevelSpacing","edgeGeometry","edgeMaterial","edge","createVertexSet","assignVertexCoordinates","addEdges","Blanket","parseFloat","currentValue","numFaces","mesh","rotateZ","BounceRipple","x","col","scale","Chrysanthedad","numCenters","numLayers","polyCenterOffset","polyClusterCenter","k","Chrysanthemum","rotation","z","Chrysanthemum2","Chrysanthemum3","Chrysanthemum4","Chrysanthemum5","rotateX","Chrysanthemum6","Chrysanthemum7","Chrysanthemum8","Chrysanthemum9","Clam","numRidges","sqrt","pow","endpoints","Collide0scope","numCircles","ConcentricPolygons","ConcentricPolygons2","Fauxlidoscope","numSteps","numLanes","cameraAmplitude","cameraZoomMax","cameraZoomMin","cameraDisplacement","concentricPolygonGroup","layerGroup","Temp","numFlowers","root","flower","Gyr0scope","rate","Pearl","pearlGeometry","pearlMaterial","pearl","Pinwheel","Snowflake","geom","SloshRipple","StarryNight","numStars","starCenter","random","starRadius","abs","star","WrigglingDonut","Mosaic","Mosaic2","group1","group2","OffsetStar","SacredCircles","circleRadius","nodeRadius","divisor","visible","SineWave","amplitude","frequency","phase","displacement","numPoints","node_x","node_y","Circle","numSpokes","Cube","Polygon","Rectangle","colors","vertexColors","Triangle","Amparo","numPartitions","graphRadius","graph","initialize","Andorinha","Antigua","y","Batidinha","Bicardi","Blouse","Brazil","Choro","Dialogo","Games","Lamento","Look","dampening","Mojave","Sabia","Tereza","Triste","Wave","ANIMATION_MAP","blanket","chrysanthedad","chrysanthemum","chrysanthemum2","chrysanthemum3","chrysanthemum4","chrysanthemum5","chrysanthemum6","chrysanthemum7","chrysanthemum8","chrysanthemum9","collide","fauxlidoscope","flowers","Flowers","gyro","pinwheel","snowflake","mosaic","mosaic2","unoriginal","Unoriginal","circle","clam","cube","polystarter","rectangle","triangle","amparo","andorinha","antigua","batidinha","bicardi","blouse","brazil","choro","dialogo","games","lamento","look","mojave","sabia","tereza","triste","wave","generateAnimation","OrbitControls","require","CanvasManager","canvas","checkCanvasSize","setCamera","setRenderer","addEventListener","controls","renderer","domElement","dt","draw","tick","backgroundColor","antialias","setClearColor","setPixelRatio","devicePixelRatio","canvasWidth","canvasHeight","cv","document","getElementById","offsetWidth","offsetHeight","setSize","aspect","updateProjectionMatrix","animationId","requestAnimationFrame","render","update","components","NavpaneControls","categories","animations","canvasManager","cancelAnimationFrame","param","defaultValue","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","computed","visibleAnimations","filter","visibleCategories","Navpane","player","embedref","mediaPlayers","cvSection","header","detail","onSlideLeft","currentSlide","onSlideRight","cvContents","slide","visibleCvContents","contactInfoItem","contactLink","contactInfo","contactLinks","Toolbar","Home","OpenGL2WebGLApp","MediaApp","CVApp","ContactApp","address","checkScreenSize","innerWidth","innerHeight","resizeApp","updated","Vue","use","BootstrapVue","config","productionTip","h","App","$mount"],"mappings":"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","file":"js/app.f94f1f21.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app-base\"}},[_c('app-toolbar',{staticClass:\"toolbar\",attrs:{\"homeContents\":_vm.home,\"appContents\":_vm.contents}}),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.home.display)?_c('home-page',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[0].display)?_c('opengl2webgl-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[1].display)?_c('media-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[2].display)?_c('cv-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),(_vm.contents[3].display)?_c('contact-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-navbar',{attrs:{\"toggleable\":\"md\",\"type\":\"dark\"}},[_c('b-navbar-toggle',{attrs:{\"target\":\"nav_collapse\"}}),_c('b-navbar-brand',{on:{\"click\":function($event){return _vm.selectHome()}}},[_c('span',{staticClass:\"fa fa-home\"}),_vm._v(\" \"+_vm._s(_vm.homeContents.name)+\" \")]),_c('b-collapse',{attrs:{\"is-nav\":\"\",\"id\":\"nav_collapse\"}},[_c('b-navbar-nav',_vm._l((_vm.appContents),function(app){return _c('b-nav-item',{key:app.name,on:{\"click\":function($event){return _vm.selectApp(app)}}},[_vm._v(_vm._s(app.name))])}),1),_c('b-navbar-nav',{staticClass:\"ml-auto\"},_vm._l((_vm.toolbarLinks),function(toolbarLink){return _c('b-nav-item',{key:toolbarLink.name,attrs:{\"right\":\"\"}},[_c('a',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"toolbar-icon external\",attrs:{\"rel\":\"noopener\",\"href\":toolbarLink.src,\"target\":\"_blank\",\"title\":toolbarLink.tooltip}},[_c('span',{staticClass:\"fa\",class:toolbarLink.icon})])])}),1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n      <b-navbar toggleable=\"md\" type=\"dark\">\n        <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n        <b-navbar-brand @click=\"selectHome()\">\n          <span class=\"fa fa-home\"/>\n          {{ homeContents.name }}\n        </b-navbar-brand>\n        <b-collapse is-nav id=\"nav_collapse\">\n          <b-navbar-nav>\n            <b-nav-item v-for=\"app in appContents\" :key=\"app.name\" @click=\"selectApp(app)\">{{ app.name }}</b-nav-item>\n          </b-navbar-nav>\n          <b-navbar-nav class=\"ml-auto\">\n            <b-nav-item right v-for=\"toolbarLink in toolbarLinks\" :key=\"toolbarLink.name\">\n              <a rel=\"noopener\" class=\"toolbar-icon external\" :href=\"toolbarLink.src\" target=\"_blank\" v-b-tooltip.hover :title=\"toolbarLink.tooltip\">\n                <span class=\"fa\" :class=\"toolbarLink.icon\"/>\n              </a>\n            </b-nav-item>\n          </b-navbar-nav>\n        </b-collapse>\n      </b-navbar>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['homeContents', 'appContents'],\n  data () {\n    return {\n      toolbarLinks: [\n        {\n          name: 'github',\n          src: 'https://github.com/max-t-wheeler',\n          icon: 'fa-github',\n          tooltip: 'Must'\n        },\n        {\n          name: 'linkedin',\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin',\n          tooltip: 'use'\n        },\n        {\n          name: 'facebook',\n          src: 'https://www.facebook.com/max.t.wheeler',\n          icon: 'fa-facebook',\n          tooltip: 'right'\n        },\n        {\n          name: 'soundcloud',\n          src: 'https://soundcloud.com/empty-dubs',\n          icon: 'fa-soundcloud',\n          tooltip: 'click'\n        }\n      ]\n    }\n  },\n  methods: {\n    selectHome: function () {\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      this.homeContents.display = true;\n    },\n    selectApp: function (application) {\n      this.homeContents.display = false;\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      application.display = true;\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.navbar-brand {\n  font-size: 1rem;\n  padding: 0;\n}\n\n.nav-link {\n  font-size: 1rem;\n  padding: 0;\n}\n\n.toolbar-icon {\n\n  color: black;\n  text-decoration: none;\n}\n\n.toolbar-icon:hover, .toolbar-icon:active, .toolbar-icon:visited {\n  color: black;\n}\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Toolbar.vue?vue&type=template&id=8672a6e0&\"\nimport script from \"./Toolbar.vue?vue&type=script&lang=js&\"\nexport * from \"./Toolbar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Toolbar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"home-container\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h='center' id='home-container'>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'HomeApp',\n  data () {\n    return {\n      attributes: [\n        {\n          text: 'artist',\n          size: 5\n        },\n        {\n          text: 'designer',\n          size: 3\n        },\n        {\n          text: 'dreamer',\n          size: 3\n        },\n        {\n          text: 'engineer',\n          size: 4\n        },\n        {\n          text: 'entrepreneur',\n          size: 3\n        },\n        {\n          text: 'fighter',\n          size: 1\n        },\n        {\n          text: 'geek',\n          size: 2\n        },\n        {\n          text: 'glutton',\n          size: 3\n        },\n        {\n          text: 'heartbreaker',\n          size: 1\n        },\n        {\n          text: 'lover',\n          size: 1\n        },\n        {\n          text: 'mathematician',\n          size: 4\n        },\n        {\n          text: 'musician',\n          size: 5\n        },\n        {\n          text: 'nerd',\n          size: 3\n        },\n        {\n          text: 'poet',\n          size: 3\n        },\n        {\n          text: 'realist',\n          size: 3\n        },\n        {\n          text: 'romantic',\n          size: 2\n        },\n        {\n          text: 'scientist',\n          size: 4\n        },\n        {\n          text: 'taoist',\n          size: 2\n        }\n      ]\n    }\n  },\n  mounted () {\n\n    const appContainer = document.querySelector('.application');\n    const homeContainer = document.getElementById('home-container')\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n\n    appContainer.style.overflow = 'hidden';\n\n    function moveAttributes () {\n      const elems = document.querySelectorAll('.home-attribute');\n      let t = 0;\n      const id = setInterval(frame, 5);\n      function frame () {\n        if (t === 35000000) {\n          clearInterval(id);\n        } else {\n          for (let i = 0; i < elems.length; ++i) {\n            elems[i].style.top = containerHeight / 2 + Math.cos(i + t / 1000) * containerHeight / 2 + 'px';\n            elems[i].style.left = containerWidth / 20 + Math.sin(i + t / 1000) * containerWidth / 3 + 'px';\n          }\n          t++;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.attributes.length; ++i) {\n\n      const elem = document.createElement('div');\n\n      elem.classList.add('home-attribute')\n      elem.textContent = this.attributes[i].text;\n      elem.style.fontSize = 10 * this.attributes[i].size + 'px';\n      elem.style.zIndex = i;\n\n      homeContainer.appendChild(elem);\n    }\n\n    moveAttributes();\n\n  }\n}\n\n</script>\n\n<style>\n\n.home-attribute {\n  backface-visibility: hidden;\n  filter: blur(0);\n  float:left;\n  position: relative;\n  -webkit-backface-visibility: hidden;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=3eef81be&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"fluid\":\"\",\"id\":\"opengl2webgl-container\"}},[(_vm.screenType === 'phone')?_c('b-row',[_c('b-col',[_c('h1',{attrs:{\"id\":\"opengl2webgl-phone-message\"}},[_vm._v(\"ROTATE ME\")])])],1):_c('b-row',[_c('b-col',{attrs:{\"id\":\"opengl2webgl-navpane\",\"md\":\"2\",\"sm\":\"3\"}},[_c('h2',{class:_vm.screenType,attrs:{\"id\":\"opengl2webgl-navpane-title\"}},[_vm._v(\"Animations\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchedText),expression:\"searchedText\"}],attrs:{\"type\":\"text\",\"id\":\"opengl2webgl-search-bar\",\"placeholder\":\"Search\",\"onfocus\":\"this.value=''\"},domProps:{\"value\":(_vm.searchedText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.searchedText=$event.target.value}}}),_c('opengl2webgl-navpane-menu',{class:[_vm.screenAspectRatio, _vm.screenType],attrs:{\"id\":\"opengl2webgl-navpane-menu\",\"screenType\":_vm.screenType,\"searchedText\":_vm.searchedText}})],1),_c('b-col',{attrs:{\"md\":\"10\",\"sm\":\"9\",\"id\":\"opengl2webgl-display\"}},[_c('canvas',{attrs:{\"id\":\"opengl2webgl-canvas\"}})])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.visibleCategories),function(category){return _c('div',{key:category.name,staticClass:\"opengl2webgl-navpane-category\"},[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:('category-' + category.name),expression:\"'category-' + category.name\"}],staticClass:\"opengl2webgl-navpane-category-text\"},[_vm._v(\" \"+_vm._s(category.name)+\" \")]),_c('b-collapse',{attrs:{\"id\":'category-' + category.name}},[_c('ul',{staticClass:\"opengl2webgl-navpane-list\"},_vm._l((_vm.visibleAnimations),function(item){return _c('li',{key:item.name,staticClass:\"opengl2webgl-navpane-item\"},[(item.category == category.name)?_c('div',[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:(item.name),expression:\"item.name\"}],staticClass:\"opengl2webgl-navpane-text\",class:{active: item.active},on:{\"click\":function($event){return _vm.activate(item)}}},[_vm._v(\" \"+_vm._s(item.text)+\" \")]),(item.parameters.length !== 0 && item.active)?_c('opengl2webgl-navpane-controls',_vm._b({attrs:{\"animation\":item,\"screenType\":_vm.screenType}},'opengl2webgl-navpane-controls',{activate: _vm.activate, resetAnimation: _vm.resetAnimation, toFullScreen: _vm.toFullScreen, resetInput: _vm.resetInput},false)):_vm._e()],1):_vm._e()])}),0)])],1)}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('br'),_vm._l((_vm.animation.parameters),function(parameter){return _c('div',{key:parameter.label,staticClass:\"opengl2webgl-navpane-controls\",class:_vm.screenType},[_c('p',[_vm._v(\" \"+_vm._s(parameter.label)+\" \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(parameter.currentValue),expression:\"parameter.currentValue\"}],staticClass:\"opengl2webgl-navpane-input\",attrs:{\"type\":\"number\",\"max\":parameter.maxValue,\"min\":parameter.minValue},domProps:{\"value\":(parameter.currentValue)},on:{\"blur\":function($event){return _vm.resetInput(parameter)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(parameter, \"currentValue\", $event.target.value)}}}),_c('br')])}),_c('br'),_c('div',{staticClass:\"opengl2webgl-navpane-controls\",class:_vm.screenType},[_c('b-button',{on:{\"click\":function($event){return _vm.activate(_vm.animation)}}},[_c('span',{staticClass:\"fa fa-play-circle opengl2webgl-navpane-button\"})]),_c('b-button',{on:{\"click\":function($event){return _vm.resetAnimation(_vm.animation)}}},[_c('span',{staticClass:\"fa fa-refresh opengl2webgl-navpane-button\"})]),_c('b-button',{on:{\"click\":function($event){return _vm.toFullScreen()}}},[_c('span',{staticClass:\"fa fa-arrows-alt opengl2webgl-navpane-button\"})])],1),_c('br')],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <br>\n    <div v-for=\"parameter in animation.parameters\" :key=\"parameter.label\" class=\"opengl2webgl-navpane-controls\" :class='screenType'>\n      <p> {{parameter.label }} </p>\n      <input\n        class=\"opengl2webgl-navpane-input\"\n        type=\"number\"\n        :max=\"parameter.maxValue\"\n        :min=\"parameter.minValue\"\n        v-on:blur=\"resetInput(parameter)\"\n        v-model=\"parameter.currentValue\"/>\n      <br>\n    </div>\n    <br>\n    <div class=\"opengl2webgl-navpane-controls\" :class='screenType'>\n      <b-button @click=\"activate(animation)\">\n        <span class=\"fa fa-play-circle opengl2webgl-navpane-button\"></span>\n      </b-button>\n      <b-button @click=\"resetAnimation(animation)\">\n        <span class=\"fa fa-refresh opengl2webgl-navpane-button\"></span>\n      </b-button>\n      <b-button @click=\"toFullScreen()\">\n        <span class=\"fa fa-arrows-alt opengl2webgl-navpane-button\"></span>\n      </b-button>\n    </div>\n    <br>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['animation', 'screenType', 'activate', 'resetAnimation', 'toFullScreen', 'resetInput']\n}\n\n</script>\n\n<style>\n\n.opengl2webgl-navpane-controls {\n  text-align: left;\n}\n\n.opengl2webgl-navpane-controls.monitor {\n  text-align: center;\n}\n\n.opengl2webgl-navpane-input {\n  width: 80%;\n}\n\n.opengl2webgl-navpane-button {\n  font-size: 20px;\n}\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NavpaneControls.vue?vue&type=template&id=4d08ea05&\"\nimport script from \"./NavpaneControls.vue?vue&type=script&lang=js&\"\nexport * from \"./NavpaneControls.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NavpaneControls.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default class Animation {\n\n  constructor (scene, camera, animation) {\n\n    this.scene = scene;\n    this.camera = camera;\n    this.parameters = animation.parameters;\n    this.name = animation.name;\n    this.dynamic = animation.dynamic;\n    this.controllable = animation.controllable;\n\n}\n\n  draw () {\n\n\t}\n\n  update () {\n\n  }\n\n}\n","import * as THREE from 'three';\n\n/// //////////////////////////Styling//////////////////////////////////////\n\nexport function colorNodes (n, type) {\n\n  let color = null;\n\n  if (type === 'cool') {\n\n    const mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0x5dff00;\n        break;\n      case 1:\n        color = 0x1000ff;\n        break;\n      case 2:\n        color = 0xff00e1;\n        break;\n      case 3:\n        color = 0x009990;\n        break;\n\n    }\n\n  } else if (type === 'hot') {\n\n    const mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0xffffff;\n        break;\n\n    }\n\n  } else {\n\n    const mod = n % 7;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0x5dff00;\n        break;\n      case 4:\n        color = 0x1000ff;\n        break;\n      case 5:\n        color = 0xff00e1;\n        break;\n      case 6:\n        color = 0xffffff;\n        break;\n\n    }\n\n  }\n\n  return color;\n\n}\n\n/// //////////////////////////WebGL Helper export Functions//////////////////////////////////////\n\nexport function phi (t, n) {\n\n  const p = 2 * Math.PI * t / n;\n\n  return p;\n\n}\n\nexport function polygon (center, radius, numVertices, theta, color, axis) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(this.numVertices * 3);\n\n  for (let i = 0; i < this.numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  const geometry = new THREE.BufferGeometry();\n\n  geometry.setAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  const material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n  if (axis === 'relative') {\n    this.line.position.set(this.center[0], this.center[1], this.center[2]);\n  }\n\n}\n\nexport function offsetStar (numVertices, center, radius, theta, offset, color) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(numVertices * 3);\n\n  for (let i = 0; i < numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  const geometry = new THREE.BufferGeometry();\n\n  geometry.setAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  const material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n}\n\nexport function Star (center, numStems, numSplits, radius, color) {\n\n  this.center = center;\n  this.numStems = numStems;\n  this.numSplits = numSplits;\n  this.radius = radius;\n  this.color = color;\n\n  this.stemGroup = new THREE.Group();\n  this.splitGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numStems; ++i) {\n\n    this.stemVertices = new Float32Array(2 * 3);\n\n    this.stemVertices[0] = this.center[0];\n    this.stemVertices[1] = this.center[1];\n    this.stemVertices[2] = this.center[2];\n    this.stemVertices[3] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n    this.stemVertices[4] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n    this.stemVertices[5] = this.center[2];\n\n    const stemGeometry = new THREE.BufferGeometry();\n\n    stemGeometry.setAttribute(\n      'position',\n      new THREE.BufferAttribute(this.stemVertices, 3)\n    );\n\n    const stemMaterial = new THREE.LineBasicMaterial(\n      {\n        color: this.color\n      }\n    );\n\n    const line = new THREE.Line(stemGeometry, stemMaterial);\n\n    this.stemGroup.add(line);\n\n    for (let j = 0; j < this.numSplits; ++j) {\n\n      this.splitVertices = new Float32Array(2 * 3);\n\n      this.splitVertices[0] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n      this.splitVertices[1] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n      this.splitVertices[2] = this.center[2];\n      this.splitVertices[3] = this.radius * Math.sin(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[0];\n      this.splitVertices[4] = this.radius * Math.cos(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[1];\n      this.splitVertices[5] = this.center[2];\n\n      const splitGeometry = new THREE.BufferGeometry();\n\n      splitGeometry.setAttribute(\n        'position',\n        new THREE.BufferAttribute(this.splitVertices, 3)\n      );\n\n      const splitMaterial = new THREE.LineBasicMaterial(\n        {\n          color: this.color\n        }\n      );\n\n      const line = new THREE.Line(splitGeometry, splitMaterial);\n\n      this.splitGroup.add(line);\n\n    }\n\n  }\n\n}\n\nexport function Flower (rootPosition, pistolPosition, petalRadius, numPetals, numNodes, petalColor, pistolColor) {\n\n  this.rootPosition = rootPosition;\n  this.pistolPosition = pistolPosition;\n  this.petalRadius = petalRadius;\n  this.numPetals = numPetals;\n  this.numNodes = numNodes;\n  this.petalColor = petalColor;\n  this.pistolColor = pistolColor;\n\n  this.stemVertices = new Float32Array(2 * 3);\n\n  this.stemVertices[0] = this.rootPosition[0];\n  this.stemVertices[1] = this.rootPosition[1];\n  this.stemVertices[2] = this.rootPosition[2];\n  this.stemVertices[3] = this.pistolPosition[0];\n  this.stemVertices[4] = this.pistolPosition[1];\n  this.stemVertices[5] = this.pistolPosition[2];\n\n  const stemGeometry = new THREE.BufferGeometry();\n\n  stemGeometry.setAttribute(\n    'position',\n    new THREE.BufferAttribute(this.stemVertices, 3)\n  );\n\n  const stemMaterial = new THREE.LineBasicMaterial(\n    {\n      color: colorNodes(3)\n    }\n  );\n\n  this.stem = new THREE.Line(stemGeometry, stemMaterial);\n\n  this.petalGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPetals; ++i) {\n\n    const petalCenter = [\n      this.petalRadius * Math.cos(phi(i, this.numPetals)) + this.pistolPosition[0],\n      this.petalRadius * Math.sin(phi(i, this.numPetals)) + this.pistolPosition[1],\n      this.pistolPosition[2]\n    ];\n\n    const petal = new polygon(petalCenter, this.petalRadius, this.numNodes, phi(i, this.numPetals), this.petalColor);\n\n    this.petalGroup.add(petal.line);\n\n  }\n\n  const pistolGeometry = new THREE.CircleBufferGeometry(this.petalRadius / 3, 32);\n  const pistolMaterial = new THREE.MeshBasicMaterial({ color: this.pistolColor, wireframe: false });\n\n  this.pistol = new THREE.Mesh(pistolGeometry, pistolMaterial);\n  this.pistol.position.set(\n    this.pistolPosition[0],\n    this.pistolPosition[1],\n    this.pistolPosition[2]\n  );\n\n}\n\nexport function sacredGeometry (center, numPolygons, numNodes, polygonRadius, globalRadius, color) {\n\n  this.center = center;\n  this.numPolygons = numPolygons;\n  this.numNodes = numNodes;\n  this.polygonRadius = polygonRadius;\n  this.globalRadius = globalRadius;\n  this.color = color;\n\n  this.geomGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPolygons; ++i) {\n\n    const polyCenter = [\n      this.globalRadius * Math.cos(phi(i, this.numPolygons)) + this.center[0],\n      this.globalRadius * Math.sin(phi(i, this.numPolygons)) + this.center[1],\n      this.center[2]\n    ];\n\n    const poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, phi(i, this.numNodes), this.color);\n\n    this.geomGroup.add(poly.line);\n\n  }\n\n}\n\nexport class Graph {\n\n  constructor (partitionSizes, center, radius, vertexRadius, type) {\n\n    this.partitionSizes = partitionSizes;\n    this.center = center;\n    this.radius = radius;\n    this.vertexRadius = vertexRadius;\n    this.type = type;\n    this.numVertices = 0;\n    this.numEdges = 0;\n    this.vertexGroup = new THREE.Group();\n    this.edgeGroup = new THREE.Group();\n\n  }\n\n  createVertexSet (color) {\n\n    for (let i = 0; i < this.partitionSizes.length; ++i) {\n      this.numVertices = this.numVertices + this.partitionSizes[i];\n    }\n\n    const vertexCenter = [0, 0, 0];\n\n    if (color === 'sequence') {\n\n      for (let i = 0; i < this.numVertices; ++i) {\n\n        if (this.type === 'ball') {\n\n          const vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius, 32);\n          const vertexMaterial = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n          const vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n          this.vertexGroup.add(vertex);\n\n        } else if (this.type === 'point') {\n\n          const vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n          this.vertexGroup.add(vertex.line);\n\n        }\n\n      }\n\n    } else if (color === 'partite') {\n\n      for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n        for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n          if (this.type === 'ball') {\n\n            const vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius / this.numVertices, 32);\n            const vertexMaterial = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n            const vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n            this.vertexGroup.add(vertex);\n\n          } else if (this.type === 'point') {\n\n            const vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n            this.vertexGroup.add(vertex.line);\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  // assign coords to vertices in graph\n  assignVertexCoordinates (layout, angle = 0) {\n\n     if (layout === 'polar') {\n\n         const n = this.numVertices;\n\n         for (let i = 0; i < n; ++i) {\n\n           this.vertexGroup.children[i].position.set(\n             this.center[0] + this.radius * Math.cos(phi(i, n) + angle),\n             this.center[1] + this.radius * Math.sin(phi(i, n) + angle),\n             0\n           );\n\n         }\n\n     } else if (layout === 'partite') {\n\n         let count = 0;\n         const numSides = this.partitionSizes.length;\n\n         if (numSides === 1) {\n\n           const sideScale = (2 * this.radius / (this.partitionSizes[0] + 1));\n\n           if (this.partitionSizes[0] % 2 === 1) {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 const sideSpacing = j - Math.floor(this.partitionSizes[0] / 2)\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           } else {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 const sideSpacing = (j + ((1 - this.partitionSizes[0]) / 2));\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           }\n\n         } else {\n\n           for (let i = 0; i < numSides; ++i) {\n\n               const sideAngle = phi(i, numSides) + angle;\n               const sideScale = (2 * this.radius * Math.sin(Math.PI / numSides) / (this.partitionSizes[i] + 1));\n\n               if (this.partitionSizes[i] % 2 === 1) {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     const sideSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               } else {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     const sideSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               }\n\n               count += this.partitionSizes[i];\n\n           }\n\n         }\n\n     } else if (layout === 'concentric') {\n\n         let count = 0;\n\n         for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n             for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                 if (this.partitionSizes[i] !== 1) {\n\n                   this.vertexGroup.children[count + j].position.set(\n                     this.center[0] + this.radius * (this.radius + i) * Math.cos(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     this.center[1] + this.radius * (this.radius + i) * Math.sin(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     0\n                   );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     } else if (layout === 'grid') {\n\n         let count = 0;\n         const numLevels = this.partitionSizes.length;\n\n         for (let i = 0; i < numLevels; ++i) {\n\n             const levelScale = (2 * this.radius * Math.sin(Math.PI / numLevels) / (this.partitionSizes[i] + 1));\n             const interLevelSpacing = (i - Math.floor(numLevels / 2)) / numLevels;\n\n             if (this.partitionSizes[i] % 2 === 1) {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                   const intraLevelSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                   this.vertexGroup.children[count + j].position.set(\n                     levelScale * intraLevelSpacing,\n                     interLevelSpacing,\n                     0\n                   );\n\n                 }\n\n             } else {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     const intraLevelSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       levelScale * intraLevelSpacing,\n                       interLevelSpacing,\n                       0\n                     );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     }\n\n  }\n\n  addEdges (type) {\n\n    const n = this.numVertices;\n\n     if (type === 'complete') {\n\n         for (let i = 0; i < n - 1; ++i) {\n\n           for (let j = i + 1; j < n; ++j) {\n\n             const edgeGeometry = new THREE.Geometry();\n\n             const edgeMaterial = new THREE.LineBasicMaterial(\n              {\n                color: 0xffffff\n              }\n             );\n\n             edgeGeometry.vertices.push(\n               this.vertexGroup.children[i].position,\n               this.vertexGroup.children[j].position\n             );\n\n             const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n             this.edgeGroup.add(edge);\n\n           }\n\n         }\n\n     } else if (type === 'cycle') {\n\n       for (let i = 0; i < n; ++i) {\n\n         const edgeGeometry = new THREE.Geometry();\n\n         const edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n          if (i < n - 1) {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[i + 1].position\n            );\n          } else {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[0].position\n            );\n          }\n\n         const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'path') {\n\n       for (let i = 0; i < n - 1; ++i) {\n\n         const edgeGeometry = new THREE.Geometry();\n\n         const edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[i].position,\n           this.vertexGroup.children[i + 1].position\n         );\n\n         const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'wheel') {\n\n       for (let i = 1; i < n; ++i) {\n\n         const edgeGeometry = new THREE.Geometry();\n\n         const edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[0].position,\n           this.vertexGroup.children[i].position\n         );\n\n         const edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     }\n\n     this.numEdges = this.edgeGroup.length;\n\n  }\n\n  initialize (type = 'null', layout = 'polar', angle = 0, color = 'partite') {\n    this.createVertexSet(color);\n    this.assignVertexCoordinates(layout, angle);\n    this.addEdges(type);\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Blanket extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      const geometry = new THREE.CircleBufferGeometry((10 / (2 * this.numPolygons - i + 1)), this.numFaces);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      mesh.rotateZ(Math.PI * i / 4);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class BounceRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    const x = [0, 0, 0];\n    const col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      const r = this.radius * i / 10;\n      const poly = new polygon(x, r, 100, 0, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].scale.set(Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), 1);\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthedad extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n\tdraw () {\n\n\t\tconst center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1],\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.scene.position.set(0, 0, -5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].scale.set(1 + Math.cos((i % (this.numCenters * this.numPolygons)) * t / 75), 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75), 1);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tconst x = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tx[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\tx[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n            const poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n            this.scene.add(poly.line);\n\n          }\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -4);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-3;\n      } else {\n       this.scene.children[i].rotation.z += 1e-3;\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          const poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum3 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n        for (let j = 0; j < i; ++j) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\t2 * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t2 * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          const poly = new polygon(polyCenter, 2, this.numNodes, 0, colorNodes(i * j));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -2.5);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum4 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n      for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3));\n\t\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum5 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tconst polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -3);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateX(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-1e-2);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum6 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tconst polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-3);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum7 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numPolygons; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numPolygons)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numPolygons)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t}\n\n    }\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-4);\n      }\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum8 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n\t\tconst center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].position.set(0, 0, Math.sin((i % (this.numLayers * this.numPolygons)) * t / 150));\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum9 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 8);\n\n  }\n\n  draw () {\n\n\t\tconst center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tconst polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].position.set(0, 0, 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75));\n\n\t\t}\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Clam extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\tconst phi = [];\n\n\t\tfor (let i = 0; i <= this.numRidges; ++i) {\n\t\t\tphi.push(2 * Math.PI * i / this.numRidges);\n\t\t}\n\n\t\tconst vertices = new Float32Array(phi.length * 3);\n\n\t\tfor (let i = 0; i < phi.length; ++i) {\n\t\t\tvertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n\t\t\tvertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n\t\t\tvertices[3 * i + 2] = 0;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\t\tcolor: 0x00ffff\n\t\t\t}\n\t\t);\n\n\t\tconst line = new THREE.Line(geometry, material);\n\n\t\tthis.scene.add(line);\n\n\t\tfor (let i = 0; i < this.numRidges; ++i) {\n\n\t\t\tconst endpoints = new Float32Array(6);\n\n\t\t\tendpoints[0] = 0;\n\t\t\tendpoints[1] = 0;\n\t\t\tendpoints[2] = 0;\n\t\t\tendpoints[3] = vertices[(3 * i) + 0];\n\t\t\tendpoints[4] = vertices[(3 * i) + 1];\n\t\t\tendpoints[5] = vertices[(3 * i) + 2];\n\n\t\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew THREE.BufferAttribute(endpoints, 3)\n\t\t\t);\n\n\t\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t\t{\n\t\t\t\t\tcolor: 0x00ffff\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst line = new THREE.Line(geometry, material);\n\n\t\t\tthis.scene.add(line);\n\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Collide0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      const geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: true });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\n        this.scene.children[i].position.z += (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z -= 0.01 * Math.cos(t);\n\n      } else {\n\n        this.scene.children[i].position.z -= (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z += 0.01 * Math.sin(t);\n\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class ConcentricPolygons extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = this.numPolygons; i >= 1; i--) {\n\n      const geometry = new THREE.CircleBufferGeometry((10 / (this.numPolygons - i + 1)), this.numFaces);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * (this.scene.children.length - i) * Math.sin(t / 4);\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tpolygon\n\n} from '../../../utils';\n\nexport default class ConcentricPolygons2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    const x = [0, 0, 0];\n    const t = 0;\n    const col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      const r = this.radius * i / this.numPolygons;\n      const poly = new polygon(x, r, i + 2, t, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z = Math.sin(i) * t / 2;\n\t\t\t} else {\n        this.scene.children[i].rotation.z = Math.sin(-i) * t / 2;\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Fauxlidoscope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSteps = parseFloat(this.parameters.numSteps.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.cameraAmplitude = (animation.cameraZoomMax - animation.cameraZoomMin) / 2;\n\t\tthis.cameraDisplacement = (animation.cameraZoomMax + animation.cameraZoomMin) / 2\n\n  }\n\n  draw () {\n\n\t\tconst concentricPolygonGroup = new THREE.Group();\n\n    for (let i = 0; i < this.numLayers; ++i) {\n\n\t\t\tconst layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tfor (let k = 1; k <= this.numSteps; ++k) {\n\n\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius / k, this.numNodes, Math.PI / 2, colorNodes(3));\n\n\t\t\t\t\tlayerGroup.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconcentricPolygonGroup.add(layerGroup);\n\n    }\n\n\t\tthis.scene.add(concentricPolygonGroup);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      }\n\n    }\n\n\t\tthis.camera.position.set(0, 0, this.cameraAmplitude * Math.sin(1e-1 * t + phi(3, 4)) + this.cameraDisplacement);\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tFlower\n\n} from '../../../utils';\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numFlowers = parseFloat(this.parameters.numFlowers.currentValue);\n\t\tthis.numPetals = parseFloat(this.parameters.numPetals.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.petalRadius = parseFloat(this.parameters.petalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tconst root = [0, -this.numFlowers, 0];\n\n\t\tlet pistol = [0, 0, 0];\n\n\t\tfor (let i = 0; i < this.numFlowers; ++i) {\n\n\t\t\tif (this.numFlowers % 2 === 0) {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - ((this.numFlowers - 1) / 2)),\n\t\t\t\t\t(this.numFlowers - 1) / 2,\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - Math.floor(this.numFlowers / 2)),\n\t\t\t\t\tMath.floor(this.numFlowers / 2),\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tconst flower = new Flower(root, pistol, this.petalRadius, this.numPetals, this.numNodes, colorNodes(i), colorNodes(2));\n\t\t\tthis.scene.add(flower.stem);\n\t\t\tthis.scene.add(flower.petalGroup);\n\t\t\tthis.scene.add(flower.pistol);\n\n\t\t\tthis.scene.position.set(0, 0, 1 - this.numFlowers);\n\n\t\t}\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Gyr0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      const geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: true });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, 1.5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      const r = 1;\n\n\t\t\tthis.scene.children[i].scale.set(1, r * Math.cos(t / 2), i + 1);\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-2 * this.rate * i * Math.cos(i * t);\n\n      } else {\n        this.scene.children[i].rotation.z += 1e-2 * this.rate * i * Math.sin(i * t);\n\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Pearl extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\tconst phi = [];\n\n\t\tfor (let i = 0; i <= this.numRidges; ++i) {\n\t\t\tphi.push(2 * Math.PI * i / this.numRidges);\n\t\t}\n\n\t\tconst vertices = new Float32Array(phi.length * 3);\n\n\t\tfor (let i = 0; i < phi.length; ++i) {\n\t\t\tvertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n\t\t\tvertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n\t\t\tvertices[3 * i + 2] = 0;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\tcolor: 0x00ffff\n\t\t\t}\n\t\t);\n\n\t\tconst line = new THREE.Line(geometry, material);\n\n\t\tthis.scene.add(line);\n\n\t\tfor (let i = 0; i < this.numRidges; ++i) {\n\n\t\t\tconst endpoints = new Float32Array(6);\n\n\t\t\tendpoints[0] = 0;\n\t\t\tendpoints[1] = 0;\n\t\t\tendpoints[2] = 0;\n\t\t\tendpoints[3] = vertices[(3 * i) + 0];\n\t\t\tendpoints[4] = vertices[(3 * i) + 1];\n\t\t\tendpoints[5] = vertices[(3 * i) + 2];\n\n\t\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew THREE.BufferAttribute(endpoints, 3)\n\t\t\t);\n\n\t\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t\t{\n\t\t\t\t\tcolor: 0x00ffff\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst line = new THREE.Line(geometry, material);\n\n\t\t\tthis.scene.add(line);\n\n\t\t}\n\n\t\tconst pearlGeometry = new THREE.CircleBufferGeometry(this.radius / 10, 32);\n\n\t\tconst pearlMaterial = new THREE.MeshBasicMaterial(\n\t\t\t{\n\t\t\t\tcolor: 0xffffff\n\t\t\t}\n\t\t);\n\n\t\tconst pearl = new THREE.Mesh(pearlGeometry, pearlMaterial);\n\n\t\tthis.scene.add(pearl);\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Pinwheel extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      const geometry = new THREE.CircleBufferGeometry((20 / (2 * this.numPolygons - (i / 2) + 1)), this.numFaces);\n      const material = new THREE.MeshBasicMaterial({ color: colorNodes(i + 1), wireframe: false });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * t * ((this.scene.children.length / 2) - i) * Math.PI * i / 160;\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tsacredGeometry\n\n} from '../../../utils';\n\nexport default class Snowflake extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tconst layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < i * this.numLanes; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst geom = new sacredGeometry(polyCenter, this.numPolygons, this.numNodes, this.polygonRadius, this.globalRadius, colorNodes(3));\n\n\t\t\t\tlayerGroup.add(geom.geomGroup);\n\n\t\t\t}\n\n\t\t\tthis.scene.add(layerGroup);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tfor (let j = 0; j < this.scene.children[i].children.length; ++j) {\n\n\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, this.rate * 1e-2 * t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, -this.rate * 1e-2 * t);\n\t\t\t\t}\n\n\t\t\t}\n\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class SloshRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    const x = [0, 0, 0];\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      const r = this.radius * i / 10;\n      const poly = new polygon(x, r, 100, 0, colorNodes(i - 1));\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\t\t\tif (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].scale.set(Math.cos(phi(i, 100) + t / 100), Math.cos(phi(i, 100) + t / 100), 1);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[i].scale.set(Math.sin(phi(i, 100) + t / 100), Math.sin(phi(i, 100) + t / 100), 1);\n\t\t\t}\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tStar\n\n} from '../../../utils';\n\nexport default class StarryNight extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numStars = parseFloat(this.parameters.numStars.currentValue);\n\t\tthis.numStems = parseFloat(this.parameters.numStems.currentValue);\n\t\tthis.numSplits = parseFloat(this.parameters.numSplits.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numStars; ++i) {\n\n\t\t\tconst starCenter = [\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.cos(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.sin(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius)\n\t\t\t];\n\n\t\t\tconst starRadius = Math.abs(Math.random() - 0.5);\n\n\t\t\tconst star = new Star(starCenter, this.numStems, this.numSplits, starRadius, colorNodes(i, 'hot'));\n\n\t\t\tthis.scene.add(star.stemGroup);\n\t\t\tthis.scene.add(star.splitGroup);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class WrigglingDonut extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n\n    for (let i = 1; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tx = [\n            this.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes)) * Math.sin(phi(i, this.numPolygons))),\n            this.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes)) * Math.cos(phi(i, this.numPolygons))),\n            0\n\t\t\t\t\t];\n\n          const poly = new polygon(x, this.polygonRadius, this.numNodes, 0, colorNodes(1));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotateZ(-10 * (Math.sin(t / 10) + Math.cos(t / 10)));\n    }\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Mosaic extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tconst polyClusterCenter = [\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tconst polyCenterOffset = [\n\t\t\t\t\tthis.polygonRadius * Math.cos(phi(j, this.numNodes)),\n\t\t\t\t\tthis.polygonRadius * Math.sin(phi(j, this.numNodes)),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numLayers; ++k) {\n\n\t\t\t\t\tfor (let l = 0; l < this.numPolygons; ++l) {\n\n\t\t\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t\tk * (polyClusterCenter[0] + polyCenterOffset[0]) * Math.sin(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\tk * (polyClusterCenter[1] + polyCenterOffset[1]) * Math.cos(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n\t\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i, 'cool'), 'relative');\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].position.set(0, Math.sin(t / 10) / this.polygonRadius, 0);\n      } else {\n\t\t\t\tthis.scene.children[i].position.set(0, -Math.sin(t / 10) / this.polygonRadius, 0);\n      }\n\n    }\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Mosaic2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tconst group1 = new THREE.Group();\n\t\tconst group2 = new THREE.Group();\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(3), 'relative');\n\n\t\t\t\tgroup1.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tfor (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tconst polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(4));\n\n\t\t\t\tgroup2.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tthis.scene.add(group1);\n\t\tthis.scene.add(group2);\n\n  }\n\n  update () {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % (2) === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-1e-3);\n      }\n\n    }\n\n\t\tfor (let i = 0; i < this.scene.children[1].children.length; ++i) {\n\n\t\t\tif (i % (2) === 0) {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\toffsetStar\n\n} from '../../../utils';\n\nexport default class OffsetStar extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.offset = parseFloat(this.parameters.offset.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t}\n\n\tdraw () {\n\n\t\tconst x = [0, 0, 0];\n\t\tconst star = new offsetStar(this.numVertices, x, this.radius, 0, this.offset, this.color);\n\n\t\tthis.scene.add(star.line);\n\n\t}\n\n}\n","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class SacredCircles extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.circleRadius = parseFloat(this.parameters.circleRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t\tthis.camera.position.set(0, 0, 4);\n\n\t}\n\n\tdraw () {\n\n\t\tlet center = [0, 0, 0];\n\n\t\tfor (let i = 0; i < this.numCircles; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tcenter = [\n\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numCircles)) + Math.sin(phi(j, this.numLayers))),\n\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numCircles)) + Math.cos(phi(j, this.numLayers))),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tconst poly = new polygon(center, this.circleRadius, 100, 0, this.color);\n\n\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi\n\n} from '../../../utils';\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.nodeRadius = parseFloat(this.parameters.nodeRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\t\tthis.divisor = parseFloat(this.parameters.divisor.currentValue);\n\n  }\n\n  draw () {\n\n\t\tconst geometry = new THREE.CircleBufferGeometry(this.globalRadius, this.numNodes);\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0xffffff, wireframe: true });\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t\tif (this.numNodes > 100) {\n\t\t\tmesh.visible = false;\n\t\t}\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tconst geometry = new THREE.CircleBufferGeometry(this.nodeRadius / 10, 32);\n\t\t\tconst material = new THREE.MeshBasicMaterial({ color: colorNodes(i), wireframe: false });\n\t\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\t\tmesh.position.set(\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t);\n\n\t\t\tthis.scene.add(mesh);\n\n\t\t}\n\n  }\n\n  update (t) {\n\n\t\tconst n = this.numNodes / this.divisor;\n\t\tconst rate = this.rate;\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tif (Math.floor(rate * t) >= i % n) {\n\n\t\t\t\tthis.scene.children[i + 1].position.set(\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\t0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class SineWave extends Animation {\n\n  constructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.amplitude = parseFloat(this.parameters.amplitude.currentValue);\n    this.frequency = parseFloat(this.parameters.frequency.currentValue);\n    this.phase = parseFloat(this.parameters.phase.currentValue);\n    this.displacement = parseFloat(this.parameters.displacement.currentValue);\n    this.numPoints = parseFloat(this.parameters.numPoints.currentValue);\n\n  }\n\n  draw () {\n\n    const node_x = [];\n    const node_y = [];\n\n    for (let i = -this.numPoints; i <= this.numPoints; ++i) {\n      node_x.push(i / 1000);\n      node_y.push(this.amplitude * Math.sin(this.frequency * node_x[i + this.numPoints] + this.phase) + this.displacement);\n\n    }\n\n    const vertices = new Float32Array(node_x.length * 3);\n\n    for (let i = 0; i < node_x.length; ++i) {\n      vertices[3 * i + 0] = node_x[i];\n      vertices[3 * i + 1] = node_y[i];\n      vertices[3 * i + 2] = 0;\n    }\n\n    const geometry = new THREE.BufferGeometry();\n\n    geometry.setAttribute(\n      'position',\n      new THREE.BufferAttribute(vertices, 3)\n    );\n\n    const material = new THREE.LineBasicMaterial(\n      {\n        color: 0x00ffff\n      }\n    );\n\n    const line = new THREE.Line(geometry, material);\n\n    this.scene.add(line);\n\n  }\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Circle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSpokes = parseFloat(this.parameters.numSpokes.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.CircleBufferGeometry(this.radius, this.numSpokes);\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0x00ffff, wireframe: true });\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Cube extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\n\t\tconst material = new THREE.MeshBasicMaterial({ color: 0x00ffff, wireframe: false });\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import * as THREE from 'three';\nimport Animation from '../../animation';\n\nimport {\n\n\tphi\n\n} from '../../../utils';\n\nexport default class Polygon extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.center = [0, 0];\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.theta = parseFloat(this.parameters.theta.currentValue);\n\t\tthis.color = 0xf00a00;\n\n\t}\n\n\tdraw () {\n\n\t\tthis.vertices = new Float32Array(this.numVertices * 3);\n\n\t\tfor (let i = 0; i < this.numVertices; ++i) {\n\t\t\tthis.vertices[3 * i + 0] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n\t\t\tthis.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n\t\t\tthis.vertices[3 * i + 2] = 0;\n\t\t}\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(this.vertices, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\t\tcolor: this.color\n\t\t\t}\n\t\t);\n\n\t\tthis.line = new THREE.LineLoop(geometry, material);\n\n\t\tthis.scene.add(this.line);\n\t}\n\n\tupdate () {\n\n\t\tfor (let i = 0; i < this.scene.children.length; ++i) {\n\t\t\tthis.scene.children[i].rotation.z += 1;\n\t\t}\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Rectangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\t/* eslint-disable no-mixed-spaces-and-tabs */\n\t\tconst vertices = new Float32Array([\n\t\t\t-0.5, -0.5, 0.0,\n\t\t\t 0.5, -0.5, 0.0,\n\t\t\t 0.5,  0.5, 0.0,\n\t\t\t-0.5,  0.5, 0.0,\n\t\t\t-0.5, -0.5, 0.0,\n\t\t\t 0.5,  0.5, 0.0\n\t\t]);\n\n\t\tconst colors = new Float32Array([\n\t\t\t1.0, 0.0, 0.0,\n\t\t\t0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 1.0,\n\t\t\t0.0, 1.0, 1.0,\n\t\t\t1.0, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0\n\t\t]);\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tgeometry.setAttribute(\n\t\t\t'color',\n\t\t\tnew THREE.BufferAttribute(colors, 3)\n\t\t);\n\n\t\tconst material = new THREE.MeshBasicMaterial(\n\t\t\t{\n\t\t\t\tvertexColors: THREE.VertexColors,\n\t\t\t\twireframe: false\n\t\t\t}\n\t\t);\n\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Triangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\tconst geometry = new THREE.BufferGeometry();\n\n\t\tconst vertices = new Float32Array([\n\t\t-0.5, -0.5, 0.0,\n\t\t\t0.5, -0.5, 0.0,\n\t\t\t0.0,  0.5, 0.0\n\t\t]);\n\n\t\tconst colors = new Float32Array([\n\t\t\t1.0, 0.0, 0.0,\n\t\t\t0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 1.0\n\t\t]);\n\n\t\tgeometry.setAttribute(\n\t\t\t'position',\n\t\t\tnew THREE.BufferAttribute(vertices, 3)\n\t\t);\n\n\t\tgeometry.setAttribute(\n\t\t\t'color',\n\t\t\tnew THREE.BufferAttribute(colors, 3)\n\t\t);\n\n\t\tconst material = new THREE.LineBasicMaterial(\n\t\t\t{\n\t\t\t\tvertexColors: THREE.VertexColors\n\t\t\t}\n\t\t);\n\n\t\tconst mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t}\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Amparo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n\t\tthis.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\tthis.graph.radius * Math.sin(i * i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Andorinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.cos(i * this.rate * t / this.graph.numVertices),\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Antigua extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n    let count = 0;\n\n    for (let i = 0; i < this.graph.partitionSizes.length; ++i) {\n\n      for (let j = 0; j < this.graph.partitionSizes[i]; ++j) {\n        this.graph.vertexGroup.children[count + j].position.set(\n          this.graph.vertexGroup.children[count + j].position.x + Math.cos(phi(this.rate * t, i + 1)) / 5e2,\n          this.graph.vertexGroup.children[count + j].position.y + Math.sin(phi(this.rate * t, i + 1)) / 5e2,\n          0\n        );\n      }\n\n      count += this.graph.partitionSizes[i];\n\n    }\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Batidinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Bicardi extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tthis.graphRadius * Math.sin(this.scene.children[0].children[i].position.y - t * this.rate / this.graph.numVertices) * Math.sin(this.scene.children[0].children[i].position.y - i * t * this.rate / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Blouse extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update () {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Brazil extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Choro extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.graphRadius * Math.cos(phi(i, this.graph.numVertices) + this.rate * Math.sin(this.scene.children[0].children[i].position.x - t) / 10),\n\t\t\t\tthis.graphRadius * Math.sin(phi(i, this.graph.numVertices) + this.rate * Math.cos(this.scene.children[0].children[i].position.y - t) / 10),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Dialogo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Flower extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Games extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update () {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Lamento extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Look extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.dampening = parseFloat(this.parameters.dampening.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 5);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update () {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      if (i % 4 === 0) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 1) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 2) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n    }\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Mojave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 4);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Sabia extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Tereza extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(t / 10) * Math.sin(this.rate * i * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * (i - 1) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Triste extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(this.rate * (i % this.divisor) * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(this.rate * (i % this.divisor) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Wave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    const partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    const center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tMath.sin(this.scene.children[0].children[i].position.y - t * this.rate / 100) * Math.sin(i * t * this.rate / 100),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n","// art\nimport Blanket from './humble_beginnings/art/blanket';\nimport BounceRipple from './humble_beginnings/art/bounceRipple';\nimport Chrysanthedad from './humble_beginnings/art/chrysanthedad';\nimport Chrysanthemum from './humble_beginnings/art/chrysanthemum';\nimport Chrysanthemum2 from './humble_beginnings/art/chrysanthemum2';\nimport Chrysanthemum3 from './humble_beginnings/art/chrysanthemum3';\nimport Chrysanthemum4 from './humble_beginnings/art/chrysanthemum4';\nimport Chrysanthemum5 from './humble_beginnings/art/chrysanthemum5';\nimport Chrysanthemum6 from './humble_beginnings/art/chrysanthemum6';\nimport Chrysanthemum7 from './humble_beginnings/art/chrysanthemum7';\nimport Chrysanthemum8 from './humble_beginnings/art/chrysanthemum8';\nimport Chrysanthemum9 from './humble_beginnings/art/chrysanthemum9';\nimport Clam from './humble_beginnings/art/clam';\nimport Collide0scope from './humble_beginnings/art/collide0scope';\nimport ConcentricPolygons from './humble_beginnings/art/concentricPolygons';\nimport ConcentricPolygons2 from './humble_beginnings/art/concentricPolygons2';\nimport Fauxlidoscope from './humble_beginnings/art/fauxlidoscope';\nimport Flowers from './humble_beginnings/art/flowers';\nimport Gyr0scope from './humble_beginnings/art/gyr0scope';\nimport Pearl from './humble_beginnings/art/pearl';\nimport Pinwheel from './humble_beginnings/art/pinwheel';\nimport Snowflake from './humble_beginnings/art/snowflake';\nimport SloshRipple from './humble_beginnings/art/sloshRipple';\nimport StarryNight from './humble_beginnings/art/starryNight';\nimport WrigglingDonut from './humble_beginnings/art/wrigglingDonut';\n\n// math\nimport Mosaic from './humble_beginnings/math/mosaic';\nimport Mosaic2 from './humble_beginnings/math/mosaic2';\nimport OffsetStar from './humble_beginnings/math/offsetStar';\nimport SacredCircles from './humble_beginnings/math/sacredCircles';\nimport Unoriginal from './humble_beginnings/math/unoriginal';\n\n// physics\nimport SineWave from './humble_beginnings/physics/sineWave';\n\n// shapes\nimport Circle from './humble_beginnings/shapes/circle';\nimport Cube from './humble_beginnings/shapes/cube';\nimport Polygon from './humble_beginnings/shapes/polygon';\nimport Rectangle from './humble_beginnings/shapes/rectangle';\nimport Triangle from './humble_beginnings/shapes/triangle';\n\n// simulations\nimport Amparo from './simulations/amparo';\nimport Andorinha from './simulations/andorinha';\nimport Antigua from './simulations/antigua';\nimport Batidinha from './simulations/batidinha';\nimport Bicardi from './simulations/bicardi';\nimport Blouse from './simulations/blouse';\nimport Brazil from './simulations/brazil';\nimport Choro from './simulations/choro';\nimport Dialogo from './simulations/dialogo';\nimport Flower from './simulations/flower';\nimport Games from './simulations/games';\nimport Lamento from './simulations/lamento';\nimport Look from './simulations/look';\nimport Mojave from './simulations/mojave';\nimport Sabia from './simulations/sabia';\nimport Tereza from './simulations/tereza';\nimport Triste from './simulations/triste';\nimport Wave from './simulations/wave';\n\nconst ANIMATION_MAP = {\n  // art\n  blanket: Blanket,\n  'bounce ripple': BounceRipple,\n  chrysanthedad: Chrysanthedad,\n  chrysanthemum: Chrysanthemum,\n  chrysanthemum2: Chrysanthemum2,\n  chrysanthemum3: Chrysanthemum3,\n  chrysanthemum4: Chrysanthemum4,\n  chrysanthemum5: Chrysanthemum5,\n  chrysanthemum6: Chrysanthemum6,\n  chrysanthemum7: Chrysanthemum7,\n  chrysanthemum8: Chrysanthemum8,\n  chrysanthemum9: Chrysanthemum9,\n  collide: Collide0scope,\n  'concentric polygons': ConcentricPolygons,\n  'concentric polygons 2': ConcentricPolygons2,\n  fauxlidoscope: Fauxlidoscope,\n  flowers: Flowers,\n  gyro: Gyr0scope,\n  pinwheel: Pinwheel,\n  snowflake: Snowflake,\n  'slosh ripple': SloshRipple,\n  'starry night': StarryNight,\n  'wriggling donut': WrigglingDonut,\n  // math\n  mosaic: Mosaic,\n  mosaic2: Mosaic2,\n  'sacred circles': SacredCircles,\n  star: OffsetStar,\n  unoriginal: Unoriginal,\n  // physics\n  'sine wave': SineWave,\n  // shapes\n  circle: Circle,\n  clam: Clam,\n  cube: Cube,\n  pearl: Pearl,\n  polystarter: Polygon,\n  rectangle: Rectangle,\n  triangle: Triangle,\n  // simulations\n  amparo: Amparo,\n  andorinha: Andorinha,\n  antigua: Antigua,\n  batidinha: Batidinha,\n  bicardi: Bicardi,\n  blouse: Blouse,\n  brazil: Brazil,\n  choro: Choro,\n  dialogo: Dialogo,\n  flower: Flower,\n  games: Games,\n  lamento: Lamento,\n  look: Look,\n  mojave: Mojave,\n  sabia: Sabia,\n  tereza: Tereza,\n  triste: Triste,\n  wave: Wave\n};\n\nexport function generateAnimation (scene, camera, animation) {\n\n  if (ANIMATION_MAP[animation.name]) {\n    return new ANIMATION_MAP[animation.name](scene, camera, animation);\n  }\n\n}\n","import * as THREE from 'three';\n\nimport { generateAnimation } from './index';\n\nconst OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default class CanvasManager {\n\n  constructor (canvas, animation) {\n    // initialize canvas\n\n    this.canvas = canvas;\n\n    this.checkCanvasSize();\n\n    this.setCamera(3);\n    this.setRenderer(0x000000);\n\n    this.checkCanvasSize();\n\n    window.addEventListener('resize', () => this.checkCanvasSize());\n\n    // initialize animation\n\n    this.scene = new THREE.Scene();\n\n    this.animation = generateAnimation(this.scene, this.camera, animation);\n\n    if (this.animation.controllable) {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    }\n\n    this.dt = 0;\n\n    this.animation.draw();\n\n    this.tick = this.tick.bind(this);\n\n    // run animation\n\n    this.tick();\n\n  }\n\n  setRenderer (backgroundColor) {\n\n    this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas, antialias: true });\n    this.renderer.setClearColor(backgroundColor);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n  }\n\n  setCamera (offset) {\n\n    this.camera = new THREE.PerspectiveCamera(75, this.canvasWidth / this.canvasHeight, 0.1, 1000);\n    this.camera.position.z = offset;\n\n  }\n\n  checkCanvasSize () {\n\n    const cv = document.getElementById('opengl2webgl-display');\n\n    this.canvasWidth = cv.offsetWidth;\n    this.canvasHeight = cv.offsetHeight;\n\n    if (this.renderer) this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.camera) {\n\n      this.camera.aspect = this.canvasWidth / this.canvasHeight;\n      this.camera.updateProjectionMatrix();\n\n    }\n\n  }\n\n  tick () {\n\n    this.animationId = requestAnimationFrame(this.tick);\n\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.animation.dynamic) {\n      this.dt += 1e-2;\n\n      if (this.dt > 2 * Math.PI * 1e6) {\n        this.dt -= 2 * Math.PI * 1e6;\n      }\n\n      this.animation.update(this.dt);\n    }\n\n  }\n}\n","<template>\n\n  <div>\n    <div v-for=\"category in visibleCategories\" :key=\"category.name\" class=\"opengl2webgl-navpane-category\" >\n      <p v-b-toggle=\"'category-' + category.name\" class=\"opengl2webgl-navpane-category-text\"> {{ category.name }} </p>\n      <b-collapse :id=\"'category-' + category.name\">\n        <ul class=\"opengl2webgl-navpane-list\">\n          <li\n            v-for='item in visibleAnimations'\n            :key='item.name'\n            class = \"opengl2webgl-navpane-item\"\n            >\n            <div v-if='item.category == category.name'>\n              <p\n                v-b-toggle=\"item.name\"\n                class=\"opengl2webgl-navpane-text\"\n                :class='{active: item.active}'\n                v-on:click='activate(item)'\n                > {{ item.text }}\n              </p>\n              <opengl2webgl-navpane-controls\n                v-if=\"item.parameters.length !== 0 && item.active\"\n                :animation=\"item\"\n                :screenType=\"screenType\"\n                v-bind=\"{activate, resetAnimation, toFullScreen, resetInput}\"\n                />\n            </div>\n          </li>\n        </ul>\n      </b-collapse>\n    </div>\n  </div>\n\n</template>\n\n<script>\n\nimport NavpaneControls from './NavpaneControls';\nimport CanvasManager from './canvasManager';\n\nlet canvasManager;\n\nexport default {\n  props: ['screenType', 'searchedText'],\n  components: {\n    'opengl2webgl-navpane-controls': NavpaneControls\n  },\n  data () {\n    return {\n      display: false,\n      categories: [\n        {\n          active: false,\n          hidden: false,\n          name: 'art'\n        },\n        {\n          active: false,\n          hidden: false,\n          name: 'math'\n        },\n        {\n          active: false,\n          hidden: true,\n          name: 'physics'\n        },\n        {\n          active: false,\n          hidden: true,\n          name: 'shapes'\n        },\n        {\n          active: false,\n          hidden: false,\n          name: 'simulations'\n        }\n      ],\n      animations: [\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_blanket',\n          category: 'art',\n          controllable: false,\n          dynamic: false,\n          hidden: true,\n          name: 'blanket',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 500,\n              minValue: 3\n            }\n          },\n          text: 'blanket'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_bounce_ripple',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'bounce ripple',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 6,\n              minValue: 1\n            }\n          },\n          text: 'bounce ripple'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthedad',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'chrysanthedad',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 32,\n              minValue: 2\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 32,\n              currentValue: 32,\n              maxValue: 32,\n              minValue: 2\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 32,\n              minValue: 1\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 8,\n              minValue: 1\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 8,\n              minValue: 1\n            }\n          },\n          text: 'chrysanthedad'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 120,\n              minValue: 4\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 16,\n              currentValue: 16,\n              maxValue: 120,\n              minValue: 12\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 6,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 6,\n              minValue: 1\n            }\n          },\n          text: 'chrysanthemum'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum2',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum2',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 2'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum3',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum3',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 3'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum4',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum4',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 4'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum5',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum5',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 5'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'chrysanthemum6',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 120,\n              minValue: 4\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 16,\n              currentValue: 16,\n              maxValue: 120,\n              minValue: 12\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 6,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 6,\n              minValue: 1\n            }\n          },\n          text: 'chrysanthemum'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum7',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum7',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 7'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum8',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum8',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum8'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum9',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum9',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 32,\n              currentValue: 32,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 9'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_clam',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'clam',\n          parameters: {\n            numRidges: {\n              label: 'Number of Ridges',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'clam'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_collide0scope',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'collide',\n          parameters: {\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 100,\n              minValue: 2\n            }\n          },\n          text: 'collide0scope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_concentric_polygons',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'concentric polygons',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 3\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 48,\n              minValue: 3\n            }\n          },\n          text: 'concentric polygons'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_concentric_polygons2',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'concentric polygons 2',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 100,\n              minValue: 1\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 20,\n              minValue: 1\n            }\n          },\n          text: 'concentric polygons 2'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_fauxlidoscope',\n          cameraZoomMax: 100,\n          cameraZoomMin: 1,\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'fauxlidoscope',\n          parameters: {\n            numSteps: {\n              label: 'Number of Steps',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 120,\n              minValue: 1\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 120,\n              minValue: 2\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 64,\n              minValue: 3\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 60,\n              minValue: 2\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 64,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 0\n            }\n          },\n          text: 'fauxlidoscope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_flowers',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'flowers',\n          parameters: {\n            numFlowers: {\n              label: 'Number of Flowers',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 10,\n              minValue: 1\n            },\n            numPetals: {\n              label: 'Number of Petals',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 256,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 64,\n              minValue: 2\n            },\n            petalRadius: {\n              label: 'Petal Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1,\n              minValue: 1\n            }\n          },\n          text: 'flowers'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_gyr0scope',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'gyro',\n          parameters: {\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 100,\n              minValue: 0\n            }\n          },\n          text: 'gyr0scope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_pearl',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'pearl',\n          parameters: {\n            numRidges: {\n              label: 'Number of Ridges',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'pearl'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_pinwheel',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'pinwheel',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 20,\n              minValue: 1\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 32,\n              minValue: 3\n            }\n          },\n          text: 'pinwheel'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_snowflake',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'snowflake',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 12,\n              minValue: 1\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 8\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 100,\n              minValue: 3\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 64,\n              minValue: 2\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 500,\n              minValue: 0\n            }\n          },\n          text: 'snowflake'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_slosh_ripple',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'slosh ripple',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 500,\n              minValue: 10\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 10,\n              minValue: 1\n            }\n          },\n          text: 'slosh ripple'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_starry_night',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'starry night',\n          parameters: {\n            numStars: {\n              label: 'Number of Stars',\n              defaultValue: 42,\n              currentValue: 42,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numStems: {\n              label: 'Number of Stems',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 2\n            },\n            numSplits: {\n              label: 'Number of Splits',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 8,\n              minValue: 1\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 42,\n              currentValue: 42,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'starry night'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_wriggling_donut',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'wriggling donut',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 0.2,\n              currentValue: 0.2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'wriggling donut'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_mosaic',\n          category: 'math',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'mosaic',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 3\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 100,\n              minValue: 2\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 50,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 50,\n              minValue: 0\n            }\n          },\n          text: 'mosaic'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_mosaic2',\n          category: 'math',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'mosaic2',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 120,\n              minValue: 1\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 64,\n              currentValue: 64,\n              maxValue: 64,\n              minValue: 3\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 24,\n              currentValue: 24,\n              maxValue: 120,\n              minValue: 4\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 20,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 0.5,\n              currentValue: 0.5,\n              maxValue: 5,\n              minValue: 0\n            }\n          },\n          text: 'mosaic'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_sacred_circles',\n          category: 'math',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'sacred circles',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 3\n            },\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 1\n            },\n            circleRadius: {\n              label: 'Circle Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 0\n            }\n          },\n          text: 'sacred circles'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_star',\n          category: 'math',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'star',\n          parameters: {\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            offset: {\n              label: 'Offset',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'star'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_unoriginal',\n          category: 'math',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'unoriginal',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 24,\n              currentValue: 24,\n              maxValue: 1000,\n              minValue: 3\n            },\n            nodeRadius: {\n              label: 'Node Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'unoriginal'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#physics_sine_wave',\n          category: 'physics',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'sine wave',\n          parameters: {\n            amplitude: {\n              label: 'Amplitude',\n              defaultValue: 0.5,\n              currentValue: 0.5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            frequency: {\n              label: 'Frequency',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            phase: {\n              label: 'Phase',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            },\n            displacement: {\n              label: 'Displacement',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPoints: {\n              label: 'Number of Points',\n              defaultValue: 1500,\n              currentValue: 1500,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'sine wave'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_circle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'circle',\n          parameters: {\n            numSpokes: {\n              label: 'Number of Spokes',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'circle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_cube',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'cube',\n          parameters: [],\n          text: 'cube'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#polystarter',\n          category: 'shapes',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'polystarter',\n          parameters: {\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            theta: {\n              label: 'Theta',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'polystarter'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_rectangle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'rectangle',\n          parameters: [],\n          text: 'rectangle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_triangle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'triangle',\n          parameters: [],\n          text: 'triangle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_amparo',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'amparo',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'amparo'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_andorinha',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'andorinha',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 500,\n              currentValue: 500,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2.25,\n              currentValue: 2.25,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'andorinha'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_antigua',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'antigua',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 50,\n              currentValue: 50,\n              maxValue: 1000,\n              minValue: 10\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 50,\n              minValue: 1\n            }\n          },\n          text: 'antigua'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_batidinha',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'batidinha',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'batidinha'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_bicardi',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'bicardi',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 10,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 2\n            }\n          },\n          text: 'bicardi'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_blouse',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'blouse',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'blouse'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_brazil',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'brazil',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'brazil'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_choro',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'choro',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 50,\n              minValue: 1\n            }\n          },\n          text: 'choro'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_dialogo',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'dialogo',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'dialogo'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_flower',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'flower',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'flower'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_games',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'games',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'games'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_lamento',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'lamento',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'lamento'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_look',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'look',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            dampening: {\n              label: 'Dampening',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'look'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_mojave',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'mojave',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'mojave'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_sabia',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'sabia',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'sabia'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_tereza',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'tereza',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'tereza'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_triste',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'triste',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 3\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'triste'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_wave',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'wave',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 120,\n              currentValue: 120,\n              maxValue: 1000,\n              minValue: 10\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'wave'\n        }\n      ]\n    }\n  },\n  methods: {\n    activate: function (animation) {\n      for (let i = 0; i < this.animations.length; ++i) {\n        this.animations[i].active = false;\n      }\n      animation.active = true;\n      this.display = true;\n      const canvas = document.getElementById('opengl2webgl-canvas');\n      if (canvasManager) {\n        if (canvasManager.animationId > 0) {\n          cancelAnimationFrame(canvasManager.animationId);\n        }\n      }\n      canvasManager = new CanvasManager(canvas, animation);\n    },\n    resetAnimation: function (animation) {\n      for (const parameter in animation.parameters) {\n        const param = animation.parameters[parameter];\n        param.currentValue = param.defaultValue;\n      }\n      this.activate(animation);\n    },\n    toFullScreen: function () {\n      const canvas = document.getElementById('opengl2webgl-canvas');\n      if (canvas.requestFullscreen) {\n        canvas.requestFullscreen();\n      } else if (canvas.webkitRequestFullscreen) {\n        canvas.webkitRequestFullscreen();\n      } else if (canvas.mozRequestFullScreen) {\n        canvas.mozRequestFullScreen();\n      } else if (canvas.msRequestFullscreen) {\n        canvas.msRequestFullscreen();\n      }\n    },\n    resetInput: function (parameter) {\n      if (parameter.currentValue > parameter.maxValue) {\n        parameter.currentValue = parameter.maxValue\n      } else if (parameter.currentValue < parameter.minValue) {\n        parameter.currentValue = parameter.minValue\n      }\n    }\n  },\n  computed: {\n    visibleAnimations () {\n      return this.animations.filter(\n        animation => {\n          if (!animation.hidden) {\n            return animation.text.toLowerCase().includes(this.searchedText.toLowerCase())\n          }\n        }\n      );\n    },\n    visibleCategories () {\n      return this.categories.filter(\n        category => {\n          if (!category.hidden) {\n            return category\n          }\n        }\n      );\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.opengl2webgl-navpane-category-text {\n  font-family: \"Arial\";\n  font-weight: bold;\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n.opengl2webgl-navpane-category-text:focus {\n  outline: none;\n}\n\n.opengl2webgl-navpane-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.opengl2webgl-navpane-text {\n  color: purple;\n  text-decoration: underline;\n  font-family: \"Arial\";\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n.opengl2webgl-navpane-text:focus {\n  outline: none;\n}\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Navpane.vue?vue&type=template&id=a632938c&\"\nimport script from \"./Navpane.vue?vue&type=script&lang=js&\"\nexport * from \"./Navpane.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Navpane.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <b-container fluid id=\"opengl2webgl-container\">\n      <b-row v-if=\"screenType === 'phone'\">\n        <b-col>\n          <h1 id=\"opengl2webgl-phone-message\">ROTATE ME</h1>\n        </b-col>\n      </b-row>\n      <b-row v-else>\n        <b-col id=\"opengl2webgl-navpane\" md=\"2\" sm=\"3\">\n          <h2 id=\"opengl2webgl-navpane-title\" :class=\"screenType\">Animations</h2>\n          <input type=\"text\" id=\"opengl2webgl-search-bar\" placeholder=\"Search\" onfocus=\"this.value=''\" v-model=\"searchedText\"/>\n          <opengl2webgl-navpane-menu id=\"opengl2webgl-navpane-menu\" :class=\"[screenAspectRatio, screenType]\" :screenType=\"screenType\" :searchedText=\"searchedText\"/>\n        </b-col>\n        <b-col md=\"10\" sm=\"9\" id='opengl2webgl-display'>\n          <canvas id='opengl2webgl-canvas'></canvas>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport Navpane from './Navpane/Navpane';\n\nexport default {\n  props: ['screenType', 'screenAspectRatio'],\n  name: 'OpenGL2WebGLApp',\n  components: {\n    'opengl2webgl-navpane-menu': Navpane\n  },\n  data () {\n    return {\n      searchedText: ''\n    }\n  }\n}\n</script>\n\n<style>\n\n#opengl2webgl-phone-message {\n  position: relative;\n  top: 70%;\n  text-align: center;\n}\n\n#opengl2webgl-navpane {\n  height: 90vh;\n  background: none;\n  overflow: hidden;\n  position: relative;\n}\n\n#opengl2webgl-navpane-title {\n  position: relative;\n}\n\n#opengl2webgl-search-bar {\n  position: relative;\n  width: 100%;\n}\n\n#opengl2webgl-navpane-menu {\n  height: 87%;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: absolute;\n  margin-top: 10px;\n}\n::-webkit-scrollbar {\n  background: transparent;\n}\n\n#opengl2webgl-navpane-menu.tablet, #opengl2webgl-navpane-menu.phone {\n  height: 80%;\n}\n\n#opengl2webgl-navpane-menu.widescreen {\n  height: 75%;\n}\n\n#opengl2webgl-display {\n  height:90vh;\n  overflow: hidden;\n}\n\n#opengl2webgl-display.tablet, #opengl2webgl-display.phone {\n  height:85vh;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenGL2WebGLApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenGL2WebGLApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OpenGL2WebGLApp.vue?vue&type=template&id=03e4ffeb&\"\nimport script from \"./OpenGL2WebGLApp.vue?vue&type=script&lang=js&\"\nexport * from \"./OpenGL2WebGLApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./OpenGL2WebGLApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"media-container\"}},[_c('h1',[_vm._v(\"Sounds I Make\")]),_c('div',{attrs:{\"id\":\"media-players\"}},_vm._l((_vm.mediaPlayers),function(player){return _c('div',{key:player.name,staticClass:\"media-player\"},[_c('b-row',{staticClass:\"justify-content-md-center\"},[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(player.embedref)}})])],1)],1)}),0)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"media-container\">\n      <h1>Sounds I Make</h1>\n      <div id=\"media-players\">\n        <div v-for=\"player in mediaPlayers\" :key=\"player.name\" class=\"media-player\">\n          <b-row class=\"justify-content-md-center\">\n            <b-col md=\"6\">\n              <span v-html='player.embedref'></span>\n            </b-col>\n          </b-row>\n        </div>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'MediaApp',\n  data () {\n    return {\n      mediaPlayers: [\n        {\n          name: 'bandcamp-monkey',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=734807793/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=4110217143/transparent=true/\" seamless><a href=\"https://barncatboys.bandcamp.com/album/baby-songs\">Baby Songs by Barncat Productions</a></iframe>'\n        },\n        {\n          name: 'bandcamp-dub',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=916923795/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=3453975111/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/siblings-and-friends\">Siblings and Friends by Siblings and Friends</a></iframe>'\n        },\n        {\n          name: 'soundlcoud-cheerio',\n          embedref: '<iframe width=\"100%\" height=\"120px\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/713985979&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"></iframe>'\n        },\n        {\n          name: 'bandcamp-gross',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=3621861420/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=493506869/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/keepin-it-clean\">Keepin it Clean by Serge Dean</a></iframe>'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#media-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n  overflow: hidden;\n}\n\n#media-player {\n  width: 100%;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MediaApp.vue?vue&type=template&id=0e01f94b&\"\nimport script from \"./MediaApp.vue?vue&type=script&lang=js&\"\nexport * from \"./MediaApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MediaApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{class:_vm.screenType,attrs:{\"align-h\":\"center\",\"id\":\"cv-container\"}},[(_vm.screenType !== 'monitor')?_c('div',_vm._l((_vm.cvContents),function(cvSection){return _c('b-row',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('b-col',{staticClass:\"cv-section\",class:_vm.screenType,attrs:{\"cols\":\"12\"}},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2)],1)}),1):_vm._e(),(_vm.screenType === 'monitor')?_c('div',{attrs:{\"id\":\"cv-slider\"}},[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){return _vm.onSlideLeft(_vm.currentSlide)}}},[_c('span',{staticClass:\"fa fa-chevron-left\"})])],1),_c('b-col',{attrs:{\"cols\":\"8\"}},_vm._l((_vm.visibleCvContents),function(cvSection){return _c('div',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2)}),0),_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){return _vm.onSlideRight(_vm.currentSlide)}}},[_c('span',{staticClass:\"fa fa-chevron-right\"})])],1)],1)],1):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"cv-container\" :class=\"screenType\">\n      <div v-if=\"screenType !== 'monitor'\">\n        <b-row v-for=\"cvSection in cvContents\" :key=\"cvSection.header\" class=\"cv-section-content\">\n          <b-col cols=\"12\" class=\"cv-section\" :class=\"screenType\">\n            <h1>{{cvSection.header}}</h1> <br>\n            <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n          </b-col>\n        </b-row>\n      </div>\n      <div v-if=\"screenType === 'monitor'\" id=\"cv-slider\">\n        <b-row>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" @click=\"onSlideLeft(currentSlide)\">\n              <span class=\"fa fa-chevron-left\"></span>\n            </b-btn>\n          </b-col>\n          <b-col cols=\"8\">\n              <div v-for=\"cvSection in visibleCvContents\" :key=\"cvSection.header\" class=\"cv-section-content\">\n                <h1>{{cvSection.header}}</h1> <br>\n                <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n              </div>\n          </b-col>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" @click=\"onSlideRight(currentSlide)\">\n              <span class=\"fa fa-chevron-right\"></span>\n            </b-btn>\n          </b-col>\n        </b-row>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['screenType'],\n  name: 'CVApp',\n  data () {\n    return {\n      currentSlide: 0,\n      cvContents: [\n        {\n          display: true,\n          header: 'Education',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute'\n            },\n            {\n              type: 'cv-description',\n              text: 'B.S. in Physics and Mathematics (2015)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Experience',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Crux Informatics'\n            },\n            {\n              type: 'cv-description',\n              text: 'Data Integration Engineer (2019-)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'FactSet Research Systems, Inc.'\n            },\n            {\n              type: 'cv-description',\n              text: 'Product Manager, Risk and Quantitative Analytics (2016-2019)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Barncat Productions'\n            },\n            {\n              type: 'cv-description',\n              text: 'Chief Technology Officer, Head of Public Relations, Studio Musician (2015-2016)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute Department of Mathematics'\n            },\n            {\n              type: 'cv-description',\n              text: 'Research Student (2014-2015)'\n            },\n            {\n              type: 'cv-description',\n              text: 'Teaching Assistant, Introduction to Differential Equations (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Affiliations',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Pi Mu Epsilon, Kappa'\n            },\n            {\n              type: 'cv-description',\n              text: 'Secretary (2014-2015)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Delta Tau Delta, Upsilon'\n            },\n            {\n              type: 'cv-description',\n              text: 'Recording Secretary (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Accolades',\n          details: [\n            {\n              type: 'cv-description',\n              text: 'Rensselaer Medalist (2010)'\n            }\n          ]\n        }\n      ]\n    }\n  },\n  methods: {\n    onSlideLeft (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n\n      if (this.currentSlide === 0) {\n        this.currentSlide = this.cvContents.length - slide - 1;\n      } else {\n        this.currentSlide = slide - 1;\n      }\n\n      this.cvContents[this.currentSlide].display = true;\n    },\n    onSlideRight (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n      this.currentSlide = (slide + 1) % this.cvContents.length;\n      this.cvContents[this.currentSlide].display = true;\n    }\n  },\n  computed: {\n    visibleCvContents () {\n      return this.cvContents.filter(\n        cvContents => {\n          if (cvContents.display) {\n            return cvContents\n          }\n        }\n      );\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#cv-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n}\n\n#cv-container.monitor {\n  top: 30%;\n  overflow: hidden;\n}\n\n#cv-slider {\n  position: relative;\n  top: 50%;\n}\n\n.cv-slider-arrow, .cv-slider-arrow:hover, .cv-slider-arrow:active, .cv-slider-arrow:focus, .cv-slider-arrow:visited {\n  background: none;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  position: fixed;\n  top: 40%;\n}\n\n.cv-organization {\n  font-weight: bold;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CVApp.vue?vue&type=template&id=7acaf64f&\"\nimport script from \"./CVApp.vue?vue&type=script&lang=js&\"\nexport * from \"./CVApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CVApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"contact-container\"}},[_c('b-row',[_c('b-col',[_c('h1',[_vm._v(\"HIT ME UP\")])])],1),_vm._l((_vm.contactInfo),function(contactInfoItem){return _c('b-row',{key:contactInfoItem.text},[_c('b-col',[_c('p',[_vm._v(_vm._s(contactInfoItem.text))])])],1)}),_c('b-row',[_c('b-col',_vm._l((_vm.contactLinks),function(contactLink){return _c('a',{key:contactLink.icon,staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":contactLink.src,\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa\",class:contactLink.icon})])}),0)],1),_c('b-row',[_c('b-col',[_c('a',{staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":\"https://github.com/max-t-wheeler\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa fa-github\"})])])],1)],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"contact-container\">\n      <b-row>\n        <b-col>\n          <h1>HIT ME UP</h1>\n        </b-col>\n      </b-row>\n      <b-row v-for=\"contactInfoItem in contactInfo\" :key=\"contactInfoItem.text\" >\n        <b-col>\n          <p>{{ contactInfoItem.text }}</p>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a v-for=\"contactLink in contactLinks\" :key=\"contactLink.icon\" rel=\"noopener\" class=\"contact-icon\" :href=\"contactLink.src\" target=\"_blank\">\n            <span class=\"fa\" :class=\"contactLink.icon\"/>\n          </a>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a rel=\"noopener\" class=\"contact-icon\" href=\"https://github.com/max-t-wheeler\" target=\"_blank\">\n            <span class=\"fa fa-github\"/>\n          </a>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'ContactApp',\n  data () {\n    return {\n      contactInfo: [\n        {\n          text: 'Max T. Wheeler'\n        },\n        {\n          text: 'max.t.wheeler@gmail.com'\n        },\n        {\n          text: 'CT | MA | NY'\n        }\n      ],\n      contactLinks: [\n        {\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin'\n        },\n        {\n          src: 'https://www.facebook.com/max.t.wheeler',\n          icon: 'fa-facebook'\n        },\n        {\n          src: 'https://soundcloud.com/empty-dubs',\n          icon: 'fa-soundcloud'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#contact-container {\n  position: relative;\n  top: 20%;\n  text-align: center;\n}\n\n.contact-icon {\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n}\n\n.contact-icon:hover, .contact-icon:active, .contact-icon:visited {\n  color: black;\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactApp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ContactApp.vue?vue&type=template&id=2674491d&\"\nimport script from \"./ContactApp.vue?vue&type=script&lang=js&\"\nexport * from \"./ContactApp.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ContactApp.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\n  <div id=\"app-base\">\n    <app-toolbar :homeContents=\"home\" :appContents=\"contents\" class=\"toolbar\"/>\n    <transition name=\"fade\" mode=\"out-in\">\n      <home-page v-if=\"home.display\" :screenType=\"screenType\" class=\"application\"/>\n      <opengl2webgl-app v-if=\"contents[0].display\" :screenType=\"screenType\" class=\"application\"/>\n      <media-app v-if=\"contents[1].display\" :screenType=\"screenType\" class=\"application\"/>\n      <cv-app v-if=\"contents[2].display\" :screenType=\"screenType\" class=\"application\"/>\n      <contact-app v-if=\"contents[3].display\" :screenType=\"screenType\" class=\"application\"/>\n    </transition>\n  </div>\n\n</template>\n\n<script>\n\nimport Toolbar from './components/Toolbar';\nimport Home from './components/Home/Home';\nimport OpenGL2WebGLApp from './components/OpenGL2WebGL/OpenGL2WebGLApp';\nimport MediaApp from './components/Media/MediaApp';\nimport CVApp from './components/CV/CVApp';\nimport ContactApp from './components/Contact/ContactApp';\n\nexport default {\n  name: 'App',\n  components: {\n    'app-toolbar': Toolbar,\n    'home-page': Home,\n    'opengl2webgl-app': OpenGL2WebGLApp,\n    'media-app': MediaApp,\n    'cv-app': CVApp,\n    'contact-app': ContactApp\n  },\n  data () {\n    return {\n      home: {\n        name: 'Home',\n        address: '#home',\n        display: true\n      },\n      contents: [\n        {\n          name: 'Sights',\n          address: '#sights',\n          display: false\n        },\n        {\n          name: 'Sounds',\n          address: '#sounds',\n          display: false\n        },\n        {\n          name: 'CV',\n          address: '#cv',\n          display: false\n        },\n        {\n          name: 'Contact',\n          address: '#contact',\n          display: false\n        }\n      ],\n      screenType: '',\n      screenAspectRatio: ''\n    }\n  },\n  methods: {\n    checkScreenSize: function () {\n\n      if (window.innerWidth < 576) {\n        this.screenType = 'phone';\n      } else if (window.innerWidth < 768) {\n        this.screenType = 'tablet';\n      } else {\n        this.screenType = 'monitor';\n      }\n\n      if (window.innerWidth / window.innerHeight > 2) {\n        this.screenAspectRatio = 'widescreen';\n      } else {\n        this.screenAspectRatio = 'normal';\n      }\n\n    },\n    resizeApp: function () {\n      window.addEventListener('resize', () => this.checkScreenSize());\n    }\n  },\n  mounted () {\n    this.checkScreenSize();\n  },\n  updated () {\n    this.resizeApp();\n  }\n}\n\n</script>\n\n<style>\n\nbody {\n  background: linear-gradient(10deg, rgba(0, 255, 255, 0.9), rgba(0, 102, 0, 0.9)), url(./assets/stars.jpg);\n}\n\n#app-base {\n  height: 100vh;\n  overflow: hidden;\n}\n\n.application {\n  height: 90vh;\n  overflow: auto;\n  overflow-x: hidden;\n}\n::-webkit-scrollbar {\n  background: transparent;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=02da7740&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport App from './App';\n\nVue.use(BootstrapVue);\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toolbar.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenGL2WebGLApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OpenGL2WebGLApp.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MediaApp.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Navpane.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavpaneControls.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CVApp.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}