{"version":3,"sources":["webpack:///./src/assets/erdos.png","webpack:///./src/components/Toolbar.vue?1d49","webpack:///./src/components/Toolbar.vue","webpack:///src/components/Toolbar.vue","webpack:///./src/components/Home/Themes/homeAnimation.js","webpack:///./src/components/Home/Canvas/canvasManager.js","webpack:///src/components/Home/Canvas/Canvas.vue","webpack:///./src/components/Home/Canvas/Canvas.vue?9753","webpack:///./src/components/Home/Canvas/Canvas.vue","webpack:///src/components/Home/Home.vue","webpack:///./src/components/Home/Home.vue?bd69","webpack:///./src/components/Home/Home.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue?5ef8","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","webpack:///src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/animation.js","webpack:///./src/components/OpenGL2WebGL/utils.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/blanket.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/bounceRipple.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthedad.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum3.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum4.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum5.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum6.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum7.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum8.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum9.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/clam.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/collide0scope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/fauxlidoscope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/flowers.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/gyr0scope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pearl.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pinwheel.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/snowflake.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/sloshRipple.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/starryNight.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/wrigglingDonut.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/offsetStar.js","webpack:///./src/components/OpenGL2WebGL/Navpane/index.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/sacredCircles.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/unoriginal.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/physics/sineWave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/circle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/cube.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/polygon.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/rectangle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/triangle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/amparo.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/andorinha.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/antigua.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/batidinha.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/bicardi.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/blouse.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/brazil.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/choro.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/dialogo.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/flower.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/games.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/lamento.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/look.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/mojave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/sabia.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/tereza.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/triste.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/wave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/canvasManager.js","webpack:///src/components/OpenGL2WebGL/Navpane/Navpane.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue?576b","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue","webpack:///src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue?7767","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","webpack:///./src/components/Media/MediaApp.vue?de24","webpack:///./src/components/Media/MediaApp.vue","webpack:///./src/components/CV/CVApp.vue?be89","webpack:///./src/components/CV/CVApp.vue","webpack:///./src/components/Contact/ContactApp.vue?4771","webpack:///./src/components/Contact/ContactApp.vue","webpack:///src/App.vue","webpack:///src/components/Media/MediaApp.vue","webpack:///src/components/CV/CVApp.vue","webpack:///src/components/Contact/ContactApp.vue","webpack:///./src/App.vue?a2a4","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["module","exports","__webpack_require__","p","components_Toolbar","render","_vm","this","_h","$createElement","_c","_self","attrs","toggleable","type","target","_v","on","click","$event","selectHome","staticClass","_s","homeContents","name","is-nav","id","_l","app","key","selectApp","toolbarLink","right","directives","rawName","modifiers","hover","rel","href","src","title","tooltip","class","icon","staticRenderFns","src_components_Toolbar","normalizeComponent","ssrContext","HomeAnimation","scene","classCallCheck_default","geometry","three_module","i","r","Math","random","theta","PI","phi","x","cos","sin","y","z","vertices","push","material","color","mesh","add","CanvasManager","canvas","_this","checkCanvasSize","setCamera","setRenderer","window","addEventListener","animation","homeAnimation","dt","draw","tick","bind","backgroundColor","renderer","antialias","setClearColor","setPixelRatio","devicePixelRatio","offset","camera","canvasWidth","canvasHeight","position","cv","document","getElementById","offsetWidth","offsetHeight","setSize","aspect","updateProjectionMatrix","animationId","requestAnimationFrame","update","Canvas_canvasManager","Canvas","Canvas_Canvas","Home","Canvas_normalizeComponent","Home_Home","align-h","components_Home_Home","Home_normalizeComponent","Navpane_NavpaneControls","parameter","label","screenType","value","expression","max","maxValue","min","minValue","domProps","blur","resetInput","input","composing","$set","activate","resetAnimation","toFullScreen","OpenGL2WebGL_Navpane_NavpaneControls","NavpaneControls_normalizeComponent","Animation","parameters","dynamic","controllable","colorNodes","n","utils_phi","t","polygon","center","radius","numVertices","axis","Float32Array","addAttribute","line","set","Star","numStems","numSplits","stemGroup","splitGroup","stemVertices","stemGeometry","stemMaterial","j","splitVertices","splitGeometry","splitMaterial","utils_Flower","rootPosition","pistolPosition","petalRadius","numPetals","numNodes","petalColor","pistolColor","stem","petalGroup","petal","pistolGeometry","pistolMaterial","wireframe","pistol","sacredGeometry","numPolygons","polygonRadius","globalRadius","geomGroup","poly","utils_Graph","Graph","partitionSizes","vertexRadius","numEdges","vertexGroup","edgeGroup","createClass_default","length","vertexCenter","vertexGeometry","vertexMaterial","vertex","layout","angle","arguments","undefined","children","count","numSides","sideScale","sideSpacing","floor","sideAngle","numLevels","levelScale","interLevelSpacing","intraLevelSpacing","edgeGeometry","edgeMaterial","edge","createVertexSet","assignVertexCoordinates","addEdges","Blanket","possibleConstructorReturn_default","__proto__","get_prototype_of_default","call","parseFloat","currentValue","numFaces","rotateZ","Navpane_animation","BounceRipple","scale","Chrysanthedad","numCenters","numLayers","polyCenterOffset","polyClusterCenter","k","Chrysanthemum","rotation","Chrysanthemum2","Chrysanthemum3","Chrysanthemum4","Chrysanthemum5","rotateX","Chrysanthemum6","Chrysanthemum7","Chrysanthemum8","Chrysanthemum9","Clam","numRidges","sqrt","pow","endpoints","Collide0scope","numCircles","ConcentricPolygons","ConcentricPolygons2","Fauxlidoscope","numSteps","numLanes","cameraAmplitude","cameraZoomMax","cameraZoomMin","cameraDisplacement","concentricPolygonGroup","layerGroup","Temp","numFlowers","root","flower","Gyr0scope","rate","Pearl","pearlGeometry","pearlMaterial","pearl","Pinwheel","Snowflake","geom","SloshRipple","StarryNight","numStars","starCenter","starRadius","abs","star","WrigglingDonut","Mosaic","l","Mosaic2","group1","group2","OffsetStar","ANIMATION_MAP","blanket","bounce ripple","bounceRipple","chrysanthedad","chrysanthemum","chrysanthemum2","chrysanthemum3","chrysanthemum4","chrysanthemum5","chrysanthemum6","chrysanthemum7","chrysanthemum8","chrysanthemum9","collide","collide0scope","concentric polygons","concentricPolygons","concentric polygons 2","concentricPolygons2","fauxlidoscope","flowers","gyro","gyr0scope","pinwheel","snowflake","slosh ripple","sloshRipple","starry night","starryNight","wriggling donut","wrigglingDonut","mosaic","mosaic2","sacred circles","SacredCircles","circleRadius","math_offsetStar","unoriginal","nodeRadius","divisor","visible","sine wave","SineWave","amplitude","frequency","phase","displacement","numPoints","node_x","node_y","circle","Circle","numSpokes","clam","cube","Cube","art_pearl","polystarter","Polygon","rectangle","Rectangle","colors","vertexColors","triangle","Triangle","amparo","Amparo","numPartitions","graphRadius","graph","initialize","andorinha","Andorinha","antigua","Antigua","batidinha","Batidinha","bicardi","Bicardi","blouse","Blouse","brazil","Brazil","choro","Choro","dialogo","Dialogo","Flower","games","Games","lamento","Lamento","look","Look","dampening","mojave","Mojave","sabia","Sabia","tereza","Tereza","triste","Triste","wave","Wave","OrbitControls","generateAnimation","controls","domElement","Navpane_Navpane_canvasManager","Navpane","defaultValue","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","filter","toLowerCase","Navpane_Navpane","category","hidden","_e","item","active","text","_b","OpenGL2WebGLApp","Navpane_normalizeComponent","OpenGL2WebGL_OpenGL2WebGLApp","fluid","md","sm","placeholder","onfocus","searchedText","screenAspectRatio","Media_MediaApp","player","innerHTML","embedref","CV_CVApp","cvSection","header","cols","detail","onSlideLeft","currentSlide","onSlideRight","Contact_ContactApp","contactInfoItem","contactLink","OpenGL2WebGLApp_normalizeComponent","MediaApp_normalizeComponent","CVApp_normalizeComponent","ContactApp_normalizeComponent","checkScreenSize","resizeApp","selectortype_template_index_0_src_App","home","appContents","contents","mode","src_App","App_normalizeComponent","App","vue_esm","use","es","config","productionTip","el","components","template"],"mappings":"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ACA,UACA,OACA,8CAGA,iCACA,eACA,WACA,aAEA,mBAEA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,0BAEA,UACA,sDACA,oBACA,WACA,UACA,OACA,4CAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,0BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAGA,SAEA,4BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,sDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,0BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,+CAGA,iCACA,eACA,WACA,aAEA,mBAEA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,2BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,+CAGA,iCACA,eACA,WACA,aAEA,mBAEA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,6CACA,oBACA,WACA,UACA,OACA,oCAGA,gCACA,iBACA,aACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,iBAEA,UACA,sDACA,oBACA,WACA,UACA,OACA,wCAGA,iCACA,gBACA,YACA,aAGA,SAEA,0BAEA,UACA,4DACA,oBACA,WACA,UACA,OACA,qDAGA,kCACA,gBACA,YACA,aAEA,mBAEA,+BACA,eACA,WACA,aAGA,SAEA,gCAEA,UACA,6DACA,oBACA,WACA,UACA,OACA,uDAGA,kCACA,gBACA,YACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,kCAEA,UACA,2DACA,kBACA,WACA,oBACA,WACA,UACA,OACA,4CAGA,+BACA,gBACA,YACA,aAEA,oBAEA,gCACA,gBACA,YACA,aAEA,mBAEA,+BACA,eACA,WACA,aAEA,mBAEA,+BACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,0BAEA,UACA,gDACA,oBACA,WACA,UACA,OACA,wCAGA,iCACA,eACA,WACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,mBAEA,+BACA,eACA,WACA,aAEA,sBAEA,4BACA,eACA,WACA,aAGA,SAEA,oBAEA,UACA,kDACA,oBACA,WACA,UACA,OACA,qCAGA,iCACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,sBAEA,UACA,8CACA,oBACA,WACA,UACA,OACA,qCAGA,gCACA,iBACA,aACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,kBAEA,UACA,iDACA,oBACA,WACA,UACA,OACA,0CAGA,kCACA,gBACA,YACA,aAEA,mBAEA,+BACA,eACA,WACA,aAGA,SAEA,qBAEA,UACA,kDACA,oBACA,WACA,UACA,OACA,yCAGA,gCACA,eACA,WACA,aAEA,mBAEA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,mBAEA,+BACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,sBAEA,UACA,qDACA,oBACA,WACA,UACA,OACA,8CAGA,kCACA,iBACA,aACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,yBAEA,UACA,qDACA,oBACA,WACA,UACA,OACA,2CAGA,+BACA,gBACA,YACA,aAEA,mBAEA,+BACA,gBACA,YACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,iBAEA,sBACA,gBACA,YACA,aAGA,SAEA,yBAEA,UACA,wDACA,oBACA,WACA,UACA,OACA,8CAGA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAGA,SAEA,4BAEA,UACA,gDACA,qBACA,WACA,UACA,OACA,qCAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,iDACA,qBACA,WACA,UACA,OACA,uCAGA,gCACA,gBACA,YACA,aAEA,mBAEA,+BACA,gBACA,YACA,aAEA,mBAEA,+BACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAGA,SAEA,oBAEA,UACA,wDACA,qBACA,WACA,UACA,OACA,8CAGA,gCACA,gBACA,YACA,aAEA,qBAEA,iCACA,gBACA,YACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,2BAEA,UACA,8CACA,qBACA,WACA,UACA,OACA,sCAGA,kCACA,gBACA,YACA,aAEA,iBAEA,sBACA,eACA,WACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,iBAEA,UACA,oDACA,qBACA,WACA,UACA,OACA,yCAGA,+BACA,gBACA,YACA,aAEA,qBAEA,2BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,aAEA,kBAEA,uBACA,eACA,WACA,aAGA,SAEA,uBAEA,UACA,sDACA,wBACA,WACA,UACA,OACA,yCAGA,yBACA,gBACA,YACA,aAEA,oBAEA,yBACA,gBACA,YACA,aAEA,gBAEA,qBACA,eACA,WACA,aAEA,uBAEA,4BACA,eACA,WACA,aAEA,oBAEA,gCACA,kBACA,cACA,aAGA,SAEA,sBAEA,UACA,kDACA,uBACA,WACA,UACA,OACA,sCAGA,gCACA,eACA,WACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,gDACA,uBACA,WACA,UACA,OACA,0BAGA,iBAEA,UACA,gDACA,uBACA,WACA,UACA,OACA,wCAGA,sBACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,gBAEA,qBACA,eACA,WACA,aAGA,SAEA,wBAEA,UACA,qDACA,uBACA,WACA,UACA,OACA,+BAGA,sBAEA,UACA,oDACA,uBACA,WACA,UACA,OACA,8BAGA,qBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,gBACA,YACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,gBACA,YACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,0DACA,4BACA,WACA,UACA,OACA,6CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,kBACA,cACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,sBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,gBACA,YACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,oBAEA,UACA,0DACA,4BACA,WACA,UACA,OACA,6CAGA,oCACA,gBACA,YACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,sBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,oBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,iBACA,aACA,aAGA,SAEA,mBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,kBAEA,uBACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,sDACA,4BACA,WACA,UACA,OACA,yCAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,kBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,gBACA,YACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,oBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,mBAEA,UACA,sDACA,4BACA,WACA,UACA,OACA,yCAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,kBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,iBACA,aACA,aAGA,SAEA,oBAEA,UACA,qDACA,4BACA,WACA,UACA,OACA,wCAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,oBAEA,yBACA,gBACA,YACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,iBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,sBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,mBAEA,UACA,sDACA,4BACA,WACA,UACA,OACA,y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","file":"static/js/app.4e2006919baec85e9e88.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/erdos.ad37ccb.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/erdos.png\n// module id = IPQj\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-navbar',{attrs:{\"toggleable\":\"md\",\"type\":\"dark\"}},[_c('b-navbar-toggle',{attrs:{\"target\":\"nav_collapse\"}}),_vm._v(\" \"),_c('b-navbar-brand',{on:{\"click\":function($event){_vm.selectHome()}}},[_c('span',{staticClass:\"glyphicon glyphicon-home\"}),_vm._v(\"\\n      \"+_vm._s(_vm.homeContents.name))]),_vm._v(\" \"),_c('b-collapse',{attrs:{\"is-nav\":\"\",\"id\":\"nav_collapse\"}},[_c('b-navbar-nav',_vm._l((_vm.appContents),function(app){return _c('b-nav-item',{key:app.name,on:{\"click\":function($event){_vm.selectApp(app)}}},[_vm._v(_vm._s(app.name))])})),_vm._v(\" \"),_c('b-navbar-nav',{staticClass:\"ml-auto\"},_vm._l((_vm.toolbarLinks),function(toolbarLink){return _c('b-nav-item',{key:toolbarLink.name,attrs:{\"right\":\"\"}},[_c('a',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"toolbar-icon external\",attrs:{\"rel\":\"noopener\",\"href\":toolbarLink.src,\"target\":\"_blank\",\"title\":toolbarLink.tooltip}},[_c('span',{staticClass:\"fa\",class:toolbarLink.icon})])])}))],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7724c6c1\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Toolbar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7724c6c1\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Toolbar.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Toolbar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Toolbar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7724c6c1\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Toolbar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Toolbar.vue\n// module id = null\n// module chunks = ","<template>\n\n    <div>\n      <b-navbar toggleable=\"md\" type=\"dark\">\n        <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n        <b-navbar-brand v-on:click=\"selectHome()\">\n          <span class=\"glyphicon glyphicon-home\"></span>\n          {{ homeContents.name }}</b-navbar-brand>\n        <b-collapse is-nav id=\"nav_collapse\">\n          <b-navbar-nav>\n            <b-nav-item v-for=\"app in appContents\" :key=\"app.name\" v-on:click=\"selectApp(app)\">{{ app.name }}</b-nav-item>\n          </b-navbar-nav>\n          <b-navbar-nav class=\"ml-auto\">\n            <b-nav-item right v-for=\"toolbarLink in toolbarLinks\" :key=\"toolbarLink.name\">\n              <a rel=\"noopener\" class=\"toolbar-icon external\" :href=\"toolbarLink.src\" target=\"_blank\" v-b-tooltip.hover :title=\"toolbarLink.tooltip\">\n                <span class=\"fa\" :class=\"toolbarLink.icon\"/>\n              </a>\n            </b-nav-item>\n          </b-navbar-nav>\n        </b-collapse>\n      </b-navbar>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['homeContents', 'appContents'],\n  data () {\n    return {\n      toolbarLinks: [\n        {\n          name: 'github',\n          src: 'https://github.com/max-t-wheeler',\n          icon: 'fa-github',\n          tooltip: 'Must'\n        },\n        {\n          name: 'linkedin',\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin',\n          tooltip: 'use'\n        },\n        {\n          name: 'facebook',\n          src: 'https://www.facebook.com/max.wheeler.9',\n          icon: 'fa-facebook',\n          tooltip: 'right'\n        },\n        {\n          name: 'soundcloud',\n          src: 'https://soundcloud.com/the-dopest-kind',\n          icon: 'fa-soundcloud',\n          tooltip: 'click'\n        }\n      ]\n    }\n  },\n  methods: {\n    selectHome: function () {\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      this.homeContents.display = true;\n    },\n    selectApp: function (application) {\n      this.homeContents.display = false;\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      application.display = true;\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.toolbar-icon {\n\n  color: black;\n  text-decoration: none;\n}\n\n.toolbar-icon:hover, .toolbar-icon:active, .toolbar-icon:visited {\n  color: black;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Toolbar.vue","import * as THREE from 'three';\n\nexport default class HomeAnimation {\n\n  constructor (scene) {\n    this.scene = scene;\n  }\n\n  draw () {\n\n    let geometry = new THREE.Geometry();\n\n    for (let i = 0; i < 100; ++i) {\n\n      let r = 3 * Math.random() - 2;\n      let theta = 2 * Math.PI * Math.random();\n      let phi = Math.PI * Math.random();\n\n      let x = r * Math.cos(theta) * Math.sin(phi);\n      let y = r * Math.sin(theta) * Math.cos(phi);\n      let z = r * Math.cos(theta);\n\n      geometry.vertices.push(new THREE.Vector3(x, y, z));\n\n    }\n\n    let material = new THREE.LineBasicMaterial({ color: 0xff0000 });\n    let mesh = new THREE.Line(geometry, material);\n\n    this.scene.add(mesh);\n\n\t}\n\n  update () {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Home/Themes/homeAnimation.js","import * as THREE from 'three';\n\nimport HomeAnimation from '../Themes/homeAnimation';\n\nexport default class CanvasManager {\n\n  constructor (canvas) {\n\n    // initialize canvas\n\n    this.canvas = canvas;\n\n    this.checkCanvasSize();\n\n    this.setCamera(3);\n    this.setRenderer(0x000000);\n\n    this.checkCanvasSize();\n\n    window.addEventListener('resize', () => this.checkCanvasSize());\n\n    // initialize animation\n\n    this.scene = new THREE.Scene();\n\n    this.animation = new HomeAnimation(this.scene);\n\n    this.dt = 0;\n\n    this.animation.draw();\n\n    this.tick = this.tick.bind(this);\n\n    // run animation\n\n    this.tick();\n\n  }\n\n  setRenderer (backgroundColor) {\n\n    this.renderer = new THREE.WebGLRenderer({canvas: this.canvas, antialias: true});\n    this.renderer.setClearColor(backgroundColor);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n  }\n\n  setCamera (offset) {\n\n    this.camera = new THREE.PerspectiveCamera(75, this.canvasWidth / this.canvasHeight, 0.1, 1000);\n    this.camera.position.z = offset;\n\n  }\n\n  checkCanvasSize () {\n\n    let cv = document.getElementById('home-display');\n\n    this.canvasWidth = cv.offsetWidth;\n    this.canvasHeight = cv.offsetHeight;\n\n    if (this.renderer) this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.camera) {\n      this.camera.aspect = this.canvasWidth / this.canvasHeight;\n      this.camera.updateProjectionMatrix();\n    }\n\n  }\n\n  tick () {\n\n    this.animationId = requestAnimationFrame(this.tick);\n\n    this.renderer.render(this.scene, this.camera);\n\n    this.dt += 1e-2;\n\n    if (this.dt > 2 * Math.PI * 1e6) {\n      this.dt -= 2 * Math.PI * 1e6;\n    }\n\n    this.animation.update(this.dt);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Home/Canvas/canvasManager.js","<template>\n\n    <canvas></canvas>\n\n</template>\n\n<script>\n\nimport CanvasManager from './canvasManager';\n\nlet canvasManager;\n\nexport default {\n  mounted () {\n    const canvas = document.getElementById('home-canvas');\n    if (canvasManager) {\n      if (canvasManager.animationId > 0) {\n        cancelAnimationFrame(canvasManager.animationId);\n      }\n    }\n    canvasManager = new CanvasManager(canvas);\n  }\n}\n\n</script>\n\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home/Canvas/Canvas.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('canvas')}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0d7bdba2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home/Canvas/Canvas.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d7bdba2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Canvas.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Canvas.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Canvas.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0d7bdba2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Canvas.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home/Canvas/Canvas.vue\n// module id = null\n// module chunks = ","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"home-container\">\n      <b-row class=\"justify-content-md-center\">\n        <b-col>\n          <img class=\"home-image\" src=\"../../assets/erdos.png\">\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nimport Canvas from './Canvas/Canvas';\n\nexport default {\n  components: {\n    'home-canvas': Canvas\n  }\n}\n\n</script>\n\n<style>\n\n#home-container {\n  position: relative;\n  top: 15%;\n}\n\n.home-image {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"home-container\"}},[_c('b-row',{staticClass:\"justify-content-md-center\"},[_c('b-col',[_c('img',{staticClass:\"home-image\",attrs:{\"src\":require(\"../../assets/erdos.png\")}})])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-edeb6088\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home/Home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-edeb6088\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-edeb6088\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home/Home.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('br'),_vm._v(\" \"),_vm._l((_vm.animation.parameters),function(parameter){return _c('div',{key:parameter.label,staticClass:\"opengl2webgl-navpane-controls\",class:_vm.screenType},[_c('p',[_vm._v(\" \"+_vm._s(parameter.label)+\" \")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(parameter.currentValue),expression:\"parameter.currentValue\"}],staticClass:\"opengl2webgl-navpane-input\",attrs:{\"type\":\"number\",\"max\":parameter.maxValue,\"min\":parameter.minValue},domProps:{\"value\":(parameter.currentValue)},on:{\"blur\":function($event){_vm.resetInput(parameter)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(parameter, \"currentValue\", $event.target.value)}}}),_vm._v(\" \"),_c('br')])}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"opengl2webgl-navpane-controls\",class:_vm.screenType},[_c('b-button',{on:{\"click\":function($event){_vm.activate(_vm.animation)}}},[_c('span',{staticClass:\"glyphicon glyphicon-play-circle opengl2webgl-navpane-button\"})]),_vm._v(\" \"),_c('b-button',{on:{\"click\":function($event){_vm.resetAnimation(_vm.animation)}}},[_c('span',{staticClass:\"glyphicon glyphicon-refresh opengl2webgl-navpane-button\"})]),_vm._v(\" \"),_c('b-button',{on:{\"click\":function($event){_vm.toFullScreen()}}},[_c('span',{staticClass:\"glyphicon glyphicon-move opengl2webgl-navpane-button\"})])],1),_vm._v(\" \"),_c('br')],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-186986bc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-186986bc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./NavpaneControls.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavpaneControls.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavpaneControls.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-186986bc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./NavpaneControls.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue\n// module id = null\n// module chunks = ","<template>\n\n  <div>\n    <br>\n    <div v-for=\"parameter in animation.parameters\" :key=\"parameter.label\" class=\"opengl2webgl-navpane-controls\" :class='screenType'>\n      <p> {{parameter.label }} </p>\n      <input\n        class=\"opengl2webgl-navpane-input\"\n        type=\"number\"\n        :max=\"parameter.maxValue\"\n        :min=\"parameter.minValue\"\n        v-on:blur=\"resetInput(parameter)\"\n        v-model=\"parameter.currentValue\"/>\n      <br>\n    </div>\n    <br>\n    <div class=\"opengl2webgl-navpane-controls\" :class='screenType'>\n      <b-button v-on:click=\"activate(animation)\">\n        <span class=\"glyphicon glyphicon-play-circle opengl2webgl-navpane-button\"></span>\n      </b-button>\n      <b-button v-on:click=\"resetAnimation(animation)\">\n        <span class=\"glyphicon glyphicon-refresh opengl2webgl-navpane-button\"></span>\n      </b-button>\n      <b-button v-on:click=\"toFullScreen()\">\n        <span class=\"glyphicon glyphicon-move opengl2webgl-navpane-button\"></span>\n      </b-button>\n    </div>\n    <br>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['animation', 'screenType', 'activate', 'resetAnimation', 'toFullScreen', 'resetInput']\n}\n\n</script>\n\n<style>\n\n.opengl2webgl-navpane-controls {\n  text-align: left;\n}\n\n.opengl2webgl-navpane-controls.monitor {\n  text-align: center;\n}\n\n.opengl2webgl-navpane-input {\n  width: 80%;\n}\n\n.opengl2webgl-navpane-button {\n  font-size: 20px;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","export default class Animation {\n\n  constructor (scene, camera, animation) {\n\n    this.scene = scene;\n    this.camera = camera;\n    this.parameters = animation.parameters;\n    this.name = animation.name;\n    this.dynamic = animation.dynamic;\n    this.controllable = animation.controllable;\n\n}\n\n  draw () {\n\n\t}\n\n  update () {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/animation.js","import * as THREE from 'three';\n\n/// //////////////////////////Styling//////////////////////////////////////\n\nexport function colorNodes (n, type) {\n\n  let color = null;\n\n  if (type === 'cool') {\n\n    let mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0x5dff00;\n        break;\n      case 1:\n        color = 0x1000ff;\n        break;\n      case 2:\n        color = 0xff00e1;\n        break;\n      case 3:\n        color = 0x009990;\n        break;\n\n    }\n\n  } else if (type === 'hot') {\n\n    let mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0xffffff;\n        break;\n\n    }\n\n  } else {\n\n    let mod = n % 7;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0x5dff00;\n        break;\n      case 4:\n        color = 0x1000ff;\n        break;\n      case 5:\n        color = 0xff00e1;\n        break;\n      case 6:\n        color = 0xffffff;\n        break;\n\n    }\n\n  }\n\n  return color;\n\n}\n\n/// //////////////////////////WebGL Helper export Functions//////////////////////////////////////\n\nexport function phi (t, n) {\n\n  let p = 2 * Math.PI * t / n;\n\n  return p;\n\n}\n\nexport function polygon (center, radius, numVertices, theta, color, axis) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(this.numVertices * 3);\n\n  for (let i = 0; i < this.numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  let geometry = new THREE.BufferGeometry();\n\n  geometry.addAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  let material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n  if (axis === 'relative') {\n    this.line.position.set(this.center[0], this.center[1], this.center[2]);\n  }\n\n}\n\nexport function offsetStar (numVertices, center, radius, theta, offset, color) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(numVertices * 3);\n\n  for (let i = 0; i < numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  let geometry = new THREE.BufferGeometry();\n\n  geometry.addAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  let material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n}\n\nexport function Star (center, numStems, numSplits, radius, color) {\n\n  this.center = center;\n  this.numStems = numStems;\n  this.numSplits = numSplits;\n  this.radius = radius;\n  this.color = color;\n\n  this.stemGroup = new THREE.Group();\n  this.splitGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numStems; ++i) {\n\n    this.stemVertices = new Float32Array(2 * 3);\n\n    this.stemVertices[0] = this.center[0];\n    this.stemVertices[1] = this.center[1];\n    this.stemVertices[2] = this.center[2];\n    this.stemVertices[3] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n    this.stemVertices[4] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n    this.stemVertices[5] = this.center[2];\n\n    let stemGeometry = new THREE.BufferGeometry();\n\n    stemGeometry.addAttribute(\n      'position',\n      new THREE.BufferAttribute(this.stemVertices, 3)\n    );\n\n    let stemMaterial = new THREE.LineBasicMaterial(\n      {\n        color: this.color\n      }\n    );\n\n    let line = new THREE.Line(stemGeometry, stemMaterial);\n\n    this.stemGroup.add(line);\n\n    for (let j = 0; j < this.numSplits; ++j) {\n\n      this.splitVertices = new Float32Array(2 * 3);\n\n      this.splitVertices[0] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n      this.splitVertices[1] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n      this.splitVertices[2] = this.center[2];\n      this.splitVertices[3] = this.radius * Math.sin(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[0];\n      this.splitVertices[4] = this.radius * Math.cos(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[1];\n      this.splitVertices[5] = this.center[2];\n\n      let splitGeometry = new THREE.BufferGeometry();\n\n      splitGeometry.addAttribute(\n        'position',\n        new THREE.BufferAttribute(this.splitVertices, 3)\n      );\n\n      let splitMaterial = new THREE.LineBasicMaterial(\n        {\n          color: this.color\n        }\n      );\n\n      let line = new THREE.Line(splitGeometry, splitMaterial);\n\n      this.splitGroup.add(line);\n\n    }\n\n  }\n\n}\n\nexport function Flower (rootPosition, pistolPosition, petalRadius, numPetals, numNodes, petalColor, pistolColor) {\n\n  this.rootPosition = rootPosition;\n  this.pistolPosition = pistolPosition;\n  this.petalRadius = petalRadius;\n  this.numPetals = numPetals;\n  this.numNodes = numNodes;\n  this.petalColor = petalColor;\n  this.pistolColor = pistolColor;\n\n  this.stemVertices = new Float32Array(2 * 3);\n\n  this.stemVertices[0] = this.rootPosition[0];\n  this.stemVertices[1] = this.rootPosition[1];\n  this.stemVertices[2] = this.rootPosition[2];\n  this.stemVertices[3] = this.pistolPosition[0];\n  this.stemVertices[4] = this.pistolPosition[1];\n  this.stemVertices[5] = this.pistolPosition[2];\n\n  let stemGeometry = new THREE.BufferGeometry();\n\n  stemGeometry.addAttribute(\n    'position',\n    new THREE.BufferAttribute(this.stemVertices, 3)\n  );\n\n  let stemMaterial = new THREE.LineBasicMaterial(\n    {\n      color: colorNodes(3)\n    }\n  );\n\n  this.stem = new THREE.Line(stemGeometry, stemMaterial);\n\n  this.petalGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPetals; ++i) {\n\n    let petalCenter = [\n      this.petalRadius * Math.cos(phi(i, this.numPetals)) + this.pistolPosition[0],\n      this.petalRadius * Math.sin(phi(i, this.numPetals)) + this.pistolPosition[1],\n      this.pistolPosition[2]\n    ];\n\n    let petal = new polygon(petalCenter, this.petalRadius, this.numNodes, phi(i, this.numPetals), this.petalColor);\n\n    this.petalGroup.add(petal.line);\n\n  }\n\n  let pistolGeometry = new THREE.CircleBufferGeometry(this.petalRadius / 3, 32);\n  let pistolMaterial = new THREE.MeshBasicMaterial({color: this.pistolColor, wireframe: false});\n\n  this.pistol = new THREE.Mesh(pistolGeometry, pistolMaterial);\n  this.pistol.position.set(\n    this.pistolPosition[0],\n    this.pistolPosition[1],\n    this.pistolPosition[2]\n  );\n\n}\n\nexport function sacredGeometry (center, numPolygons, numNodes, polygonRadius, globalRadius, color) {\n\n  this.center = center;\n  this.numPolygons = numPolygons;\n  this.numNodes = numNodes;\n  this.polygonRadius = polygonRadius;\n  this.globalRadius = globalRadius;\n  this.color = color;\n\n  this.geomGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPolygons; ++i) {\n\n    let polyCenter = [\n      this.globalRadius * Math.cos(phi(i, this.numPolygons)) + this.center[0],\n      this.globalRadius * Math.sin(phi(i, this.numPolygons)) + this.center[1],\n      this.center[2]\n    ];\n\n    let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, phi(i, this.numNodes), this.color);\n\n    this.geomGroup.add(poly.line);\n\n  }\n\n}\n\nexport class Graph {\n\n  constructor (partitionSizes, center, radius, vertexRadius, type) {\n\n    this.partitionSizes = partitionSizes;\n    this.center = center;\n    this.radius = radius;\n    this.vertexRadius = vertexRadius;\n    this.type = type;\n    this.numVertices = 0;\n    this.numEdges = 0;\n    this.vertexGroup = new THREE.Group();\n    this.edgeGroup = new THREE.Group();\n\n  }\n\n  createVertexSet (color) {\n\n    for (let i = 0; i < this.partitionSizes.length; ++i) {\n      this.numVertices = this.numVertices + this.partitionSizes[i];\n    }\n\n    let vertexCenter = [0, 0, 0];\n\n    if (color === 'sequence') {\n\n      for (let i = 0; i < this.numVertices; ++i) {\n\n        if (this.type === 'ball') {\n\n          let vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius, 32);\n          let vertexMaterial = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n          let vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n          this.vertexGroup.add(vertex);\n\n        } else if (this.type === 'point') {\n\n          let vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n          this.vertexGroup.add(vertex.line);\n\n        }\n\n      }\n\n    } else if (color === 'partite') {\n\n      for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n        for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n          if (this.type === 'ball') {\n\n            let vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius / this.numVertices, 32);\n            let vertexMaterial = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n            let vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n            this.vertexGroup.add(vertex);\n\n          } else if (this.type === 'point') {\n\n            let vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n            this.vertexGroup.add(vertex.line);\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  // assign coords to vertices in graph\n  assignVertexCoordinates (layout, angle = 0) {\n\n     if (layout === 'polar') {\n\n         let n = this.numVertices;\n\n         for (let i = 0; i < n; ++i) {\n\n           this.vertexGroup.children[i].position.set(\n             this.center[0] + this.radius * Math.cos(phi(i, n) + angle),\n             this.center[1] + this.radius * Math.sin(phi(i, n) + angle),\n             0\n           );\n\n         }\n\n     } else if (layout === 'partite') {\n\n         let count = 0;\n         let numSides = this.partitionSizes.length;\n\n         if (numSides === 1) {\n\n           let sideScale = (2 * this.radius / (this.partitionSizes[0] + 1));\n\n           if (this.partitionSizes[0] % 2 === 1) {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 let sideSpacing = j - Math.floor(this.partitionSizes[0] / 2)\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           } else {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 let sideSpacing = (j + ((1 - this.partitionSizes[0]) / 2));\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           }\n\n         } else {\n\n           for (let i = 0; i < numSides; ++i) {\n\n               let sideAngle = phi(i, numSides) + angle;\n               let sideScale = (2 * this.radius * Math.sin(Math.PI / numSides) / (this.partitionSizes[i] + 1));\n\n               if (this.partitionSizes[i] % 2 === 1) {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     let sideSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               } else {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     let sideSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               }\n\n               count += this.partitionSizes[i];\n\n           }\n\n         }\n\n     } else if (layout === 'concentric') {\n\n         let count = 0;\n\n         for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n             for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                 if (this.partitionSizes[i] !== 1) {\n\n                   this.vertexGroup.children[count + j].position.set(\n                     this.center[0] + this.radius * (this.radius + i) * Math.cos(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     this.center[1] + this.radius * (this.radius + i) * Math.sin(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     0\n                   );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     } else if (layout === 'grid') {\n\n         let count = 0;\n         let numLevels = this.partitionSizes.length;\n\n         for (let i = 0; i < numLevels; ++i) {\n\n             let levelScale = (2 * this.radius * Math.sin(Math.PI / numLevels) / (this.partitionSizes[i] + 1));\n             let interLevelSpacing = (i - Math.floor(numLevels / 2)) / numLevels;\n\n             if (this.partitionSizes[i] % 2 === 1) {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                   let intraLevelSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                   this.vertexGroup.children[count + j].position.set(\n                     levelScale * intraLevelSpacing,\n                     interLevelSpacing,\n                     0\n                   );\n\n                 }\n\n             } else {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     let intraLevelSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       levelScale * intraLevelSpacing,\n                       interLevelSpacing,\n                       0\n                     );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     }\n\n  }\n\n  addEdges (type) {\n\n    let n = this.numVertices;\n\n     if (type === 'complete') {\n\n         for (let i = 0; i < n - 1; ++i) {\n\n           for (let j = i + 1; j < n; ++j) {\n\n             let edgeGeometry = new THREE.Geometry();\n\n             let edgeMaterial = new THREE.LineBasicMaterial(\n               {\n              \tcolor: 0xffffff\n               }\n             );\n\n             edgeGeometry.vertices.push(\n               this.vertexGroup.children[i].position,\n               this.vertexGroup.children[j].position\n             );\n\n             let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n             this.edgeGroup.add(edge);\n\n           }\n\n         }\n\n     } else if (type === 'cycle') {\n\n       for (let i = 0; i < n; ++i) {\n\n         let edgeGeometry = new THREE.Geometry();\n\n         let edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n          if (i < n - 1) {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[i + 1].position\n            );\n          } else {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[0].position\n            );\n          }\n\n         let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'path') {\n\n       for (let i = 0; i < n - 1; ++i) {\n\n         let edgeGeometry = new THREE.Geometry();\n\n         let edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[i].position,\n           this.vertexGroup.children[i + 1].position\n         );\n\n         let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'wheel') {\n\n       for (let i = 1; i < n; ++i) {\n\n         let edgeGeometry = new THREE.Geometry();\n\n         let edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[0].position,\n           this.vertexGroup.children[i].position\n         );\n\n         let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     }\n\n     this.numEdges = this.edgeGroup.length;\n\n  }\n\n  initialize (type = 'null', layout = 'polar', angle = 0, color = 'partite') {\n    this.createVertexSet(color);\n    this.assignVertexCoordinates(layout, angle);\n    this.addEdges(type);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/utils.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Blanket extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      let geometry = new THREE.CircleBufferGeometry((10 / (2 * this.numPolygons - i + 1)), this.numFaces);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      mesh.rotateZ(Math.PI * i / 4);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/blanket.js","import Animation from '../../animation';\n\nimport {\n\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class BounceRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n    let col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      let r = this.radius * i / 10;\n      let poly = new polygon(x, r, 100, 0, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].scale.set(Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), 1);\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/bounceRipple.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthedad extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n\tdraw () {\n\n\t\tlet center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1],\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t    for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t    }\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.scene.position.set(0, 0, -5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].scale.set(1 + Math.cos((i % (this.numCenters * this.numPolygons)) * t / 75), 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75), 1);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthedad.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tlet x = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tx[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\tx[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n            let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n            this.scene.add(poly.line);\n\n          }\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -4);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-3;\n      } else {\n       this.scene.children[i].rotation.z += 1e-3;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum2.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum3 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n        for (let j = 0; j < i; ++j) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\t2 * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t2 * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          let poly = new polygon(polyCenter, 2, this.numNodes, 0, colorNodes(i * j));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -2.5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum3.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum4 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n      for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3));\n\t\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum4.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum5 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tlet polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -3);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateX(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-1e-2);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum5.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum6 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tlet polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-3);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum6.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum7 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numPolygons; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numPolygons)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numPolygons)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t}\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-4);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum7.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum8 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n\t\tlet center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t    for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t    }\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].position.set(0, 0, Math.sin((i % (this.numLayers * this.numPolygons)) * t / 150));\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum8.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum9 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 8);\n\n  }\n\n  draw () {\n\n\t\tlet center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t    for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t    }\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].position.set(0, 0, 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75));\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum9.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Clam extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t  let phi = [];\n\n\t  for (let i = 0; i <= this.numRidges; ++i) {\n\t    phi.push(2 * Math.PI * i / this.numRidges);\n\t  }\n\n\t  let vertices = new Float32Array(phi.length * 3);\n\n    for (let i = 0; i < phi.length; ++i) {\n      vertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n      vertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n      vertices[3 * i + 2] = 0;\n    }\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(vertices, 3)\n\t  );\n\n\t  let material = new THREE.LineBasicMaterial(\n\t    {\n\t      color: 0x00ffff\n\t    }\n\t  );\n\n\t  let line = new THREE.Line(geometry, material);\n\n\t  this.scene.add(line);\n\n\t  for (let i = 0; i < this.numRidges; ++i) {\n\n\t    let endpoints = new Float32Array(6);\n\n\t    endpoints[0] = 0;\n\t    endpoints[1] = 0;\n\t    endpoints[2] = 0;\n\t    endpoints[3] = vertices[(3 * i) + 0];\n\t    endpoints[4] = vertices[(3 * i) + 1];\n\t    endpoints[5] = vertices[(3 * i) + 2];\n\n\t    let geometry = new THREE.BufferGeometry();\n\n\t    geometry.addAttribute(\n\t      'position',\n\t      new THREE.BufferAttribute(endpoints, 3)\n\t    );\n\n\t    let material = new THREE.LineBasicMaterial(\n\t      {\n\t        color: 0x00ffff\n\t      }\n\t    );\n\n\t    let line = new THREE.Line(geometry, material);\n\n\t    this.scene.add(line);\n\n  \t\t}\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/clam.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Collide0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      let geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: true});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\n        this.scene.children[i].position.z += (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z -= 0.01 * Math.cos(t);\n\n      } else {\n\n        this.scene.children[i].position.z -= (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z += 0.01 * Math.sin(t);\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/collide0scope.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class ConcentricPolygons extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = this.numPolygons; i >= 1; i--) {\n\n      let geometry = new THREE.CircleBufferGeometry((10 / (this.numPolygons - i + 1)), this.numFaces);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * (this.scene.children.length - i) * Math.sin(t / 4);\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons.js","import Animation from '../../animation';\n\nimport {\n\n\tpolygon\n\n} from '../../../utils';\n\nexport default class ConcentricPolygons2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n    let t = 0;\n    let col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      let r = this.radius * i / this.numPolygons;\n      let poly = new polygon(x, r, i + 2, t, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z = Math.sin(i) * t / 2;\n\t\t\t} else {\n        this.scene.children[i].rotation.z = Math.sin(-i) * t / 2;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons2.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Fauxlidoscope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSteps = parseFloat(this.parameters.numSteps.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.cameraAmplitude = (animation.cameraZoomMax - animation.cameraZoomMin) / 2;\n\t\tthis.cameraDisplacement = (animation.cameraZoomMax + animation.cameraZoomMin) / 2\n\n  }\n\n  draw () {\n\n\t\tlet concentricPolygonGroup = new THREE.Group();\n\n    for (let i = 0; i < this.numLayers; ++i) {\n\n\t\t\tlet layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tfor (let k = 1; k <= this.numSteps; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius / k, this.numNodes, Math.PI / 2, colorNodes(3));\n\n\t\t\t\t\tlayerGroup.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconcentricPolygonGroup.add(layerGroup);\n\n    }\n\n\t\tthis.scene.add(concentricPolygonGroup);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      }\n\n    }\n\n\t\tthis.camera.position.set(0, 0, this.cameraAmplitude * Math.sin(1e-1 * t + phi(3, 4)) + this.cameraDisplacement);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/fauxlidoscope.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tFlower\n\n} from '../../../utils';\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numFlowers = parseFloat(this.parameters.numFlowers.currentValue);\n\t\tthis.numPetals = parseFloat(this.parameters.numPetals.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.petalRadius = parseFloat(this.parameters.petalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tlet root = [0, -this.numFlowers, 0];\n\n\t\tlet pistol = [0, 0, 0];\n\n\t\tfor (let i = 0; i < this.numFlowers; ++i) {\n\n\t\t\tif (this.numFlowers % 2 === 0) {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - ((this.numFlowers - 1) / 2)),\n\t\t\t\t\t(this.numFlowers - 1) / 2,\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - Math.floor(this.numFlowers / 2)),\n\t\t\t\t\tMath.floor(this.numFlowers / 2),\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tlet flower = new Flower(root, pistol, this.petalRadius, this.numPetals, this.numNodes, colorNodes(i), colorNodes(2));\n\t\t\tthis.scene.add(flower.stem);\n\t\t\tthis.scene.add(flower.petalGroup);\n\t\t\tthis.scene.add(flower.pistol);\n\n\t\t\tthis.scene.position.set(0, 0, 1 - this.numFlowers);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/flowers.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Gyr0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      let geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: true});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, 1.5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      let r = 1;\n\n\t\t\tthis.scene.children[i].scale.set(1, r * Math.cos(t / 2), i + 1);\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-2 * this.rate * i * Math.cos(i * t);\n\n      } else {\n        this.scene.children[i].rotation.z += 1e-2 * this.rate * i * Math.sin(i * t);\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/gyr0scope.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Pearl extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t  let phi = [];\n\n\t  for (let i = 0; i <= this.numRidges; ++i) {\n\t    phi.push(2 * Math.PI * i / this.numRidges);\n\t  }\n\n\t  let vertices = new Float32Array(phi.length * 3);\n\n\t\tfor (let i = 0; i < phi.length; ++i) {\n      vertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n      vertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n      vertices[3 * i + 2] = 0;\n    }\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(vertices, 3)\n\t  );\n\n\t  let material = new THREE.LineBasicMaterial(\n\t    {\n\t      color: 0x00ffff\n\t    }\n\t  );\n\n\t  let line = new THREE.Line(geometry, material);\n\n\t  this.scene.add(line);\n\n\t  for (let i = 0; i < this.numRidges; ++i) {\n\n\t    let endpoints = new Float32Array(6);\n\n\t    endpoints[0] = 0;\n\t    endpoints[1] = 0;\n\t    endpoints[2] = 0;\n\t    endpoints[3] = vertices[(3 * i) + 0];\n\t    endpoints[4] = vertices[(3 * i) + 1];\n\t    endpoints[5] = vertices[(3 * i) + 2];\n\n\t    let geometry = new THREE.BufferGeometry();\n\n\t    geometry.addAttribute(\n\t      'position',\n\t      new THREE.BufferAttribute(endpoints, 3)\n\t    );\n\n\t    let material = new THREE.LineBasicMaterial(\n\t      {\n\t        color: 0x00ffff\n\t      }\n\t    );\n\n\t    let line = new THREE.Line(geometry, material);\n\n\t    this.scene.add(line);\n\n\t  }\n\n\t  let pearlGeometry = new THREE.CircleBufferGeometry(this.radius / 10, 32);\n\n\t  let pearlMaterial = new THREE.MeshBasicMaterial(\n\t    {\n\t      color: 0xffffff\n\t    }\n\t  );\n\n\t  let pearl = new THREE.Mesh(pearlGeometry, pearlMaterial);\n\n\t  this.scene.add(pearl);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pearl.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Pinwheel extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      let geometry = new THREE.CircleBufferGeometry((20 / (2 * this.numPolygons - (i / 2) + 1)), this.numFaces);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i + 1), wireframe: false});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * t * ((this.scene.children.length / 2) - i) * Math.PI * i / 160;\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pinwheel.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tsacredGeometry\n\n} from '../../../utils';\n\nexport default class Snowflake extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tlet layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < i * this.numLanes; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet geom = new sacredGeometry(polyCenter, this.numPolygons, this.numNodes, this.polygonRadius, this.globalRadius, colorNodes(3));\n\n\t\t\t\tlayerGroup.add(geom.geomGroup);\n\n\t\t\t}\n\n\t\t\tthis.scene.add(layerGroup);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tfor (let j = 0; j < this.scene.children[i].children.length; ++j) {\n\n\t      if (j % 2 === 0) {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, this.rate * 1e-2 * t);\n\t      } else {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, -this.rate * 1e-2 * t);\n\t      }\n\n\t\t\t}\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/snowflake.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class SloshRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      let r = this.radius * i / 10;\n      let poly = new polygon(x, r, 100, 0, colorNodes(i - 1));\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\t\t\tif (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].scale.set(Math.cos(phi(i, 100) + t / 100), Math.cos(phi(i, 100) + t / 100), 1);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[i].scale.set(Math.sin(phi(i, 100) + t / 100), Math.sin(phi(i, 100) + t / 100), 1);\n\t\t\t}\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/sloshRipple.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tStar\n\n} from '../../../utils';\n\nexport default class StarryNight extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numStars = parseFloat(this.parameters.numStars.currentValue);\n\t\tthis.numStems = parseFloat(this.parameters.numStems.currentValue);\n\t\tthis.numSplits = parseFloat(this.parameters.numSplits.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numStars; ++i) {\n\n\t\t\tlet starCenter = [\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.cos(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.sin(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius)\n\t\t\t];\n\n\t\t\tlet starRadius = Math.abs(Math.random() - 0.5);\n\n\t\t\tlet star = new Star(starCenter, this.numStems, this.numSplits, starRadius, colorNodes(i, 'hot'));\n\n\t\t\tthis.scene.add(star.stemGroup);\n\t\t\tthis.scene.add(star.splitGroup);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/starryNight.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class WrigglingDonut extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n\n    for (let i = 1; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tx = [\n          \tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes)) * Math.sin(phi(i, this.numPolygons))),\n          \tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes)) * Math.cos(phi(i, this.numPolygons))),\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          let poly = new polygon(x, this.polygonRadius, this.numNodes, 0, colorNodes(1));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotateZ(-10 * (Math.sin(t / 10) + Math.cos(t / 10)));\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/wrigglingDonut.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Mosaic extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tlet polyClusterCenter = [\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.polygonRadius * Math.cos(phi(j, this.numNodes)),\n\t\t\t\t\tthis.polygonRadius * Math.sin(phi(j, this.numNodes)),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numLayers; ++k) {\n\n\t\t\t    for (let l = 0; l < this.numPolygons; ++l) {\n\n\t\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tk * (polyClusterCenter[0] + polyCenterOffset[0]) * Math.sin(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\tk * (polyClusterCenter[1] + polyCenterOffset[1]) * Math.cos(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n\t\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i, 'cool'), 'relative');\n\t\t\t      this.scene.add(poly.line);\n\n\t\t\t    }\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].position.set(0, Math.sin(t / 10) / this.polygonRadius, 0);\n      } else {\n\t\t\t\tthis.scene.children[i].position.set(0, -Math.sin(t / 10) / this.polygonRadius, 0);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Mosaic2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tlet group1 = new THREE.Group();\n\t\tlet group2 = new THREE.Group();\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(3), 'relative');\n\n\t\t\t\tgroup1.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tfor (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(4));\n\n\t\t\t\tgroup2.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tthis.scene.add(group1);\n\t\tthis.scene.add(group2);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % (2) === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-1e-3);\n      }\n\n    }\n\n\t\tfor (let i = 0; i < this.scene.children[1].children.length; ++i) {\n\n\t\t\tif (i % (2) === 0) {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic2.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\toffsetStar\n\n} from '../../../utils';\n\nexport default class OffsetStar extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.offset = parseFloat(this.parameters.offset.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t}\n\n\tdraw () {\n\n\t  let x = [0, 0, 0];\n\t  let star = new offsetStar(this.numVertices, x, this.radius, 0, this.offset, this.color);\n\n\t  this.scene.add(star.line);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/offsetStar.js","// art\nimport Blanket from './humble_beginnings/art/blanket';\nimport BounceRipple from './humble_beginnings/art/bounceRipple';\nimport Chrysanthedad from './humble_beginnings/art/chrysanthedad';\nimport Chrysanthemum from './humble_beginnings/art/chrysanthemum';\nimport Chrysanthemum2 from './humble_beginnings/art/chrysanthemum2';\nimport Chrysanthemum3 from './humble_beginnings/art/chrysanthemum3';\nimport Chrysanthemum4 from './humble_beginnings/art/chrysanthemum4';\nimport Chrysanthemum5 from './humble_beginnings/art/chrysanthemum5';\nimport Chrysanthemum6 from './humble_beginnings/art/chrysanthemum6';\nimport Chrysanthemum7 from './humble_beginnings/art/chrysanthemum7';\nimport Chrysanthemum8 from './humble_beginnings/art/chrysanthemum8';\nimport Chrysanthemum9 from './humble_beginnings/art/chrysanthemum9';\nimport Clam from './humble_beginnings/art/clam';\nimport Collide0scope from './humble_beginnings/art/collide0scope';\nimport ConcentricPolygons from './humble_beginnings/art/concentricPolygons';\nimport ConcentricPolygons2 from './humble_beginnings/art/concentricPolygons2';\nimport Fauxlidoscope from './humble_beginnings/art/fauxlidoscope';\nimport Flowers from './humble_beginnings/art/flowers';\nimport Gyr0scope from './humble_beginnings/art/gyr0scope';\nimport Pearl from './humble_beginnings/art/pearl';\nimport Pinwheel from './humble_beginnings/art/pinwheel';\nimport Snowflake from './humble_beginnings/art/snowflake';\nimport SloshRipple from './humble_beginnings/art/sloshRipple';\nimport StarryNight from './humble_beginnings/art/starryNight';\nimport WrigglingDonut from './humble_beginnings/art/wrigglingDonut';\n\n// math\nimport Mosaic from './humble_beginnings/math/mosaic';\nimport Mosaic2 from './humble_beginnings/math/mosaic2';\nimport OffsetStar from './humble_beginnings/math/offsetStar';\nimport SacredCircles from './humble_beginnings/math/sacredCircles';\nimport Unoriginal from './humble_beginnings/math/unoriginal';\n\n// physics\nimport SineWave from './humble_beginnings/physics/sineWave';\n\n// shapes\nimport Circle from './humble_beginnings/shapes/circle';\nimport Cube from './humble_beginnings/shapes/cube';\nimport Polygon from './humble_beginnings/shapes/polygon';\nimport Rectangle from './humble_beginnings/shapes/rectangle';\nimport Triangle from './humble_beginnings/shapes/triangle';\n\n// simulations\nimport Amparo from './simulations/amparo';\nimport Andorinha from './simulations/andorinha';\nimport Antigua from './simulations/antigua';\nimport Batidinha from './simulations/batidinha';\nimport Bicardi from './simulations/bicardi';\nimport Blouse from './simulations/blouse';\nimport Brazil from './simulations/brazil';\nimport Choro from './simulations/choro';\nimport Dialogo from './simulations/dialogo';\nimport Flower from './simulations/flower';\nimport Games from './simulations/games';\nimport Lamento from './simulations/lamento';\nimport Look from './simulations/look';\nimport Mojave from './simulations/mojave';\nimport Sabia from './simulations/sabia';\nimport Tereza from './simulations/tereza';\nimport Triste from './simulations/triste';\nimport Wave from './simulations/wave';\n\nconst ANIMATION_MAP = {\n  // art\n  'blanket': Blanket,\n  'bounce ripple': BounceRipple,\n  'chrysanthedad': Chrysanthedad,\n  'chrysanthemum': Chrysanthemum,\n  'chrysanthemum2': Chrysanthemum2,\n  'chrysanthemum3': Chrysanthemum3,\n  'chrysanthemum4': Chrysanthemum4,\n  'chrysanthemum5': Chrysanthemum5,\n  'chrysanthemum6': Chrysanthemum6,\n  'chrysanthemum7': Chrysanthemum7,\n  'chrysanthemum8': Chrysanthemum8,\n  'chrysanthemum9': Chrysanthemum9,\n  'collide': Collide0scope,\n  'concentric polygons': ConcentricPolygons,\n  'concentric polygons 2': ConcentricPolygons2,\n  'fauxlidoscope': Fauxlidoscope,\n  'flowers': Flowers,\n  'gyro': Gyr0scope,\n  'pinwheel': Pinwheel,\n  'snowflake': Snowflake,\n  'slosh ripple': SloshRipple,\n  'starry night': StarryNight,\n  'wriggling donut': WrigglingDonut,\n  // math\n  'mosaic': Mosaic,\n  'mosaic2': Mosaic2,\n  'sacred circles': SacredCircles,\n  'star': OffsetStar,\n  'unoriginal': Unoriginal,\n  // physics\n  'sine wave': SineWave,\n  // shapes\n  'circle': Circle,\n  'clam': Clam,\n  'cube': Cube,\n  'pearl': Pearl,\n  'polystarter': Polygon,\n  'rectangle': Rectangle,\n  'triangle': Triangle,\n  // simulations\n  'amparo': Amparo,\n  'andorinha': Andorinha,\n  'antigua': Antigua,\n  'batidinha': Batidinha,\n  'bicardi': Bicardi,\n  'blouse': Blouse,\n  'brazil': Brazil,\n  'choro': Choro,\n  'dialogo': Dialogo,\n  'flower': Flower,\n  'games': Games,\n  'lamento': Lamento,\n  'look': Look,\n  'mojave': Mojave,\n  'sabia': Sabia,\n  'tereza': Tereza,\n  'triste': Triste,\n  'wave': Wave\n};\n\nexport function generateAnimation (scene, camera, animation) {\n\n  if (ANIMATION_MAP[animation.name]) {\n    return new ANIMATION_MAP[animation.name](scene, camera, animation);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/index.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class SacredCircles extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.circleRadius = parseFloat(this.parameters.circleRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t\tthis.camera.position.set(0, 0, 4);\n\n\t}\n\n\tdraw () {\n\n\t  let center = [0, 0, 0];\n\n\t  for (let i = 0; i < this.numCircles; ++i) {\n\n\t    for (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tcenter = [\n\t      \tthis.globalRadius * (Math.cos(phi(i, this.numCircles)) + Math.sin(phi(j, this.numLayers))),\n\t      \tthis.globalRadius * (Math.sin(phi(i, this.numCircles)) + Math.cos(phi(j, this.numLayers))),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t      let poly = new polygon(center, this.circleRadius, 100, 0, this.color);\n\n\t      this.scene.add(poly.line);\n\n\t    }\n\n\t  }\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/sacredCircles.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi\n\n} from '../../../utils';\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.nodeRadius = parseFloat(this.parameters.nodeRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\t\tthis.divisor = parseFloat(this.parameters.divisor.currentValue);\n\n  }\n\n  draw () {\n\n\t\tlet geometry = new THREE.CircleBufferGeometry(this.globalRadius, this.numNodes);\n\t\tlet material = new THREE.MeshBasicMaterial({color: 0xffffff, wireframe: true});\n\t\tlet mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t\tif (this.numNodes > 100) {\n\t\t\tmesh.visible = false;\n\t\t}\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tlet geometry = new THREE.CircleBufferGeometry(this.nodeRadius / 10, 32);\n\t\t\tlet material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n\t\t\tlet mesh = new THREE.Mesh(geometry, material);\n\n\t\t\tmesh.position.set(\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t);\n\n\t\t\tthis.scene.add(mesh);\n\n\t\t}\n\n  }\n\n  update (t) {\n\n\t\tlet n = this.numNodes / this.divisor;\n\t\tlet rate = this.rate;\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tif (Math.floor(rate * t) >= i % n) {\n\n\t\t\t\tthis.scene.children[i + 1].position.set(\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\t0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/unoriginal.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class SineWave extends Animation {\n\n  constructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.amplitude = parseFloat(this.parameters.amplitude.currentValue);\n    this.frequency = parseFloat(this.parameters.frequency.currentValue);\n    this.phase = parseFloat(this.parameters.phase.currentValue);\n    this.displacement = parseFloat(this.parameters.displacement.currentValue);\n    this.numPoints = parseFloat(this.parameters.numPoints.currentValue);\n\n  }\n\n  draw () {\n\n    let node_x = [];\n    let node_y = [];\n\n    for (let i = -this.numPoints; i <= this.numPoints; ++i) {\n      node_x.push(i / 1000);\n      node_y.push(this.amplitude * Math.sin(this.frequency * node_x[i + this.numPoints] + this.phase) + this.displacement);\n\n    }\n\n    let vertices = new Float32Array(node_x.length * 3);\n\n    for (let i = 0; i < node_x.length; ++i) {\n      vertices[3 * i + 0] = node_x[i];\n      vertices[3 * i + 1] = node_y[i];\n      vertices[3 * i + 2] = 0;\n    }\n\n    let geometry = new THREE.BufferGeometry();\n\n    geometry.addAttribute(\n      'position',\n      new THREE.BufferAttribute(vertices, 3)\n    );\n\n    let material = new THREE.LineBasicMaterial(\n      {\n        color: 0x00ffff\n      }\n    );\n\n    let line = new THREE.Line(geometry, material);\n\n    this.scene.add(line);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/physics/sineWave.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Circle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSpokes = parseFloat(this.parameters.numSpokes.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\t  let geometry = new THREE.CircleBufferGeometry(this.radius, this.numSpokes);\n\t\t  let material = new THREE.MeshBasicMaterial({color: 0x00ffff, wireframe: true});\n\t\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/circle.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Cube extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t  let geometry = new THREE.BoxBufferGeometry(1, 1, 1);\n\t  let material = new THREE.MeshBasicMaterial({color: 0x00ffff, wireframe: false});\n\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/cube.js","import * as THREE from 'three';\nimport Animation from '../../animation';\n\nimport {\n\n\tphi\n\n} from '../../../utils';\n\nexport default class Polygon extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.center = [0, 0];\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.theta = parseFloat(this.parameters.theta.currentValue);\n\t\tthis.color = 0xf00a00;\n\n\t}\n\n\tdraw () {\n\n\t  this.vertices = new Float32Array(this.numVertices * 3);\n\n\t  for (let i = 0; i < this.numVertices; ++i) {\n\t    this.vertices[3 * i + 0] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n\t    this.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n\t    this.vertices[3 * i + 2] = 0;\n\t  }\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(this.vertices, 3)\n\t  );\n\n\t  let material = new THREE.LineBasicMaterial(\n\t    {\n\t      color: this.color\n\t    }\n\t  );\n\n\t  this.line = new THREE.LineLoop(geometry, material);\n\n\t\tthis.scene.add(this.line);\n\t}\n\n\tupdate (t) {\n\n\t  for (let i = 0; i < this.scene.children.length; ++i) {\n\t    this.scene.children[i].rotation.z += 1;\n\t  }\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/polygon.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Rectangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  let vertices = new Float32Array([\n\t    -0.5, -0.5, 0.0,\n\t     0.5, -0.5, 0.0,\n\t     0.5, 0.5, 0.0,\n\t    -0.5, 0.5, 0.0,\n\t    -0.5, -0.5, 0.0,\n\t     0.5, 0.5, 0.0\n\t  ]);\n\n\t  let colors = new Float32Array([\n\t    1.0, 0.0, 0.0,\n\t    0.0, 1.0, 0.0,\n\t    0.0, 0.0, 1.0,\n\t    0.0, 1.0, 1.0,\n\t    1.0, 0.0, 0.0,\n\t    0.0, 0.0, 1.0\n\t  ]);\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(vertices, 3)\n\t  );\n\n\t  geometry.addAttribute(\n\t    'color',\n\t    new THREE.BufferAttribute(colors, 3)\n\t  );\n\n\t  let material = new THREE.MeshBasicMaterial(\n\t    {\n\t      vertexColors: THREE.VertexColors,\n\t      wireframe: false\n\t    }\n\t  );\n\n\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/rectangle.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Triangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\t  let geometry = new THREE.BufferGeometry();\n\n\t\t  let vertices = new Float32Array([\n\t\t    -0.5, -0.5, 0.0,\n\t\t     0.5, -0.5, 0.0,\n\t\t     0.0, 0.5, 0.0\n\t\t  ]);\n\n\t\t  let colors = new Float32Array([\n\t\t    1.0, 0.0, 0.0,\n\t\t    0.0, 1.0, 0.0,\n\t\t    0.0, 0.0, 1.0\n\t\t  ]);\n\n\t\t  geometry.addAttribute(\n\t\t    'position',\n\t\t    new THREE.BufferAttribute(vertices, 3)\n\t\t  );\n\n\t\t  geometry.addAttribute(\n\t\t    'color',\n\t\t    new THREE.BufferAttribute(colors, 3)\n\t\t  );\n\n\t\t  let material = new THREE.LineBasicMaterial(\n\t\t    {\n\t\t      vertexColors: THREE.VertexColors\n\t\t    }\n\t\t  );\n\n\t\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/triangle.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Amparo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n\t\tthis.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\tthis.graph.radius * Math.sin(i * i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/amparo.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Andorinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.cos(i * this.rate * t / this.graph.numVertices),\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/andorinha.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Antigua extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n    let count = 0;\n\n    for (let i = 0; i < this.graph.partitionSizes.length; ++i) {\n\n      for (let j = 0; j < this.graph.partitionSizes[i]; ++j) {\n        this.graph.vertexGroup.children[count + j].position.set(\n          this.graph.vertexGroup.children[count + j].position.x + Math.cos(phi(this.rate * t, i + 1)) / 5e2,\n          this.graph.vertexGroup.children[count + j].position.y + Math.sin(phi(this.rate * t, i + 1)) / 5e2,\n          0\n        );\n      }\n\n      count += this.graph.partitionSizes[i];\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/antigua.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Batidinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/batidinha.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Bicardi extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tthis.graphRadius * Math.sin(this.scene.children[0].children[i].position.y - t * this.rate / this.graph.numVertices) * Math.sin(this.scene.children[0].children[i].position.y - i * t * this.rate / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/bicardi.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Blouse extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/blouse.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Brazil extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/brazil.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Choro extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.graphRadius * Math.cos(phi(i, this.graph.numVertices) + this.rate * Math.sin(this.scene.children[0].children[i].position.x - t) / 10),\n\t\t\t\tthis.graphRadius * Math.sin(phi(i, this.graph.numVertices) + this.rate * Math.cos(this.scene.children[0].children[i].position.y - t) / 10),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/choro.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Dialogo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/dialogo.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Flower extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/flower.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Games extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/games.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Lamento extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/lamento.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Look extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.dampening = parseFloat(this.parameters.dampening.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 5);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      if (i % 4 === 0) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 1) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 2) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n    }\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/look.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Mojave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 4);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/mojave.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Sabia extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/sabia.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Tereza extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(t / 10) * Math.sin(this.rate * i * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * (i - 1) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/tereza.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Triste extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(this.rate * (i % this.divisor) * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(this.rate * (i % this.divisor) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/triste.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Wave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tMath.sin(this.scene.children[0].children[i].position.y - t * this.rate / 100) * Math.sin(i * t * this.rate / 100),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/wave.js","import * as THREE from 'three';\n\nimport { generateAnimation } from './index';\n\nlet OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default class CanvasManager {\n\n  constructor (canvas, animation) {\n    // initialize canvas\n\n    this.canvas = canvas;\n\n    this.checkCanvasSize();\n\n    this.setCamera(3);\n    this.setRenderer(0x000000);\n\n    this.checkCanvasSize();\n\n    window.addEventListener('resize', () => this.checkCanvasSize());\n\n    // initialize animation\n\n    this.scene = new THREE.Scene();\n\n    this.animation = generateAnimation(this.scene, this.camera, animation);\n\n    if (this.animation.controllable) {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    }\n\n    this.dt = 0;\n\n    this.animation.draw();\n\n    this.tick = this.tick.bind(this);\n\n    // run animation\n\n    this.tick();\n\n  }\n\n  setRenderer (backgroundColor) {\n\n    this.renderer = new THREE.WebGLRenderer({canvas: this.canvas, antialias: true});\n    this.renderer.setClearColor(backgroundColor);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n  }\n\n  setCamera (offset) {\n\n    this.camera = new THREE.PerspectiveCamera(75, this.canvasWidth / this.canvasHeight, 0.1, 1000);\n    this.camera.position.z = offset;\n\n  }\n\n  checkCanvasSize () {\n\n    let cv = document.getElementById('opengl2webgl-display');\n\n    this.canvasWidth = cv.offsetWidth;\n    this.canvasHeight = cv.offsetHeight;\n\n    if (this.renderer) this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.camera) {\n\n      this.camera.aspect = this.canvasWidth / this.canvasHeight;\n      this.camera.updateProjectionMatrix();\n\n    }\n\n  }\n\n  tick () {\n\n    this.animationId = requestAnimationFrame(this.tick);\n\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.animation.dynamic) {\n      this.dt += 1e-2;\n\n      if (this.dt > 2 * Math.PI * 1e6) {\n        this.dt -= 2 * Math.PI * 1e6;\n      }\n\n      this.animation.update(this.dt);\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/canvasManager.js","<template>\n\n  <div>\n    <div v-for=\"category in categories\" v-if='!category.hidden' :key=\"category.name\" class=\"opengl2webgl-navpane-category\" >\n      <p v-b-toggle=\"'category-' + category.name\" class=\"opengl2webgl-navpane-category-text\"> {{ category.name }} </p>\n      <b-collapse :id=\"'category-' + category.name\">\n        <ul class=\"opengl2webgl-navpane-list\">\n          <li\n            v-if='item.category == category.name && !item.hidden'\n            v-for='item in filter'\n            :key='item.name'\n            class = \"opengl2webgl-navpane-item\"\n            >\n            <p\n              v-b-toggle=\"item.name\"\n              class=\"opengl2webgl-navpane-text\"\n              :class='{active: item.active}'\n              v-on:click='activate(item)'\n              > {{ item.text }}\n            </p>\n            <opengl2webgl-navpane-controls\n              v-if=\"item.parameters.length !== 0 && item.active\"\n              :animation=\"item\"\n              :screenType=\"screenType\"\n              v-bind=\"{activate, resetAnimation, toFullScreen, resetInput}\"\n              />\n          </li>\n        </ul>\n      </b-collapse>\n    </div>\n  </div>\n\n</template>\n\n<script>\n\nimport NavpaneControls from './NavpaneControls';\nimport CanvasManager from './canvasManager';\n\nlet canvasManager;\n\nexport default {\n  props: ['screenType', 'searchedText'],\n  components: {\n    'opengl2webgl-navpane-controls': NavpaneControls\n  },\n  data () {\n    return {\n      display: false,\n      categories: [\n        {\n          active: false,\n          hidden: false,\n          name: 'art'\n        },\n        {\n          active: false,\n          hidden: false,\n          name: 'math'\n        },\n        {\n          active: false,\n          hidden: true,\n          name: 'physics'\n        },\n        {\n          active: false,\n          hidden: true,\n          name: 'shapes'\n        },\n        {\n          active: false,\n          hidden: false,\n          name: 'simulations'\n        }\n      ],\n      animations: [\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_blanket',\n          category: 'art',\n          controllable: false,\n          dynamic: false,\n          hidden: false,\n          name: 'blanket',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'blanket'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_bounce_ripple',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'bounce ripple',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'bounce ripple'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthedad',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'chrysanthedad',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 32,\n              currentValue: 32,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthedad'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum2',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum2',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 2'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum3',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum3',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 3'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum4',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum4',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 4'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum5',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum5',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 5'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'chrysanthemum6',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 16,\n              currentValue: 16,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum7',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum7',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 7'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum8',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum8',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum8'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum9',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum9',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 32,\n              currentValue: 32,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 9'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_clam',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'clam',\n          parameters: {\n            numRidges: {\n              label: 'Number of Ridges',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'clam'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_collide0scope',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'collide',\n          parameters: {\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'collide0scope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_concentric_polygons',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'concentric polygons',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'concentric polygons'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_concentric_polygons2',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'concentric polygons 2',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'concentric polygons 2'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_fauxlidoscope',\n          cameraZoomMax: 100,\n          cameraZoomMin: 1,\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'fauxlidoscope',\n          parameters: {\n            numSteps: {\n              label: 'Number of Steps',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'fauxlidoscope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_flowers',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'flowers',\n          parameters: {\n            numFlowers: {\n              label: 'Number of Flowers',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPetals: {\n              label: 'Number of Petals',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            petalRadius: {\n              label: 'Petal Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'flowers'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_gyr0scope',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'gyro',\n          parameters: {\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'gyr0scope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_pearl',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'pearl',\n          parameters: {\n            numRidges: {\n              label: 'Number of Ridges',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'pearl'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_pinwheel',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'pinwheel',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'pinwheel'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_snowflake',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'snowflake',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'snowflake'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_slosh_ripple',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'slosh ripple',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'slosh ripple'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_starry_night',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'starry night',\n          parameters: {\n            numStars: {\n              label: 'Number of Stars',\n              defaultValue: 42,\n              currentValue: 42,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numStems: {\n              label: 'Number of Stems',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numSplits: {\n              label: 'Number of Splits',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 42,\n              currentValue: 42,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'starry night'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_wriggling_donut',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'wriggling donut',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 0.2,\n              currentValue: 0.2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'wriggling donut'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_mosaic',\n          category: 'math',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'mosaic',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'mosaic'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_mosaic2',\n          category: 'math',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'mosaic2',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 24,\n              currentValue: 24,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 0.5,\n              currentValue: 0.5,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'mosaic2'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_sacred_circles',\n          category: 'math',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'sacred circles',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            circleRadius: {\n              label: 'Circle Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'sacred circles'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_star',\n          category: 'math',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'star',\n          parameters: {\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            offset: {\n              label: 'Offset',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'star'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_unoriginal',\n          category: 'math',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'unoriginal',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 24,\n              currentValue: 24,\n              maxValue: 1000,\n              minValue: 0\n            },\n            nodeRadius: {\n              label: 'Node Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'unoriginal'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#physics_sine_wave',\n          category: 'physics',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'sine wave',\n          parameters: {\n            amplitude: {\n              label: 'Amplitude',\n              defaultValue: 0.5,\n              currentValue: 0.5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            frequency: {\n              label: 'Frequency',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            phase: {\n              label: 'Phase',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            },\n            displacement: {\n              label: 'Displacement',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPoints: {\n              label: 'Number of Points',\n              defaultValue: 1500,\n              currentValue: 1500,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'sine wave'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_circle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'circle',\n          parameters: {\n            numSpokes: {\n              label: 'Number of Spokes',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'circle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_cube',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'cube',\n          parameters: [],\n          text: 'cube'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#polystarter',\n          category: 'shapes',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'polystarter',\n          parameters: {\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            theta: {\n              label: 'Theta',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'polystarter'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_rectangle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'rectangle',\n          parameters: [],\n          text: 'rectangle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_triangle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'triangle',\n          parameters: [],\n          text: 'triangle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_amparo',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'amparo',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'amparo'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_andorinha',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'andorinha',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 500,\n              currentValue: 500,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2.25,\n              currentValue: 2.25,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'andorinha'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_antigua',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'antigua',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 50,\n              currentValue: 50,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'antigua'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_batidinha',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'batidinha',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'batidinha'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_bicardi',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'bicardi',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'bicardi'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_blouse',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'blouse',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'blouse'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_brazil',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'brazil',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'brazil'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_choro',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'choro',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'choro'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_dialogo',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'dialogo',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'dialogo'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_flower',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'flower',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'flower'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_games',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'games',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'games'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_lamento',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'lamento',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'lamento'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_look',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'look',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            dampening: {\n              label: 'Dampening',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'look'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_mojave',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'mojave',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'mojave'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_sabia',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'sabia',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'sabia'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_tereza',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'tereza',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'tereza'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_triste',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'triste',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'triste'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_wave',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'wave',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 120,\n              currentValue: 120,\n              maxValue: 1000,\n              minValue: 0\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'wave'\n        }\n      ]\n    }\n  },\n  methods: {\n    activate: function (animation) {\n      for (let i = 0; i < this.animations.length; ++i) {\n        this.animations[i].active = false;\n      }\n      animation.active = true;\n      this.display = true;\n      const canvas = document.getElementById('opengl2webgl-canvas');\n      if (canvasManager) {\n        if (canvasManager.animationId > 0) {\n          cancelAnimationFrame(canvasManager.animationId);\n        }\n      }\n      canvasManager = new CanvasManager(canvas, animation);\n    },\n    resetAnimation: function (animation, parameters) {\n      for (let parameter in animation.parameters) {\n        let param = animation.parameters[parameter];\n        param.currentValue = param.defaultValue;\n      }\n      this.activate(animation);\n    },\n    toFullScreen: function () {\n      let canvas = document.getElementById('opengl2webgl-canvas');\n      if (canvas.requestFullscreen) {\n      \tcanvas.requestFullscreen();\n      } else if (canvas.webkitRequestFullscreen) {\n      \tcanvas.webkitRequestFullscreen();\n      } else if (canvas.mozRequestFullScreen) {\n      \tcanvas.mozRequestFullScreen();\n      } else if (canvas.msRequestFullscreen) {\n      \tcanvas.msRequestFullscreen();\n      }\n    },\n    resetInput: function (parameter) {\n      if (parameter.currentValue > parameter.maxValue) {\n        parameter.currentValue = parameter.maxValue\n      } else if (parameter.currentValue < parameter.minValue) {\n        parameter.currentValue = parameter.minValue\n      }\n    }\n  },\n  computed: {\n    filter () {\n      return this.animations.filter(\n        animation => {\n          return animation.text.toLowerCase().includes(this.searchedText.toLowerCase())\n        }\n      );\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.opengl2webgl-navpane-category-text {\n  font-family: \"Arial\";\n  font-weight: bold;\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n.opengl2webgl-navpane-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.opengl2webgl-navpane-text {\n  color: purple;\n  text-decoration: underline;\n  font-family: \"Arial\";\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/OpenGL2WebGL/Navpane/Navpane.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.categories),function(category){return (!category.hidden)?_c('div',{key:category.name,staticClass:\"opengl2webgl-navpane-category\"},[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:('category-' + category.name),expression:\"'category-' + category.name\"}],staticClass:\"opengl2webgl-navpane-category-text\"},[_vm._v(\" \"+_vm._s(category.name)+\" \")]),_vm._v(\" \"),_c('b-collapse',{attrs:{\"id\":'category-' + category.name}},[_c('ul',{staticClass:\"opengl2webgl-navpane-list\"},_vm._l((_vm.filter),function(item){return (item.category == category.name && !item.hidden)?_c('li',{key:item.name,staticClass:\"opengl2webgl-navpane-item\"},[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:(item.name),expression:\"item.name\"}],staticClass:\"opengl2webgl-navpane-text\",class:{active: item.active},on:{\"click\":function($event){_vm.activate(item)}}},[_vm._v(\" \"+_vm._s(item.text)+\"\\n          \")]),_vm._v(\" \"),(item.parameters.length !== 0 && item.active)?_c('opengl2webgl-navpane-controls',_vm._b({attrs:{\"animation\":item,\"screenType\":_vm.screenType}},'opengl2webgl-navpane-controls',{activate: _vm.activate, resetAnimation: _vm.resetAnimation, toFullScreen: _vm.toFullScreen, resetInput: _vm.resetInput},false)):_vm._e()],1):_vm._e()}))])],1):_vm._e()}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1db86775\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/OpenGL2WebGL/Navpane/Navpane.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1db86775\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Navpane.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Navpane.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Navpane.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1db86775\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Navpane.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/OpenGL2WebGL/Navpane/Navpane.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <b-container fluid id=\"opengl2webgl-container\">\n      <b-row v-if=\"screenType === 'phone'\">\n        <b-col>\n          <h1 id=\"opengl2webgl-phone-message\">ROTATE ME</h1>\n        </b-col>\n      </b-row>\n      <b-row v-else>\n        <b-col id=\"opengl2webgl-navpane\" md=\"2\" sm=\"3\">\n          <h2 id=\"opengl2webgl-navpane-title\" :class=\"screenType\">Animations</h2>\n          <input type=\"text\" id=\"opengl2webgl-search-bar\" placeholder=\"Search\" onfocus=\"this.value=''\" v-model=\"searchedText\"/>\n          <opengl2webgl-navpane-menu id=\"opengl2webgl-navpane-menu\" :class=\"[screenAspectRatio, screenType]\" :screenType=\"screenType\" :searchedText=\"searchedText\"/>\n        </b-col>\n        <b-col md=\"10\" sm=\"9\" id='opengl2webgl-display'>\n          <canvas id='opengl2webgl-canvas'></canvas>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport Navpane from './Navpane/Navpane';\n\nexport default {\n  props: ['screenType', 'screenAspectRatio'],\n  name: 'OpenGL2WebGLApp',\n  components: {\n    'opengl2webgl-navpane-menu': Navpane\n  },\n  data () {\n    return {\n      searchedText: ''\n    }\n  }\n}\n</script>\n\n<style>\n\n#opengl2webgl-phone-message {\n  position: relative;\n  top: 70%;\n  text-align: center;\n}\n\n#opengl2webgl-navpane {\n  height: 90vh;\n  background: none;\n  overflow: hidden;\n  position: relative;\n}\n\n#opengl2webgl-navpane-title {\n  position: relative;\n}\n\n#opengl2webgl-search-bar {\n  position: relative;\n  width: 100%;\n}\n\n#opengl2webgl-navpane-menu {\n  height: 87%;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: absolute;\n  margin-top: 10px;\n}\n::-webkit-scrollbar {\n  background: transparent;\n}\n\n#opengl2webgl-navpane-menu.tablet, #opengl2webgl-navpane-menu.phone {\n  height: 80%;\n}\n\n#opengl2webgl-navpane-menu.widescreen {\n  height: 75%;\n}\n\n#opengl2webgl-display {\n  height:90vh;\n  overflow: hidden;\n}\n\n#opengl2webgl-display.tablet, #opengl2webgl-display.phone {\n  height:85vh;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"fluid\":\"\",\"id\":\"opengl2webgl-container\"}},[(_vm.screenType === 'phone')?_c('b-row',[_c('b-col',[_c('h1',{attrs:{\"id\":\"opengl2webgl-phone-message\"}},[_vm._v(\"ROTATE ME\")])])],1):_c('b-row',[_c('b-col',{attrs:{\"id\":\"opengl2webgl-navpane\",\"md\":\"2\",\"sm\":\"3\"}},[_c('h2',{class:_vm.screenType,attrs:{\"id\":\"opengl2webgl-navpane-title\"}},[_vm._v(\"Animations\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchedText),expression:\"searchedText\"}],attrs:{\"type\":\"text\",\"id\":\"opengl2webgl-search-bar\",\"placeholder\":\"Search\",\"onfocus\":\"this.value=''\"},domProps:{\"value\":(_vm.searchedText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.searchedText=$event.target.value}}}),_vm._v(\" \"),_c('opengl2webgl-navpane-menu',{class:[_vm.screenAspectRatio, _vm.screenType],attrs:{\"id\":\"opengl2webgl-navpane-menu\",\"screenType\":_vm.screenType,\"searchedText\":_vm.searchedText}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"md\":\"10\",\"sm\":\"9\",\"id\":\"opengl2webgl-display\"}},[_c('canvas',{attrs:{\"id\":\"opengl2webgl-canvas\"}})])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-03e4ffeb\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-03e4ffeb\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./OpenGL2WebGLApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./OpenGL2WebGLApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./OpenGL2WebGLApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-03e4ffeb\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./OpenGL2WebGLApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"media-container\"}},[_c('h1',[_vm._v(\"Not for laptop speakers\")]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"media-players\"}},_vm._l((_vm.mediaPlayers),function(player){return _c('div',{key:player.name,staticClass:\"media-player\"},[_c('b-row',{staticClass:\"justify-content-md-center\"},[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(player.embedref)}})])],1)],1)}))])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1376980a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Media/MediaApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1376980a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./MediaApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MediaApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MediaApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1376980a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./MediaApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Media/MediaApp.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{class:_vm.screenType,attrs:{\"align-h\":\"center\",\"id\":\"cv-container\"}},[(_vm.screenType !== 'monitor')?_c('div',_vm._l((_vm.cvContents),function(cvSection){return _c('b-row',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('b-col',{staticClass:\"cv-section\",class:_vm.screenType,attrs:{\"cols\":\"12\"}},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2)],1)})):_vm._e(),_vm._v(\" \"),(_vm.screenType === 'monitor')?_c('div',{attrs:{\"id\":\"cv-slider\"}},[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){_vm.onSlideLeft(_vm.currentSlide)}}},[_c('span',{staticClass:\"glyphicon glyphicon-chevron-left\"})])],1),_vm._v(\" \"),_c('b-col',{attrs:{\"cols\":\"8\"}},_vm._l((_vm.cvContents),function(cvSection){return (cvSection.display)?_c('div',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2):_vm._e()})),_vm._v(\" \"),_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){_vm.onSlideRight(_vm.currentSlide)}}},[_c('span',{staticClass:\"glyphicon glyphicon-chevron-right\"})])],1)],1)],1):_vm._e()])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-47c04a5f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/CV/CVApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-47c04a5f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CVApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CVApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CVApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-47c04a5f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CVApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/CV/CVApp.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"contact-container\"}},[_c('b-row',[_c('b-col',[_c('h1',[_vm._v(\"HIT ME UP\")])])],1),_vm._v(\" \"),_vm._l((_vm.contactInfo),function(contactInfoItem){return _c('b-row',{key:contactInfoItem.text},[_c('b-col',[_c('p',[_vm._v(_vm._s(contactInfoItem.text))])])],1)}),_vm._v(\" \"),_c('b-row',[_c('b-col',_vm._l((_vm.contactLinks),function(contactLink){return _c('a',{key:contactLink.icon,staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":contactLink.src,\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa\",class:contactLink.icon})])}))],1),_vm._v(\" \"),_c('b-row',[_c('b-col',[_c('a',{staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":\"https://github.com/max-t-wheeler\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa fa-github\"})])])],1)],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-77a07d5e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Contact/ContactApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-77a07d5e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ContactApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ContactApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ContactApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-77a07d5e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ContactApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Contact/ContactApp.vue\n// module id = null\n// module chunks = ","<template>\n\n  <div id=\"app-base\">\n    <app-toolbar :homeContents=\"home\" :appContents=\"contents\" class=\"toolbar\"/>\n    <transition name=\"fade\" mode=\"out-in\">\n      <home-page v-if=\"home.display\" :screenType=\"screenType\" class=\"application\"/>\n      <opengl2webgl-app v-if=\"contents[0].display\" :screenType=\"screenType\" class=\"application\"/>\n      <media-app v-if=\"contents[1].display\" :screenType=\"screenType\" class=\"application\"/>\n      <cv-app v-if=\"contents[2].display\" :screenType=\"screenType\" class=\"application\"/>\n      <contact-app v-if=\"contents[3].display\" :screenType=\"screenType\" class=\"application\"/>\n    </transition>\n  </div>\n\n</template>\n\n<script>\n\nimport Toolbar from './components/Toolbar';\nimport Home from './components/Home/Home';\nimport OpenGL2WebGLApp from './components/OpenGL2WebGL/OpenGL2WebGLApp';\nimport MediaApp from './components/Media/MediaApp';\nimport CVApp from './components/CV/CVApp';\nimport ContactApp from './components/Contact/ContactApp';\n\nexport default {\n  name: 'App',\n  components: {\n    'app-toolbar': Toolbar,\n    'home-page': Home,\n    'opengl2webgl-app': OpenGL2WebGLApp,\n    'media-app': MediaApp,\n    'cv-app': CVApp,\n    'contact-app': ContactApp\n  },\n  data () {\n    return {\n      home: {\n        name: 'Home',\n        address: '#home',\n        display: true\n      },\n      contents: [\n        {\n          name: 'WebGL Projects',\n          address: '#webgl-projects',\n          display: false\n        },\n        {\n          name: 'Media',\n          address: '#media',\n          display: false\n        },\n        {\n          name: 'CV',\n          address: '#cv',\n          display: false\n        },\n        {\n          name: 'Contact',\n          address: '#contact',\n          display: false\n        }\n      ],\n      screenType: '',\n      screenAspectRatio: ''\n    }\n  },\n  methods: {\n    checkScreenSize: function () {\n\n      if (window.innerWidth < 576) {\n        this.screenType = 'phone';\n      } else if (window.innerWidth < 768) {\n        this.screenType = 'tablet';\n      } else {\n        this.screenType = 'monitor';\n      }\n\n      if (window.innerWidth / window.innerHeight > 2) {\n        this.screenAspectRatio = 'widescreen';\n      } else {\n        this.screenAspectRatio = 'normal';\n      }\n\n    },\n    resizeApp: function () {\n      window.addEventListener('resize', () => this.checkScreenSize());\n    }\n  },\n  mounted () {\n    this.checkScreenSize();\n  },\n  updated () {\n    this.resizeApp();\n  }\n}\n\n</script>\n\n<style>\n\nbody {\n  background: linear-gradient(10deg, rgba(0, 255, 255, 0.9), rgba(0, 102, 0, 0.9)), url(./assets/stars.jpg);\n}\n\n#app-base {\n  height: 100vh;\n  overflow: hidden;\n}\n\n.application {\n  height: 90vh;\n  overflow: auto;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"media-container\">\n      <h1>Not for laptop speakers</h1>\n      <div id=\"media-players\">\n        <div v-for=\"player in mediaPlayers\" :key=\"player.name\" class=\"media-player\">\n          <b-row class=\"justify-content-md-center\">\n            <b-col md=\"6\">\n              <span v-html='player.embedref'></span>\n            </b-col>\n          </b-row>\n        </div>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'MediaApp',\n  data () {\n    return {\n      mediaPlayers: [\n        {\n          name: 'bandcamp-dub',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=916923795/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=3453975111/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/siblings-and-friends\">Siblings and Friends by Siblings and Friends</a></iframe>'\n        },\n        {\n          name: 'soundlcoud-cheerio',\n          embedref: '<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/345594317&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true\"></iframe>'\n        },\n        {\n          name: 'bandcamp-gross',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=3621861420/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=493506869/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/keepin-it-clean\">Keepin it Clean by Serge Dean</a></iframe>'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#media-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n  overflow: hidden;\n}\n\n#media-player {\n  width: 100%;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Media/MediaApp.vue","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"cv-container\" :class=\"screenType\">\n      <div v-if=\"screenType !== 'monitor'\">\n        <b-row v-for=\"cvSection in cvContents\" :key=\"cvSection.header\" class=\"cv-section-content\">\n          <b-col cols=\"12\" class=\"cv-section\" :class=\"screenType\">\n            <h1>{{cvSection.header}}</h1> <br>\n            <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n          </b-col>\n        </b-row>\n      </div>\n      <div v-if=\"screenType === 'monitor'\" id=\"cv-slider\">\n        <b-row>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" v-on:click=\"onSlideLeft(currentSlide)\">\n              <span class=\"glyphicon glyphicon-chevron-left\"></span>\n            </b-btn>\n          </b-col>\n          <b-col cols=\"8\">\n              <div v-for=\"cvSection in cvContents\" :key=\"cvSection.header\" v-if=\"cvSection.display\" class=\"cv-section-content\">\n                <h1>{{cvSection.header}}</h1> <br>\n                <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n              </div>\n          </b-col>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" v-on:click=\"onSlideRight(currentSlide)\">\n              <span class=\"glyphicon glyphicon-chevron-right\"></span>\n            </b-btn>\n          </b-col>\n        </b-row>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['screenType'],\n  name: 'CVApp',\n  data () {\n    return {\n      currentSlide: 0,\n      cvContents: [\n        {\n          display: true,\n          header: 'Education',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute'\n            },\n            {\n              type: 'cv-description',\n              text: 'B.S. in Physics and Mathematics (2015)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Experience',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'FactSet Research Systems, Inc.'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Portfolio & Quant, Analytics Solutions'\n            },\n            {\n              type: 'cv-description',\n              text: 'Senior Product Developer (2016-)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Barncat Productions'\n            },\n            {\n              type: 'cv-description',\n              text: 'Chief Technical Officer, Head of Public Relations, Studio Musician (2015-2016)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute Department of Mathematics'\n            },\n            {\n              type: 'cv-description',\n              text: 'Research Student (2014-2015)'\n            },\n            {\n              type: 'cv-description',\n              text: 'Teaching Assistant, Introduction to Differential Equations (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Affiliations',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Pi Mu Epsilon, Kappa'\n            },\n            {\n              type: 'cv-description',\n              text: 'Secretary (2014-2015)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Delta Tau Delta, Upsilon'\n            },\n            {\n              type: 'cv-description',\n              text: 'Recording Secretary (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Accolades',\n          details: [\n            {\n              type: 'cv-description',\n              text: 'Rensselaer Medalist (2010)'\n            }\n          ]\n        }\n      ]\n    }\n  },\n  methods: {\n    onSlideLeft (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n\n      if (this.currentSlide === 0) {\n        this.currentSlide = this.cvContents.length - slide - 1;\n      } else {\n        this.currentSlide = slide - 1;\n      }\n\n      this.cvContents[this.currentSlide].display = true;\n    },\n    onSlideRight (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n      this.currentSlide = (slide + 1) % this.cvContents.length;\n      this.cvContents[this.currentSlide].display = true;\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#cv-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n}\n\n#cv-container.monitor {\n  top: 30%;\n  overflow: hidden;\n}\n\n#cv-slider {\n  position: relative;\n  top: 50%;\n}\n\n.cv-slider-arrow, .cv-slider-arrow:hover, .cv-slider-arrow:active, .cv-slider-arrow:focus, .cv-slider-arrow:visited {\n  background: none;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  position: fixed;\n  top: 40%;\n}\n\n.cv-organization {\n  font-weight: bold;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/CV/CVApp.vue","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"contact-container\">\n      <b-row>\n        <b-col>\n          <h1>HIT ME UP</h1>\n        </b-col>\n      </b-row>\n      <b-row v-for=\"contactInfoItem in contactInfo\" :key=\"contactInfoItem.text\" >\n        <b-col>\n          <p>{{ contactInfoItem.text }}</p>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a v-for=\"contactLink in contactLinks\" :key=\"contactLink.icon\" rel=\"noopener\" class=\"contact-icon\" :href=\"contactLink.src\" target=\"_blank\">\n            <span class=\"fa\" :class=\"contactLink.icon\"/>\n          </a>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a rel=\"noopener\" class=\"contact-icon\" href=\"https://github.com/max-t-wheeler\" target=\"_blank\">\n            <span class=\"fa fa-github\"/>\n          </a>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'ContactApp',\n  data () {\n    return {\n      contactInfo: [\n        {\n          text: 'Max T. Wheeler'\n        },\n        {\n          text: 'max.t.wheeler@gmail.com'\n        },\n        {\n          text: 'CT | MA | NY'\n        }\n      ],\n      contactLinks: [\n        {\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin'\n        },\n        {\n          src: 'https://www.facebook.com/max.wheeler.9',\n          icon: 'fa-facebook'\n        },\n        {\n          src: 'https://soundcloud.com/the-dopest-kind',\n          icon: 'fa-soundcloud'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#contact-container {\n  position: relative;\n  top: 20%;\n  text-align: center;\n}\n\n.contact-icon {\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n}\n\n.contact-icon:hover, .contact-icon:active, .contact-icon:visited {\n  color: black;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Contact/ContactApp.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app-base\"}},[_c('app-toolbar',{staticClass:\"toolbar\",attrs:{\"homeContents\":_vm.home,\"appContents\":_vm.contents}}),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.home.display)?_c('home-page',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[0].display)?_c('opengl2webgl-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[1].display)?_c('media-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[2].display)?_c('cv-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[3].display)?_c('contact-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-46c91718\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-46c91718\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-46c91718\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport App from './App';\n\nVue.use(BootstrapVue);\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}