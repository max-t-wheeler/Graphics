{"version":3,"sources":["webpack:///./src/assets/erdos.png","webpack:///./src/components/Toolbar.vue?33d8","webpack:///./src/components/Toolbar.vue","webpack:///src/components/Toolbar.vue","webpack:///./src/components/Home/Themes/homeAnimation.js","webpack:///./src/components/Home/Canvas/canvasManager.js","webpack:///src/components/Home/Canvas/Canvas.vue","webpack:///./src/components/Home/Canvas/Canvas.vue?9753","webpack:///./src/components/Home/Canvas/Canvas.vue","webpack:///src/components/Home/Home.vue","webpack:///./src/components/Home/Home.vue?bd69","webpack:///./src/components/Home/Home.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue?5ef8","webpack:///./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","webpack:///src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/animation.js","webpack:///./src/components/OpenGL2WebGL/utils.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/blanket.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/bounceRipple.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthedad.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum3.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum4.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum5.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum6.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum7.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum8.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum9.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/clam.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/collide0scope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/fauxlidoscope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/flowers.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/gyr0scope.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pearl.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pinwheel.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/snowflake.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/sloshRipple.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/starryNight.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/wrigglingDonut.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic2.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/offsetStar.js","webpack:///./src/components/OpenGL2WebGL/Navpane/index.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/sacredCircles.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/unoriginal.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/physics/sineWave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/circle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/cube.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/polygon.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/rectangle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/triangle.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/amparo.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/andorinha.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/antigua.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/batidinha.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/bicardi.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/blouse.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/brazil.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/choro.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/dialogo.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/flower.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/games.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/lamento.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/look.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/mojave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/sabia.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/tereza.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/triste.js","webpack:///./src/components/OpenGL2WebGL/Navpane/simulations/wave.js","webpack:///./src/components/OpenGL2WebGL/Navpane/canvasManager.js","webpack:///src/components/OpenGL2WebGL/Navpane/Navpane.vue","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue?395a","webpack:///./src/components/OpenGL2WebGL/Navpane/Navpane.vue","webpack:///src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue?7767","webpack:///./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","webpack:///./src/components/Media/MediaApp.vue?de24","webpack:///./src/components/Media/MediaApp.vue","webpack:///./src/components/CV/CVApp.vue?be89","webpack:///./src/components/CV/CVApp.vue","webpack:///./src/components/Contact/ContactApp.vue?dd91","webpack:///./src/components/Contact/ContactApp.vue","webpack:///src/App.vue","webpack:///src/components/Media/MediaApp.vue","webpack:///src/components/CV/CVApp.vue","webpack:///src/components/Contact/ContactApp.vue","webpack:///./src/App.vue?a2a4","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["module","exports","__webpack_require__","p","components_Toolbar","render","_vm","this","_h","$createElement","_c","_self","attrs","toggleable","type","target","_v","on","click","$event","selectHome","staticClass","_s","homeContents","name","is-nav","id","_l","app","key","selectApp","toolbarLink","right","directives","rawName","modifiers","hover","rel","href","src","title","tooltip","class","icon","staticRenderFns","src_components_Toolbar","normalizeComponent","ssrContext","HomeAnimation","scene","classCallCheck_default","geometry","THREE","i","r","Math","random","theta","PI","phi","x","cos","sin","y","z","vertices","push","material","color","mesh","add","CanvasManager","canvas","_this","checkCanvasSize","setCamera","setRenderer","window","addEventListener","animation","dt","draw","tick","bind","backgroundColor","renderer","antialias","setClearColor","setPixelRatio","devicePixelRatio","offset","camera","canvasWidth","canvasHeight","position","cv","document","getElementById","offsetWidth","offsetHeight","setSize","aspect","updateProjectionMatrix","animationId","requestAnimationFrame","update","Canvas_canvasManager","Canvas","Canvas_Canvas","Home","Canvas_normalizeComponent","Home_Home","align-h","components_Home_Home","Home_normalizeComponent","Navpane_NavpaneControls","parameter","label","screenType","value","expression","max","maxValue","min","minValue","domProps","blur","resetInput","input","composing","$set","activate","resetAnimation","toFullScreen","OpenGL2WebGL_Navpane_NavpaneControls","NavpaneControls_normalizeComponent","Animation","parameters","dynamic","controllable","colorNodes","n","t","polygon","center","radius","numVertices","axis","Float32Array","addAttribute","line","set","Star","numStems","numSplits","stemGroup","splitGroup","stemVertices","stemGeometry","stemMaterial","j","splitVertices","splitGeometry","splitMaterial","Flower","rootPosition","pistolPosition","petalRadius","numPetals","numNodes","petalColor","pistolColor","stem","petalGroup","petal","pistolGeometry","pistolMaterial","wireframe","pistol","sacredGeometry","numPolygons","polygonRadius","globalRadius","geomGroup","poly","Graph","partitionSizes","vertexRadius","numEdges","vertexGroup","edgeGroup","createClass_default","length","vertexCenter","vertexGeometry","vertexMaterial","vertex","layout","angle","arguments","undefined","children","count","numSides","sideScale","sideSpacing","floor","sideAngle","numLevels","levelScale","interLevelSpacing","intraLevelSpacing","edgeGeometry","edgeMaterial","edge","createVertexSet","assignVertexCoordinates","addEdges","Blanket","possibleConstructorReturn_default","__proto__","get_prototype_of_default","call","parseFloat","currentValue","numFaces","rotateZ","BounceRipple","scale","Chrysanthedad","numCenters","numLayers","polyCenterOffset","polyClusterCenter","k","Chrysanthemum","rotation","Chrysanthemum2","Chrysanthemum3","Chrysanthemum4","Chrysanthemum5","rotateX","Chrysanthemum6","Chrysanthemum7","Chrysanthemum8","Chrysanthemum9","Clam","numRidges","sqrt","pow","endpoints","Collide0scope","numCircles","ConcentricPolygons","ConcentricPolygons2","Fauxlidoscope","numSteps","numLanes","cameraAmplitude","cameraZoomMax","cameraZoomMin","cameraDisplacement","concentricPolygonGroup","layerGroup","Temp","numFlowers","root","flower","Gyr0scope","rate","Pearl","pearlGeometry","pearlMaterial","pearl","Pinwheel","Snowflake","geom","SloshRipple","StarryNight","numStars","starCenter","starRadius","abs","star","WrigglingDonut","Mosaic","l","Mosaic2","group1","group2","OffsetStar","ANIMATION_MAP","blanket","bounce ripple","chrysanthedad","chrysanthemum","chrysanthemum2","chrysanthemum3","chrysanthemum4","chrysanthemum5","chrysanthemum6","chrysanthemum7","chrysanthemum8","chrysanthemum9","collide","concentric polygons","concentric polygons 2","fauxlidoscope","flowers","Flowers","gyro","pinwheel","snowflake","slosh ripple","starry night","wriggling donut","mosaic","mosaic2","sacred circles","SacredCircles","circleRadius","unoriginal","nodeRadius","divisor","visible","sine wave","SineWave","amplitude","frequency","phase","displacement","numPoints","node_x","node_y","circle","Circle","numSpokes","clam","cube","Cube","polystarter","Polygon","rectangle","Rectangle","colors","vertexColors","triangle","Triangle","amparo","Amparo","numPartitions","graphRadius","graph","initialize","andorinha","Andorinha","antigua","Antigua","batidinha","Batidinha","bicardi","Bicardi","blouse","Blouse","brazil","Brazil","choro","Choro","dialogo","Dialogo","games","Games","lamento","Lamento","look","Look","dampening","mojave","Mojave","sabia","Sabia","tereza","Tereza","triste","Triste","wave","Wave","OrbitControls","require","generateAnimation","controls","domElement","Navpane_Navpane_canvasManager","Navpane","defaultValue","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","filter","toLowerCase","Navpane_Navpane","category","hidden","_e","item","active","text","_b","OpenGL2WebGLApp","Navpane_normalizeComponent","OpenGL2WebGL_OpenGL2WebGLApp","fluid","md","sm","placeholder","onfocus","searchedText","screenAspectRatio","Media_MediaApp","player","innerHTML","embedref","CV_CVApp","cvSection","header","cols","detail","onSlideLeft","currentSlide","onSlideRight","Contact_ContactApp","contactInfoItem","contactLink","App","OpenGL2WebGLApp_normalizeComponent","MediaApp_normalizeComponent","CVApp_normalizeComponent","ContactApp_normalizeComponent","checkScreenSize","resizeApp","selectortype_template_index_0_src_App","home","appContents","contents","mode","src_App","App_normalizeComponent","Vue","use","BootstrapVue","config","productionTip","el","components","template"],"mappings":"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,WACA,UACA,OACA,6CAGA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,sDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,yBAEA,8BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,WAGA,SAEA,0BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,6CAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,+CAGA,iCACA,eACA,WACA,aAEA,mBAEA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,2BAEA,UACA,uDACA,oBACA,WACA,UACA,OACA,+CAGA,iCACA,eACA,WACA,aAEA,mBAEA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAGA,SAEA,4BAEA,UACA,6CACA,oBACA,WACA,UACA,OACA,oCAGA,gCACA,iBACA,aACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,iBAEA,UACA,sDACA,oBACA,WACA,UACA,OACA,wCAGA,iCACA,gBACA,YACA,aAGA,SAEA,0BAEA,UACA,4DACA,oBACA,WACA,UACA,OACA,qDAGA,kCACA,gBACA,YACA,aAEA,mBAEA,+BACA,eACA,WACA,YAGA,SAEA,gCAEA,UACA,6DACA,oBACA,WACA,UACA,OACA,uDAGA,kCACA,gBACA,YACA,aAEA,iBAEA,sBACA,eACA,WACA,YAGA,SAEA,kCAEA,UACA,2DACA,kBACA,WACA,oBACA,WACA,UACA,OACA,4CAGA,+BACA,gBACA,YACA,aAEA,oBAEA,gCACA,gBACA,YACA,aAEA,mBAEA,+BACA,eACA,WACA,YAEA,mBAEA,+BACA,eACA,WACA,YAEA,wBAEA,8BACA,eACA,WACA,YAEA,uBAEA,6BACA,eACA,WACA,YAGA,SAEA,0BAEA,UACA,gDACA,oBACA,WACA,UACA,OACA,wCAGA,iCACA,eACA,WACA,YAEA,oBAEA,gCACA,eACA,WACA,aAEA,mBAEA,+BACA,eACA,WACA,YAEA,sBAEA,4BACA,eACA,WACA,WAGA,SAEA,oBAEA,UACA,kDACA,oBACA,WACA,UACA,OACA,qCAGA,iCACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,sBAEA,UACA,8CACA,oBACA,WACA,UACA,OACA,qCAGA,gCACA,iBACA,aACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,kBAEA,UACA,iDACA,oBACA,WACA,UACA,OACA,0CAGA,kCACA,gBACA,YACA,YAEA,mBAEA,+BACA,eACA,WACA,YAGA,SAEA,qBAEA,UACA,kDACA,oBACA,WACA,UACA,OACA,yCAGA,gCACA,eACA,WACA,YAEA,mBAEA,+BACA,gBACA,YACA,YAEA,sBAEA,kCACA,gBACA,YACA,aAEA,mBAEA,+BACA,eACA,WACA,YAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,sBAEA,UACA,qDACA,oBACA,WACA,UACA,OACA,8CAGA,kCACA,iBACA,aACA,aAEA,kBAEA,sBACA,eACA,WACA,YAGA,SAEA,yBAEA,UACA,qDACA,oBACA,WACA,UACA,OACA,2CAGA,+BACA,gBACA,YACA,aAEA,mBAEA,+BACA,gBACA,YACA,YAEA,oBAEA,gCACA,eACA,WACA,WAEA,iBAEA,sBACA,gBACA,YACA,aAGA,SAEA,yBAEA,UACA,wDACA,oBACA,WACA,UACA,OACA,8CAGA,+BACA,gBACA,YACA,aAEA,sBAEA,kCACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAGA,SAEA,4BAEA,UACA,gDACA,qBACA,WACA,UACA,OACA,qCAGA,+BACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,oBAEA,gCACA,eACA,WACA,aAEA,wBAEA,8BACA,eACA,WACA,YAEA,uBAEA,6BACA,eACA,WACA,YAGA,SAEA,mBAEA,UACA,iDACA,qBACA,WACA,UACA,OACA,uCAGA,gCACA,gBACA,YACA,aAEA,mBAEA,+BACA,gBACA,YACA,YAEA,mBAEA,+BACA,gBACA,YACA,aAEA,wBAEA,8BACA,eACA,WACA,YAEA,uBAEA,6BACA,gBACA,YACA,WAGA,SAEA,mBAEA,UACA,wDACA,qBACA,WACA,UACA,OACA,8CAGA,gCACA,gBACA,YACA,YAEA,qBAEA,iCACA,gBACA,YACA,YAEA,uBAEA,6BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,YAGA,SAEA,2BAEA,UACA,8CACA,qBACA,WACA,UACA,OACA,sCAGA,kCACA,gBACA,YACA,aAEA,iBAEA,sBACA,eACA,WACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,iBAEA,UACA,oDACA,qBACA,WACA,UACA,OACA,yCAGA,+BACA,gBACA,YACA,aAEA,qBAEA,2BACA,eACA,WACA,YAEA,uBAEA,6BACA,eACA,WACA,YAEA,eAEA,oBACA,eACA,WACA,aAEA,kBAEA,uBACA,eACA,WACA,aAGA,SAEA,uBAEA,UACA,sDACA,wBACA,WACA,UACA,OACA,yCAGA,yBACA,gBACA,YACA,aAEA,oBAEA,yBACA,gBACA,YACA,aAEA,gBAEA,qBACA,eACA,WACA,aAEA,uBAEA,4BACA,eACA,WACA,aAEA,oBAEA,gCACA,kBACA,cACA,aAGA,SAEA,sBAEA,UACA,kDACA,uBACA,WACA,UACA,OACA,sCAGA,gCACA,eACA,WACA,aAEA,iBAEA,sBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,gDACA,uBACA,WACA,UACA,OACA,0BAGA,iBAEA,UACA,gDACA,uBACA,WACA,UACA,OACA,wCAGA,sBACA,eACA,WACA,aAEA,sBAEA,kCACA,eACA,WACA,aAEA,gBAEA,qBACA,eACA,WACA,aAGA,SAEA,wBAEA,UACA,qDACA,uBACA,WACA,UACA,OACA,+BAGA,sBAEA,UACA,oDACA,uBACA,WACA,UACA,OACA,8BAGA,qBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,gBACA,YACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,gBACA,YACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,0DACA,4BACA,WACA,UACA,OACA,6CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,kBACA,cACA,aAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,sBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,gBACA,YACA,aAEA,uBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,YAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,YAGA,SAEA,oBAEA,UACA,0DACA,4BACA,WACA,UACA,OACA,6CAGA,oCACA,gBACA,YACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,aAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,sBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,eACA,WACA,YAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,YAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,oBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,iBACA,aACA,aAGA,SAEA,mBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,kBAEA,uBACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,sDACA,4BACA,WACA,UACA,OACA,yCAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,YAGA,SAEA,kBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,gBACA,YACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,YAEA,uBAEA,6BACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,oBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,YAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,mBAEA,UACA,sDACA,4BACA,WACA,UACA,OACA,yCAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,kBAEA,UACA,wDACA,4BACA,WACA,UACA,OACA,2CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,iBACA,aACA,aAGA,SAEA,oBAEA,UACA,qDACA,4BACA,WACA,UACA,OACA,wCAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,gBACA,YACA,aAEA,oBAEA,yBACA,gBACA,YACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,iBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,mBAEA,UACA,sDACA,4BACA,WACA,UACA,OACA,yCAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,gBACA,YACA,aAGA,SAEA,kBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,eACA,WACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,uDACA,4BACA,WACA,UACA,OACA,0CAGA,oCACA,iBACA,aACA,aAEA,sBAEA,kCACA,iBACA,aACA,aAEA,wBAEA,4BACA,eACA,WACA,WAEA,uBAEA,6BACA,eACA,WACA,aAEA,kBAEA,uBACA,gBACA,YACA,aAEA,eAEA,oBACA,eACA,WACA,aAGA,SAEA,mBAEA,UACA,qDACA,4BACA,WACA,UACA,OACA,wCAGA,oCACA,eACA,W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","file":"static/js/app.150481ab52e668569339.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/img/erdos.ad37ccb.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/erdos.png\n// module id = IPQj\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-navbar',{attrs:{\"toggleable\":\"md\",\"type\":\"dark\"}},[_c('b-navbar-toggle',{attrs:{\"target\":\"nav_collapse\"}}),_vm._v(\" \"),_c('b-navbar-brand',{on:{\"click\":function($event){_vm.selectHome()}}},[_c('span',{staticClass:\"glyphicon glyphicon-home\"}),_vm._v(\"\\n      \"+_vm._s(_vm.homeContents.name))]),_vm._v(\" \"),_c('b-collapse',{attrs:{\"is-nav\":\"\",\"id\":\"nav_collapse\"}},[_c('b-navbar-nav',_vm._l((_vm.appContents),function(app){return _c('b-nav-item',{key:app.name,on:{\"click\":function($event){_vm.selectApp(app)}}},[_vm._v(_vm._s(app.name))])})),_vm._v(\" \"),_c('b-navbar-nav',{staticClass:\"ml-auto\"},_vm._l((_vm.toolbarLinks),function(toolbarLink){return _c('b-nav-item',{key:toolbarLink.name,attrs:{\"right\":\"\"}},[_c('a',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover\",modifiers:{\"hover\":true}}],staticClass:\"toolbar-icon external\",attrs:{\"rel\":\"noopener\",\"href\":toolbarLink.src,\"target\":\"_blank\",\"title\":toolbarLink.tooltip}},[_c('span',{staticClass:\"fa\",class:toolbarLink.icon})])])}))],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-39abbdbc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Toolbar.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-39abbdbc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Toolbar.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Toolbar.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Toolbar.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-39abbdbc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Toolbar.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Toolbar.vue\n// module id = null\n// module chunks = ","<template>\n\n    <div>\n      <b-navbar toggleable=\"md\" type=\"dark\">\n        <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n        <b-navbar-brand v-on:click=\"selectHome()\">\n          <span class=\"glyphicon glyphicon-home\"></span>\n          {{ homeContents.name }}</b-navbar-brand>\n        <b-collapse is-nav id=\"nav_collapse\">\n          <b-navbar-nav>\n            <b-nav-item v-for=\"app in appContents\" :key=\"app.name\" v-on:click=\"selectApp(app)\">{{ app.name }}</b-nav-item>\n          </b-navbar-nav>\n          <b-navbar-nav class=\"ml-auto\">\n            <b-nav-item right v-for=\"toolbarLink in toolbarLinks\" :key=\"toolbarLink.name\">\n              <a rel=\"noopener\" class=\"toolbar-icon external\" :href=\"toolbarLink.src\" target=\"_blank\" v-b-tooltip.hover :title=\"toolbarLink.tooltip\">\n                <span class=\"fa\" :class=\"toolbarLink.icon\"/>\n              </a>\n            </b-nav-item>\n          </b-navbar-nav>\n        </b-collapse>\n      </b-navbar>\n    </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['homeContents', 'appContents'],\n  data () {\n    return {\n      toolbarLinks: [\n        {\n          name: 'github',\n          src: 'https://github.com/max-t-wheeler',\n          icon: 'fa-github',\n          tooltip: 'Must'\n        },\n        {\n          name: 'linkedin',\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin',\n          tooltip: 'use'\n        },\n        {\n          name: 'facebook',\n          src: 'https://www.facebook.com/max.t.wheeler',\n          icon: 'fa-facebook',\n          tooltip: 'right'\n        },\n        {\n          name: 'soundcloud',\n          src: 'https://soundcloud.com/the-dopest-kind',\n          icon: 'fa-soundcloud',\n          tooltip: 'click'\n        }\n      ]\n    }\n  },\n  methods: {\n    selectHome: function () {\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      this.homeContents.display = true;\n    },\n    selectApp: function (application) {\n      this.homeContents.display = false;\n      for (let i = 0; i < this.appContents.length; ++i) {\n        this.appContents[i].display = false;\n      }\n      application.display = true;\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.toolbar-icon {\n\n  color: black;\n  text-decoration: none;\n}\n\n.toolbar-icon:hover, .toolbar-icon:active, .toolbar-icon:visited {\n  color: black;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Toolbar.vue","import * as THREE from 'three';\n\nexport default class HomeAnimation {\n\n  constructor (scene) {\n    this.scene = scene;\n  }\n\n  draw () {\n\n    let geometry = new THREE.Geometry();\n\n    for (let i = 0; i < 100; ++i) {\n\n      let r = 3 * Math.random() - 2;\n      let theta = 2 * Math.PI * Math.random();\n      let phi = Math.PI * Math.random();\n\n      let x = r * Math.cos(theta) * Math.sin(phi);\n      let y = r * Math.sin(theta) * Math.cos(phi);\n      let z = r * Math.cos(theta);\n\n      geometry.vertices.push(new THREE.Vector3(x, y, z));\n\n    }\n\n    let material = new THREE.LineBasicMaterial({ color: 0xff0000 });\n    let mesh = new THREE.Line(geometry, material);\n\n    this.scene.add(mesh);\n\n\t}\n\n  update () {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Home/Themes/homeAnimation.js","import * as THREE from 'three';\n\nimport HomeAnimation from '../Themes/homeAnimation';\n\nexport default class CanvasManager {\n\n  constructor (canvas) {\n\n    // initialize canvas\n\n    this.canvas = canvas;\n\n    this.checkCanvasSize();\n\n    this.setCamera(3);\n    this.setRenderer(0x000000);\n\n    this.checkCanvasSize();\n\n    window.addEventListener('resize', () => this.checkCanvasSize());\n\n    // initialize animation\n\n    this.scene = new THREE.Scene();\n\n    this.animation = new HomeAnimation(this.scene);\n\n    this.dt = 0;\n\n    this.animation.draw();\n\n    this.tick = this.tick.bind(this);\n\n    // run animation\n\n    this.tick();\n\n  }\n\n  setRenderer (backgroundColor) {\n\n    this.renderer = new THREE.WebGLRenderer({canvas: this.canvas, antialias: true});\n    this.renderer.setClearColor(backgroundColor);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n  }\n\n  setCamera (offset) {\n\n    this.camera = new THREE.PerspectiveCamera(75, this.canvasWidth / this.canvasHeight, 0.1, 1000);\n    this.camera.position.z = offset;\n\n  }\n\n  checkCanvasSize () {\n\n    let cv = document.getElementById('home-display');\n\n    this.canvasWidth = cv.offsetWidth;\n    this.canvasHeight = cv.offsetHeight;\n\n    if (this.renderer) this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.camera) {\n      this.camera.aspect = this.canvasWidth / this.canvasHeight;\n      this.camera.updateProjectionMatrix();\n    }\n\n  }\n\n  tick () {\n\n    this.animationId = requestAnimationFrame(this.tick);\n\n    this.renderer.render(this.scene, this.camera);\n\n    this.dt += 1e-2;\n\n    if (this.dt > 2 * Math.PI * 1e6) {\n      this.dt -= 2 * Math.PI * 1e6;\n    }\n\n    this.animation.update(this.dt);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Home/Canvas/canvasManager.js","<template>\n\n    <canvas></canvas>\n\n</template>\n\n<script>\n\nimport CanvasManager from './canvasManager';\n\nlet canvasManager;\n\nexport default {\n  mounted () {\n    const canvas = document.getElementById('home-canvas');\n    if (canvasManager) {\n      if (canvasManager.animationId > 0) {\n        cancelAnimationFrame(canvasManager.animationId);\n      }\n    }\n    canvasManager = new CanvasManager(canvas);\n  }\n}\n\n</script>\n\n<style>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home/Canvas/Canvas.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('canvas')}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0d7bdba2\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home/Canvas/Canvas.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0d7bdba2\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Canvas.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Canvas.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Canvas.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0d7bdba2\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Canvas.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home/Canvas/Canvas.vue\n// module id = null\n// module chunks = ","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"home-container\">\n      <b-row class=\"justify-content-md-center\">\n        <b-col>\n          <img class=\"home-image\" src=\"../../assets/erdos.png\">\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nimport Canvas from './Canvas/Canvas';\n\nexport default {\n  components: {\n    'home-canvas': Canvas\n  }\n}\n\n</script>\n\n<style>\n\n#home-container {\n  position: relative;\n  top: 15%;\n}\n\n.home-image {\n  max-width: 100%;\n  max-height: 100%;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Home/Home.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"home-container\"}},[_c('b-row',{staticClass:\"justify-content-md-center\"},[_c('b-col',[_c('img',{staticClass:\"home-image\",attrs:{\"src\":require(\"../../assets/erdos.png\")}})])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-edeb6088\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home/Home.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-edeb6088\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-edeb6088\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home/Home.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('br'),_vm._v(\" \"),_vm._l((_vm.animation.parameters),function(parameter){return _c('div',{key:parameter.label,staticClass:\"opengl2webgl-navpane-controls\",class:_vm.screenType},[_c('p',[_vm._v(\" \"+_vm._s(parameter.label)+\" \")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(parameter.currentValue),expression:\"parameter.currentValue\"}],staticClass:\"opengl2webgl-navpane-input\",attrs:{\"type\":\"number\",\"max\":parameter.maxValue,\"min\":parameter.minValue},domProps:{\"value\":(parameter.currentValue)},on:{\"blur\":function($event){_vm.resetInput(parameter)},\"input\":function($event){if($event.target.composing){ return; }_vm.$set(parameter, \"currentValue\", $event.target.value)}}}),_vm._v(\" \"),_c('br')])}),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"opengl2webgl-navpane-controls\",class:_vm.screenType},[_c('b-button',{on:{\"click\":function($event){_vm.activate(_vm.animation)}}},[_c('span',{staticClass:\"glyphicon glyphicon-play-circle opengl2webgl-navpane-button\"})]),_vm._v(\" \"),_c('b-button',{on:{\"click\":function($event){_vm.resetAnimation(_vm.animation)}}},[_c('span',{staticClass:\"glyphicon glyphicon-refresh opengl2webgl-navpane-button\"})]),_vm._v(\" \"),_c('b-button',{on:{\"click\":function($event){_vm.toFullScreen()}}},[_c('span',{staticClass:\"glyphicon glyphicon-move opengl2webgl-navpane-button\"})])],1),_vm._v(\" \"),_c('br')],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-186986bc\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-186986bc\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./NavpaneControls.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavpaneControls.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./NavpaneControls.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-186986bc\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./NavpaneControls.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue\n// module id = null\n// module chunks = ","<template>\n\n  <div>\n    <br>\n    <div v-for=\"parameter in animation.parameters\" :key=\"parameter.label\" class=\"opengl2webgl-navpane-controls\" :class='screenType'>\n      <p> {{parameter.label }} </p>\n      <input\n        class=\"opengl2webgl-navpane-input\"\n        type=\"number\"\n        :max=\"parameter.maxValue\"\n        :min=\"parameter.minValue\"\n        v-on:blur=\"resetInput(parameter)\"\n        v-model=\"parameter.currentValue\"/>\n      <br>\n    </div>\n    <br>\n    <div class=\"opengl2webgl-navpane-controls\" :class='screenType'>\n      <b-button v-on:click=\"activate(animation)\">\n        <span class=\"glyphicon glyphicon-play-circle opengl2webgl-navpane-button\"></span>\n      </b-button>\n      <b-button v-on:click=\"resetAnimation(animation)\">\n        <span class=\"glyphicon glyphicon-refresh opengl2webgl-navpane-button\"></span>\n      </b-button>\n      <b-button v-on:click=\"toFullScreen()\">\n        <span class=\"glyphicon glyphicon-move opengl2webgl-navpane-button\"></span>\n      </b-button>\n    </div>\n    <br>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['animation', 'screenType', 'activate', 'resetAnimation', 'toFullScreen', 'resetInput']\n}\n\n</script>\n\n<style>\n\n.opengl2webgl-navpane-controls {\n  text-align: left;\n}\n\n.opengl2webgl-navpane-controls.monitor {\n  text-align: center;\n}\n\n.opengl2webgl-navpane-input {\n  width: 80%;\n}\n\n.opengl2webgl-navpane-button {\n  font-size: 20px;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/OpenGL2WebGL/Navpane/NavpaneControls.vue","export default class Animation {\n\n  constructor (scene, camera, animation) {\n\n    this.scene = scene;\n    this.camera = camera;\n    this.parameters = animation.parameters;\n    this.name = animation.name;\n    this.dynamic = animation.dynamic;\n    this.controllable = animation.controllable;\n\n}\n\n  draw () {\n\n\t}\n\n  update () {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/animation.js","import * as THREE from 'three';\n\n/// //////////////////////////Styling//////////////////////////////////////\n\nexport function colorNodes (n, type) {\n\n  let color = null;\n\n  if (type === 'cool') {\n\n    let mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0x5dff00;\n        break;\n      case 1:\n        color = 0x1000ff;\n        break;\n      case 2:\n        color = 0xff00e1;\n        break;\n      case 3:\n        color = 0x009990;\n        break;\n\n    }\n\n  } else if (type === 'hot') {\n\n    let mod = n % 4;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0xffffff;\n        break;\n\n    }\n\n  } else {\n\n    let mod = n % 7;\n\n    switch (mod) {\n\n      case 0:\n        color = 0xff0000;\n        break;\n      case 1:\n        color = 0xff7200;\n        break;\n      case 2:\n        color = 0xf2ff00;\n        break;\n      case 3:\n        color = 0x5dff00;\n        break;\n      case 4:\n        color = 0x1000ff;\n        break;\n      case 5:\n        color = 0xff00e1;\n        break;\n      case 6:\n        color = 0xffffff;\n        break;\n\n    }\n\n  }\n\n  return color;\n\n}\n\n/// //////////////////////////WebGL Helper export Functions//////////////////////////////////////\n\nexport function phi (t, n) {\n\n  let p = 2 * Math.PI * t / n;\n\n  return p;\n\n}\n\nexport function polygon (center, radius, numVertices, theta, color, axis) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(this.numVertices * 3);\n\n  for (let i = 0; i < this.numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  let geometry = new THREE.BufferGeometry();\n\n  geometry.addAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  let material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n  if (axis === 'relative') {\n    this.line.position.set(this.center[0], this.center[1], this.center[2]);\n  }\n\n}\n\nexport function offsetStar (numVertices, center, radius, theta, offset, color) {\n\n  this.center = center;\n  this.radius = radius;\n  this.numVertices = numVertices;\n  this.theta = theta;\n  this.color = color;\n\n  this.vertices = new Float32Array(numVertices * 3);\n\n  for (let i = 0; i < numVertices; ++i) {\n\n    this.vertices[3 * i] = this.radius * Math.sin(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[0];\n    this.vertices[3 * i + 1] = this.radius * Math.cos(phi((i * (1 + offset)) % numVertices, numVertices) + theta) + center[1];\n    this.vertices[3 * i + 2] = this.center[2];\n\n  }\n\n  let geometry = new THREE.BufferGeometry();\n\n  geometry.addAttribute(\n    'position',\n    new THREE.BufferAttribute(this.vertices, 3)\n  );\n\n  let material = new THREE.LineBasicMaterial(\n    {\n      color: this.color\n    }\n  );\n\n  this.line = new THREE.LineLoop(geometry, material);\n\n}\n\nexport function Star (center, numStems, numSplits, radius, color) {\n\n  this.center = center;\n  this.numStems = numStems;\n  this.numSplits = numSplits;\n  this.radius = radius;\n  this.color = color;\n\n  this.stemGroup = new THREE.Group();\n  this.splitGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numStems; ++i) {\n\n    this.stemVertices = new Float32Array(2 * 3);\n\n    this.stemVertices[0] = this.center[0];\n    this.stemVertices[1] = this.center[1];\n    this.stemVertices[2] = this.center[2];\n    this.stemVertices[3] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n    this.stemVertices[4] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n    this.stemVertices[5] = this.center[2];\n\n    let stemGeometry = new THREE.BufferGeometry();\n\n    stemGeometry.addAttribute(\n      'position',\n      new THREE.BufferAttribute(this.stemVertices, 3)\n    );\n\n    let stemMaterial = new THREE.LineBasicMaterial(\n      {\n        color: this.color\n      }\n    );\n\n    let line = new THREE.Line(stemGeometry, stemMaterial);\n\n    this.stemGroup.add(line);\n\n    for (let j = 0; j < this.numSplits; ++j) {\n\n      this.splitVertices = new Float32Array(2 * 3);\n\n      this.splitVertices[0] = this.radius * Math.sin(phi(i, this.numStems)) + this.center[0];\n      this.splitVertices[1] = this.radius * Math.cos(phi(i, this.numStems)) + this.center[1];\n      this.splitVertices[2] = this.center[2];\n      this.splitVertices[3] = this.radius * Math.sin(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[0];\n      this.splitVertices[4] = this.radius * Math.cos(phi(i, this.numStems) + (j + 2) * Math.PI / 4) / 2 + this.center[1];\n      this.splitVertices[5] = this.center[2];\n\n      let splitGeometry = new THREE.BufferGeometry();\n\n      splitGeometry.addAttribute(\n        'position',\n        new THREE.BufferAttribute(this.splitVertices, 3)\n      );\n\n      let splitMaterial = new THREE.LineBasicMaterial(\n        {\n          color: this.color\n        }\n      );\n\n      let line = new THREE.Line(splitGeometry, splitMaterial);\n\n      this.splitGroup.add(line);\n\n    }\n\n  }\n\n}\n\nexport function Flower (rootPosition, pistolPosition, petalRadius, numPetals, numNodes, petalColor, pistolColor) {\n\n  this.rootPosition = rootPosition;\n  this.pistolPosition = pistolPosition;\n  this.petalRadius = petalRadius;\n  this.numPetals = numPetals;\n  this.numNodes = numNodes;\n  this.petalColor = petalColor;\n  this.pistolColor = pistolColor;\n\n  this.stemVertices = new Float32Array(2 * 3);\n\n  this.stemVertices[0] = this.rootPosition[0];\n  this.stemVertices[1] = this.rootPosition[1];\n  this.stemVertices[2] = this.rootPosition[2];\n  this.stemVertices[3] = this.pistolPosition[0];\n  this.stemVertices[4] = this.pistolPosition[1];\n  this.stemVertices[5] = this.pistolPosition[2];\n\n  let stemGeometry = new THREE.BufferGeometry();\n\n  stemGeometry.addAttribute(\n    'position',\n    new THREE.BufferAttribute(this.stemVertices, 3)\n  );\n\n  let stemMaterial = new THREE.LineBasicMaterial(\n    {\n      color: colorNodes(3)\n    }\n  );\n\n  this.stem = new THREE.Line(stemGeometry, stemMaterial);\n\n  this.petalGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPetals; ++i) {\n\n    let petalCenter = [\n      this.petalRadius * Math.cos(phi(i, this.numPetals)) + this.pistolPosition[0],\n      this.petalRadius * Math.sin(phi(i, this.numPetals)) + this.pistolPosition[1],\n      this.pistolPosition[2]\n    ];\n\n    let petal = new polygon(petalCenter, this.petalRadius, this.numNodes, phi(i, this.numPetals), this.petalColor);\n\n    this.petalGroup.add(petal.line);\n\n  }\n\n  let pistolGeometry = new THREE.CircleBufferGeometry(this.petalRadius / 3, 32);\n  let pistolMaterial = new THREE.MeshBasicMaterial({color: this.pistolColor, wireframe: false});\n\n  this.pistol = new THREE.Mesh(pistolGeometry, pistolMaterial);\n  this.pistol.position.set(\n    this.pistolPosition[0],\n    this.pistolPosition[1],\n    this.pistolPosition[2]\n  );\n\n}\n\nexport function sacredGeometry (center, numPolygons, numNodes, polygonRadius, globalRadius, color) {\n\n  this.center = center;\n  this.numPolygons = numPolygons;\n  this.numNodes = numNodes;\n  this.polygonRadius = polygonRadius;\n  this.globalRadius = globalRadius;\n  this.color = color;\n\n  this.geomGroup = new THREE.Group();\n\n  for (let i = 0; i < this.numPolygons; ++i) {\n\n    let polyCenter = [\n      this.globalRadius * Math.cos(phi(i, this.numPolygons)) + this.center[0],\n      this.globalRadius * Math.sin(phi(i, this.numPolygons)) + this.center[1],\n      this.center[2]\n    ];\n\n    let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, phi(i, this.numNodes), this.color);\n\n    this.geomGroup.add(poly.line);\n\n  }\n\n}\n\nexport class Graph {\n\n  constructor (partitionSizes, center, radius, vertexRadius, type) {\n\n    this.partitionSizes = partitionSizes;\n    this.center = center;\n    this.radius = radius;\n    this.vertexRadius = vertexRadius;\n    this.type = type;\n    this.numVertices = 0;\n    this.numEdges = 0;\n    this.vertexGroup = new THREE.Group();\n    this.edgeGroup = new THREE.Group();\n\n  }\n\n  createVertexSet (color) {\n\n    for (let i = 0; i < this.partitionSizes.length; ++i) {\n      this.numVertices = this.numVertices + this.partitionSizes[i];\n    }\n\n    let vertexCenter = [0, 0, 0];\n\n    if (color === 'sequence') {\n\n      for (let i = 0; i < this.numVertices; ++i) {\n\n        if (this.type === 'ball') {\n\n          let vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius, 32);\n          let vertexMaterial = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n          let vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n          this.vertexGroup.add(vertex);\n\n        } else if (this.type === 'point') {\n\n          let vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n          this.vertexGroup.add(vertex.line);\n\n        }\n\n      }\n\n    } else if (color === 'partite') {\n\n      for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n        for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n          if (this.type === 'ball') {\n\n            let vertexGeometry = new THREE.CircleBufferGeometry(this.vertexRadius / this.numVertices, 32);\n            let vertexMaterial = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n            let vertex = new THREE.Mesh(vertexGeometry, vertexMaterial);\n\n            this.vertexGroup.add(vertex);\n\n          } else if (this.type === 'point') {\n\n            let vertex = new polygon(vertexCenter, this.vertexRadius, 100, phi(i, 100), colorNodes(i));\n\n            this.vertexGroup.add(vertex.line);\n\n          }\n\n        }\n\n      }\n\n    }\n\n  }\n\n  // assign coords to vertices in graph\n  assignVertexCoordinates (layout, angle = 0) {\n\n     if (layout === 'polar') {\n\n         let n = this.numVertices;\n\n         for (let i = 0; i < n; ++i) {\n\n           this.vertexGroup.children[i].position.set(\n             this.center[0] + this.radius * Math.cos(phi(i, n) + angle),\n             this.center[1] + this.radius * Math.sin(phi(i, n) + angle),\n             0\n           );\n\n         }\n\n     } else if (layout === 'partite') {\n\n         let count = 0;\n         let numSides = this.partitionSizes.length;\n\n         if (numSides === 1) {\n\n           let sideScale = (2 * this.radius / (this.partitionSizes[0] + 1));\n\n           if (this.partitionSizes[0] % 2 === 1) {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 let sideSpacing = j - Math.floor(this.partitionSizes[0] / 2)\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           } else {\n\n               for (let j = 0; j < this.partitionSizes[0]; ++j) {\n\n                 let sideSpacing = (j + ((1 - this.partitionSizes[0]) / 2));\n\n                 this.vertexGroup.children[j].position.set(\n                   this.center[0] + sideScale * sideSpacing * Math.sin(-angle),\n                   this.center[1] + sideScale * sideSpacing * Math.cos(-angle),\n                   0\n                 );\n\n               }\n\n           }\n\n         } else {\n\n           for (let i = 0; i < numSides; ++i) {\n\n               let sideAngle = phi(i, numSides) + angle;\n               let sideScale = (2 * this.radius * Math.sin(Math.PI / numSides) / (this.partitionSizes[i] + 1));\n\n               if (this.partitionSizes[i] % 2 === 1) {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     let sideSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               } else {\n\n                   for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     let sideSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       this.center[0] + this.radius * Math.cos(sideAngle) + sideScale * sideSpacing * Math.sin(-sideAngle),\n                       this.center[1] + this.radius * Math.sin(sideAngle) + sideScale * sideSpacing * Math.cos(-sideAngle),\n                       0\n                     );\n\n                   }\n\n               }\n\n               count += this.partitionSizes[i];\n\n           }\n\n         }\n\n     } else if (layout === 'concentric') {\n\n         let count = 0;\n\n         for (let i = 0; i < this.partitionSizes.length; ++i) {\n\n             for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                 if (this.partitionSizes[i] !== 1) {\n\n                   this.vertexGroup.children[count + j].position.set(\n                     this.center[0] + this.radius * (this.radius + i) * Math.cos(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     this.center[1] + this.radius * (this.radius + i) * Math.sin(phi(j, this.partitionSizes[i]) + angle) / this.partitionSizes.length,\n                     0\n                   );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     } else if (layout === 'grid') {\n\n         let count = 0;\n         let numLevels = this.partitionSizes.length;\n\n         for (let i = 0; i < numLevels; ++i) {\n\n             let levelScale = (2 * this.radius * Math.sin(Math.PI / numLevels) / (this.partitionSizes[i] + 1));\n             let interLevelSpacing = (i - Math.floor(numLevels / 2)) / numLevels;\n\n             if (this.partitionSizes[i] % 2 === 1) {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                   let intraLevelSpacing = j - Math.floor(this.partitionSizes[i] / 2)\n\n                   this.vertexGroup.children[count + j].position.set(\n                     levelScale * intraLevelSpacing,\n                     interLevelSpacing,\n                     0\n                   );\n\n                 }\n\n             } else {\n\n                 for (let j = 0; j < this.partitionSizes[i]; ++j) {\n\n                     let intraLevelSpacing = (j + ((1 - this.partitionSizes[i]) / 2));\n\n                     this.vertexGroup.children[count + j].position.set(\n                       levelScale * intraLevelSpacing,\n                       interLevelSpacing,\n                       0\n                     );\n\n                 }\n\n             }\n\n             count += this.partitionSizes[i];\n\n         }\n\n     }\n\n  }\n\n  addEdges (type) {\n\n    let n = this.numVertices;\n\n     if (type === 'complete') {\n\n         for (let i = 0; i < n - 1; ++i) {\n\n           for (let j = i + 1; j < n; ++j) {\n\n             let edgeGeometry = new THREE.Geometry();\n\n             let edgeMaterial = new THREE.LineBasicMaterial(\n               {\n              \tcolor: 0xffffff\n               }\n             );\n\n             edgeGeometry.vertices.push(\n               this.vertexGroup.children[i].position,\n               this.vertexGroup.children[j].position\n             );\n\n             let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n             this.edgeGroup.add(edge);\n\n           }\n\n         }\n\n     } else if (type === 'cycle') {\n\n       for (let i = 0; i < n; ++i) {\n\n         let edgeGeometry = new THREE.Geometry();\n\n         let edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n          if (i < n - 1) {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[i + 1].position\n            );\n          } else {\n            edgeGeometry.vertices.push(\n              this.vertexGroup.children[i].position,\n              this.vertexGroup.children[0].position\n            );\n          }\n\n         let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'path') {\n\n       for (let i = 0; i < n - 1; ++i) {\n\n         let edgeGeometry = new THREE.Geometry();\n\n         let edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[i].position,\n           this.vertexGroup.children[i + 1].position\n         );\n\n         let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     } else if (type === 'wheel') {\n\n       for (let i = 1; i < n; ++i) {\n\n         let edgeGeometry = new THREE.Geometry();\n\n         let edgeMaterial = new THREE.LineBasicMaterial({\n            color: 0xffffff\n          });\n\n         edgeGeometry.vertices.push(\n           this.vertexGroup.children[0].position,\n           this.vertexGroup.children[i].position\n         );\n\n         let edge = new THREE.Line(edgeGeometry, edgeMaterial);\n\n         this.edgeGroup.add(edge);\n\n       }\n\n     }\n\n     this.numEdges = this.edgeGroup.length;\n\n  }\n\n  initialize (type = 'null', layout = 'polar', angle = 0, color = 'partite') {\n    this.createVertexSet(color);\n    this.assignVertexCoordinates(layout, angle);\n    this.addEdges(type);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/utils.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Blanket extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      let geometry = new THREE.CircleBufferGeometry((10 / (2 * this.numPolygons - i + 1)), this.numFaces);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      mesh.rotateZ(Math.PI * i / 4);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/blanket.js","import Animation from '../../animation';\n\nimport {\n\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class BounceRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n    let col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      let r = this.radius * i / 10;\n      let poly = new polygon(x, r, 100, 0, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].scale.set(Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), Math.cos(t) * Math.sin(phi(i, 100) + 2 * t), 1);\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/bounceRipple.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthedad extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n\tdraw () {\n\n\t\tlet center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1],\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t    for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t    }\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.scene.position.set(0, 0, -5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].scale.set(1 + Math.cos((i % (this.numCenters * this.numPolygons)) * t / 75), 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75), 1);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthedad.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tlet x = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tx[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\tx[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n            let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n            this.scene.add(poly.line);\n\n          }\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -4);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-3;\n      } else {\n       this.scene.children[i].rotation.z += 1e-3;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum2.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum3 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n        for (let j = 0; j < i; ++j) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\t2 * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t2 * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          let poly = new polygon(polyCenter, 2, this.numNodes, 0, colorNodes(i * j));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -2.5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum3.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum4 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numNodes; ++i) {\n\n      for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)),\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)),\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3));\n\t\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotation.z -= 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      } else {\n\t\t\t\tthis.scene.children[i].rotation.z += 7.5e-4;\n        this.scene.children[i].scale.set(2 + (1.3 * Math.cos(t / 3)), 2 + (1.3 * Math.cos(t / 3)), 1);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum4.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum5 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tlet polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, -3);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateX(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-1e-2);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum5.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum6 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tlet polyCenter = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numPolygons)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numPolygons)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\tthis.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-2);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-3);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum6.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum7 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numPolygons; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numPolygons; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tthis.globalRadius * (Math.sin(phi(i, this.numPolygons)) + Math.cos(phi(j, this.numNodes))),\n\t\t\t\t\t\tthis.globalRadius * (Math.cos(phi(i, this.numPolygons)) + Math.sin(phi(j, this.numNodes))),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(3), 'relative');\n\t\t\t\tthis.scene.add(poly.line);\n\n\t\t\t}\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[i].rotateZ(-5e-4);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum7.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum8 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n\t\tlet center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t    for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t    }\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].rotateZ(1e-3);\n\n\t\t\tthis.scene.children[i].position.set(0, 0, Math.sin((i % (this.numLayers * this.numPolygons)) * t / 150));\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum8.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Chrysanthemum9 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCenters = parseFloat(this.parameters.numCenters.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 8);\n\n  }\n\n  draw () {\n\n\t\tlet center = [-0.1, 0.1, 0];\n\n\t\tfor (let i = 0; i < this.numCenters; ++i) {\n\n\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numCenters)),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numCenters)),\n\t\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tlet polyClusterCenter = [\n\t\t\t\t\tj * center[0],\n\t\t\t\t\tj * center[1]\n\t\t\t\t];\n\n\t\t    for (let k = 0; k < this.numPolygons; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\tpolyClusterCenter[0] * Math.sin(phi(k, this.numPolygons)) + polyCenterOffset[0],\n\t\t\t\t\t\tpolyClusterCenter[1] * Math.cos(phi(k, this.numPolygons)) + polyCenterOffset[1],\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(j));\n\n\t\t\t\t\tthis.scene.add(poly.line);\n\n\t\t    }\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tthis.scene.children[i].position.set(0, 0, 1 + Math.sin((i % (this.numCenters * this.numPolygons)) * t / 75));\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/chrysanthemum9.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Clam extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t  let phi = [];\n\n\t  for (let i = 0; i <= this.numRidges; ++i) {\n\t    phi.push(2 * Math.PI * i / this.numRidges);\n\t  }\n\n\t  let vertices = new Float32Array(phi.length * 3);\n\n    for (let i = 0; i < phi.length; ++i) {\n      vertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n      vertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n      vertices[3 * i + 2] = 0;\n    }\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(vertices, 3)\n\t  );\n\n\t  let material = new THREE.LineBasicMaterial(\n\t    {\n\t      color: 0x00ffff\n\t    }\n\t  );\n\n\t  let line = new THREE.Line(geometry, material);\n\n\t  this.scene.add(line);\n\n\t  for (let i = 0; i < this.numRidges; ++i) {\n\n\t    let endpoints = new Float32Array(6);\n\n\t    endpoints[0] = 0;\n\t    endpoints[1] = 0;\n\t    endpoints[2] = 0;\n\t    endpoints[3] = vertices[(3 * i) + 0];\n\t    endpoints[4] = vertices[(3 * i) + 1];\n\t    endpoints[5] = vertices[(3 * i) + 2];\n\n\t    let geometry = new THREE.BufferGeometry();\n\n\t    geometry.addAttribute(\n\t      'position',\n\t      new THREE.BufferAttribute(endpoints, 3)\n\t    );\n\n\t    let material = new THREE.LineBasicMaterial(\n\t      {\n\t        color: 0x00ffff\n\t      }\n\t    );\n\n\t    let line = new THREE.Line(geometry, material);\n\n\t    this.scene.add(line);\n\n  \t\t}\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/clam.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Collide0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      let geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: true});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\n        this.scene.children[i].position.z += (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z -= 0.01 * Math.cos(t);\n\n      } else {\n\n        this.scene.children[i].position.z -= (0.005 + (i / 1000)) * Math.cos(t);\n        this.scene.children[i].rotation.z += 0.01 * Math.sin(t);\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/collide0scope.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class ConcentricPolygons extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = this.numPolygons; i >= 1; i--) {\n\n      let geometry = new THREE.CircleBufferGeometry((10 / (this.numPolygons - i + 1)), this.numFaces);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * (this.scene.children.length - i) * Math.sin(t / 4);\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons.js","import Animation from '../../animation';\n\nimport {\n\n\tpolygon\n\n} from '../../../utils';\n\nexport default class ConcentricPolygons2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n    let t = 0;\n    let col = 0xf00a00;\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      let r = this.radius * i / this.numPolygons;\n      let poly = new polygon(x, r, i + 2, t, col);\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z = Math.sin(i) * t / 2;\n\t\t\t} else {\n        this.scene.children[i].rotation.z = Math.sin(-i) * t / 2;\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/concentricPolygons2.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Fauxlidoscope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSteps = parseFloat(this.parameters.numSteps.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n\t\tthis.cameraAmplitude = (animation.cameraZoomMax - animation.cameraZoomMin) / 2;\n\t\tthis.cameraDisplacement = (animation.cameraZoomMax + animation.cameraZoomMin) / 2\n\n  }\n\n  draw () {\n\n\t\tlet concentricPolygonGroup = new THREE.Group();\n\n    for (let i = 0; i < this.numLayers; ++i) {\n\n\t\t\tlet layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tfor (let k = 1; k <= this.numSteps; ++k) {\n\n\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t\tthis.numSteps * i * (this.globalRadius / k) * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n\t\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius / k, this.numNodes, Math.PI / 2, colorNodes(3));\n\n\t\t\t\t\tlayerGroup.add(poly.line);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconcentricPolygonGroup.add(layerGroup);\n\n    }\n\n\t\tthis.scene.add(concentricPolygonGroup);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-2e-3 * phi(1, this.numNodes) * (i - Math.sin(t)) / (i + 1));\n      }\n\n    }\n\n\t\tthis.camera.position.set(0, 0, this.cameraAmplitude * Math.sin(1e-1 * t + phi(3, 4)) + this.cameraDisplacement);\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/fauxlidoscope.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tFlower\n\n} from '../../../utils';\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numFlowers = parseFloat(this.parameters.numFlowers.currentValue);\n\t\tthis.numPetals = parseFloat(this.parameters.numPetals.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.petalRadius = parseFloat(this.parameters.petalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tlet root = [0, -this.numFlowers, 0];\n\n\t\tlet pistol = [0, 0, 0];\n\n\t\tfor (let i = 0; i < this.numFlowers; ++i) {\n\n\t\t\tif (this.numFlowers % 2 === 0) {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - ((this.numFlowers - 1) / 2)),\n\t\t\t\t\t(this.numFlowers - 1) / 2,\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tpistol = [\n\t\t\t\t\t4 * this.petalRadius * (i - Math.floor(this.numFlowers / 2)),\n\t\t\t\t\tMath.floor(this.numFlowers / 2),\n\t\t\t\t\t0\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tlet flower = new Flower(root, pistol, this.petalRadius, this.numPetals, this.numNodes, colorNodes(i), colorNodes(2));\n\t\t\tthis.scene.add(flower.stem);\n\t\t\tthis.scene.add(flower.petalGroup);\n\t\t\tthis.scene.add(flower.pistol);\n\n\t\t\tthis.scene.position.set(0, 0, 1 - this.numFlowers);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/flowers.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Gyr0scope extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 0; i < this.numCircles; ++i) {\n\n      let geometry = new THREE.CircleBufferGeometry(1 + (i / (10 * this.numCircles)), 10);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: true});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n\t\tthis.scene.position.set(0, 0, 1.5);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      let r = 1;\n\n\t\t\tthis.scene.children[i].scale.set(1, r * Math.cos(t / 2), i + 1);\n\n      if (i % 2 === 0) {\n        this.scene.children[i].rotation.z -= 1e-2 * this.rate * i * Math.cos(i * t);\n\n      } else {\n        this.scene.children[i].rotation.z += 1e-2 * this.rate * i * Math.sin(i * t);\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/gyr0scope.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Pearl extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numRidges = parseFloat(this.parameters.numRidges.currentValue);\n    this.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t  let phi = [];\n\n\t  for (let i = 0; i <= this.numRidges; ++i) {\n\t    phi.push(2 * Math.PI * i / this.numRidges);\n\t  }\n\n\t  let vertices = new Float32Array(phi.length * 3);\n\n\t\tfor (let i = 0; i < phi.length; ++i) {\n      vertices[3 * i + 0] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.cos(phi[i]);\n      vertices[3 * i + 1] = this.radius * Math.sqrt(1 - Math.pow(Math.cos(phi[i]), 2)) * Math.sin(phi[i]);\n      vertices[3 * i + 2] = 0;\n    }\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(vertices, 3)\n\t  );\n\n\t  let material = new THREE.LineBasicMaterial(\n\t    {\n\t      color: 0x00ffff\n\t    }\n\t  );\n\n\t  let line = new THREE.Line(geometry, material);\n\n\t  this.scene.add(line);\n\n\t  for (let i = 0; i < this.numRidges; ++i) {\n\n\t    let endpoints = new Float32Array(6);\n\n\t    endpoints[0] = 0;\n\t    endpoints[1] = 0;\n\t    endpoints[2] = 0;\n\t    endpoints[3] = vertices[(3 * i) + 0];\n\t    endpoints[4] = vertices[(3 * i) + 1];\n\t    endpoints[5] = vertices[(3 * i) + 2];\n\n\t    let geometry = new THREE.BufferGeometry();\n\n\t    geometry.addAttribute(\n\t      'position',\n\t      new THREE.BufferAttribute(endpoints, 3)\n\t    );\n\n\t    let material = new THREE.LineBasicMaterial(\n\t      {\n\t        color: 0x00ffff\n\t      }\n\t    );\n\n\t    let line = new THREE.Line(geometry, material);\n\n\t    this.scene.add(line);\n\n\t  }\n\n\t  let pearlGeometry = new THREE.CircleBufferGeometry(this.radius / 10, 32);\n\n\t  let pearlMaterial = new THREE.MeshBasicMaterial(\n\t    {\n\t      color: 0xffffff\n\t    }\n\t  );\n\n\t  let pearl = new THREE.Mesh(pearlGeometry, pearlMaterial);\n\n\t  this.scene.add(pearl);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pearl.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes\n\n} from '../../../utils';\n\nexport default class Pinwheel extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numFaces = parseFloat(this.parameters.numFaces.currentValue);\n\n  }\n\n  draw () {\n\n    for (let i = 2 * this.numPolygons; i >= 1; i--) {\n\n      let geometry = new THREE.CircleBufferGeometry((20 / (2 * this.numPolygons - (i / 2) + 1)), this.numFaces);\n      let material = new THREE.MeshBasicMaterial({color: colorNodes(i + 1), wireframe: false});\n      let mesh = new THREE.Mesh(geometry, material);\n\n      this.scene.add(mesh);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotation.z = 2 * t * ((this.scene.children.length / 2) - i) * Math.PI * i / 160;\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/pinwheel.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tsacredGeometry\n\n} from '../../../utils';\n\nexport default class Snowflake extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\n\t\tthis.camera.position.set(0, 0, 10);\n\n  }\n\n  draw () {\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tlet layerGroup = new THREE.Group();\n\n\t\t\tfor (let j = 0; j < i * this.numLanes; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes * i) + phi(1, 2 * this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet geom = new sacredGeometry(polyCenter, this.numPolygons, this.numNodes, this.polygonRadius, this.globalRadius, colorNodes(3));\n\n\t\t\t\tlayerGroup.add(geom.geomGroup);\n\n\t\t\t}\n\n\t\t\tthis.scene.add(layerGroup);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n\t\t\tfor (let j = 0; j < this.scene.children[i].children.length; ++j) {\n\n\t      if (j % 2 === 0) {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, this.rate * 1e-2 * t);\n\t      } else {\n\t\t\t\t\tthis.scene.children[i].children[j].rotation.set(0, 0, -this.rate * 1e-2 * t);\n\t      }\n\n\t\t\t}\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/snowflake.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class SloshRipple extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n\n    for (let i = 1; i <= this.numPolygons; ++i) {\n\n      let r = this.radius * i / 10;\n      let poly = new polygon(x, r, 100, 0, colorNodes(i - 1));\n\n      this.scene.add(poly.line);\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\t\t\tif (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].scale.set(Math.cos(phi(i, 100) + t / 100), Math.cos(phi(i, 100) + t / 100), 1);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[i].scale.set(Math.sin(phi(i, 100) + t / 100), Math.sin(phi(i, 100) + t / 100), 1);\n\t\t\t}\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/sloshRipple.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tStar\n\n} from '../../../utils';\n\nexport default class StarryNight extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numStars = parseFloat(this.parameters.numStars.currentValue);\n\t\tthis.numStems = parseFloat(this.parameters.numStems.currentValue);\n\t\tthis.numSplits = parseFloat(this.parameters.numSplits.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numStars; ++i) {\n\n\t\t\tlet starCenter = [\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.cos(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius) * Math.sin(phi(i, this.numStars)),\n\t\t\t\t(Math.random() * this.radius - this.radius)\n\t\t\t];\n\n\t\t\tlet starRadius = Math.abs(Math.random() - 0.5);\n\n\t\t\tlet star = new Star(starCenter, this.numStems, this.numSplits, starRadius, colorNodes(i, 'hot'));\n\n\t\t\tthis.scene.add(star.stemGroup);\n\t\t\tthis.scene.add(star.splitGroup);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/starryNight.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class WrigglingDonut extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n    let x = [0, 0, 0];\n\n    for (let i = 1; i < this.numNodes; ++i) {\n\n        for (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\t\tx = [\n          \tthis.globalRadius * (Math.cos(phi(i, this.numNodes)) + Math.cos(phi(j, this.numNodes)) * Math.sin(phi(i, this.numPolygons))),\n          \tthis.globalRadius * (Math.sin(phi(i, this.numNodes)) + Math.sin(phi(j, this.numNodes)) * Math.cos(phi(i, this.numPolygons))),\n\t\t\t\t\t\t0\n\t\t\t\t\t];\n\n          let poly = new polygon(x, this.polygonRadius, this.numNodes, 0, colorNodes(1));\n          this.scene.add(poly.line);\n\n      }\n\n    }\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n      this.scene.children[i].rotateZ(-10 * (Math.sin(t / 10) + Math.cos(t / 10)));\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/art/wrigglingDonut.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Mosaic extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numPolygons = parseFloat(this.parameters.numPolygons.currentValue);\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tlet polyClusterCenter = [\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t];\n\n\t\t\tfor (let j = 0; j < this.numNodes; ++j) {\n\n\t\t\t\tlet polyCenterOffset = [\n\t\t\t\t\tthis.polygonRadius * Math.cos(phi(j, this.numNodes)),\n\t\t\t\t\tthis.polygonRadius * Math.sin(phi(j, this.numNodes)),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tfor (let k = 0; k < this.numLayers; ++k) {\n\n\t\t\t    for (let l = 0; l < this.numPolygons; ++l) {\n\n\t\t\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t\tk * (polyClusterCenter[0] + polyCenterOffset[0]) * Math.sin(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\tk * (polyClusterCenter[1] + polyCenterOffset[1]) * Math.cos(phi(l, this.numPolygons)),\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t];\n\n\t\t\t      let poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, 0, colorNodes(i, 'cool'), 'relative');\n\t\t\t      this.scene.add(poly.line);\n\n\t\t\t    }\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children.length; ++i) {\n\n      if (i % 2 === 0) {\n\t\t\t\tthis.scene.children[i].position.set(0, Math.sin(t / 10) / this.polygonRadius, 0);\n      } else {\n\t\t\t\tthis.scene.children[i].position.set(0, -Math.sin(t / 10) / this.polygonRadius, 0);\n      }\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class Mosaic2 extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.numLanes = parseFloat(this.parameters.numLanes.currentValue);\n\t\tthis.polygonRadius = parseFloat(this.parameters.polygonRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\n  }\n\n  draw () {\n\n\t\tlet group1 = new THREE.Group();\n\t\tlet group2 = new THREE.Group();\n\n    for (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(3), 'relative');\n\n\t\t\t\tgroup1.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tfor (let i = 1; i <= this.numLayers; ++i) {\n\n\t\t\tfor (let j = 0; j < this.numLanes; ++j) {\n\n\t\t\t\tlet polyCenter = [\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.cos(phi(j, this.numLanes)),\n\t\t\t\t\t\t2 * i * this.globalRadius * Math.sin(phi(j, this.numLanes)),\n\t\t\t\t\t\t0\n\t\t\t\t];\n\n\t\t\t\tlet poly = new polygon(polyCenter, this.polygonRadius, this.numNodes, Math.PI / 2, colorNodes(4));\n\n\t\t\t\tgroup2.add(poly.line);\n\n\t\t\t}\n\n    }\n\n\t\tthis.scene.add(group1);\n\t\tthis.scene.add(group2);\n\n  }\n\n  update (t) {\n\n    for (let i = 0; i < this.scene.children[0].children.length; ++i) {\n\n      if (i % (2) === 0) {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(1e-3);\n      } else {\n\t\t\t\tthis.scene.children[0].children[i].rotateZ(-1e-3);\n      }\n\n    }\n\n\t\tfor (let i = 0; i < this.scene.children[1].children.length; ++i) {\n\n\t\t\tif (i % (2) === 0) {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t} else {\n\t\t\t\tthis.scene.children[1].children[i].rotateZ(-1e-3);\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/mosaic2.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\toffsetStar\n\n} from '../../../utils';\n\nexport default class OffsetStar extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.offset = parseFloat(this.parameters.offset.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t}\n\n\tdraw () {\n\n\t  let x = [0, 0, 0];\n\t  let star = new offsetStar(this.numVertices, x, this.radius, 0, this.offset, this.color);\n\n\t  this.scene.add(star.line);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/offsetStar.js","// art\nimport Blanket from './humble_beginnings/art/blanket';\nimport BounceRipple from './humble_beginnings/art/bounceRipple';\nimport Chrysanthedad from './humble_beginnings/art/chrysanthedad';\nimport Chrysanthemum from './humble_beginnings/art/chrysanthemum';\nimport Chrysanthemum2 from './humble_beginnings/art/chrysanthemum2';\nimport Chrysanthemum3 from './humble_beginnings/art/chrysanthemum3';\nimport Chrysanthemum4 from './humble_beginnings/art/chrysanthemum4';\nimport Chrysanthemum5 from './humble_beginnings/art/chrysanthemum5';\nimport Chrysanthemum6 from './humble_beginnings/art/chrysanthemum6';\nimport Chrysanthemum7 from './humble_beginnings/art/chrysanthemum7';\nimport Chrysanthemum8 from './humble_beginnings/art/chrysanthemum8';\nimport Chrysanthemum9 from './humble_beginnings/art/chrysanthemum9';\nimport Clam from './humble_beginnings/art/clam';\nimport Collide0scope from './humble_beginnings/art/collide0scope';\nimport ConcentricPolygons from './humble_beginnings/art/concentricPolygons';\nimport ConcentricPolygons2 from './humble_beginnings/art/concentricPolygons2';\nimport Fauxlidoscope from './humble_beginnings/art/fauxlidoscope';\nimport Flowers from './humble_beginnings/art/flowers';\nimport Gyr0scope from './humble_beginnings/art/gyr0scope';\nimport Pearl from './humble_beginnings/art/pearl';\nimport Pinwheel from './humble_beginnings/art/pinwheel';\nimport Snowflake from './humble_beginnings/art/snowflake';\nimport SloshRipple from './humble_beginnings/art/sloshRipple';\nimport StarryNight from './humble_beginnings/art/starryNight';\nimport WrigglingDonut from './humble_beginnings/art/wrigglingDonut';\n\n// math\nimport Mosaic from './humble_beginnings/math/mosaic';\nimport Mosaic2 from './humble_beginnings/math/mosaic2';\nimport OffsetStar from './humble_beginnings/math/offsetStar';\nimport SacredCircles from './humble_beginnings/math/sacredCircles';\nimport Unoriginal from './humble_beginnings/math/unoriginal';\n\n// physics\nimport SineWave from './humble_beginnings/physics/sineWave';\n\n// shapes\nimport Circle from './humble_beginnings/shapes/circle';\nimport Cube from './humble_beginnings/shapes/cube';\nimport Polygon from './humble_beginnings/shapes/polygon';\nimport Rectangle from './humble_beginnings/shapes/rectangle';\nimport Triangle from './humble_beginnings/shapes/triangle';\n\n// simulations\nimport Amparo from './simulations/amparo';\nimport Andorinha from './simulations/andorinha';\nimport Antigua from './simulations/antigua';\nimport Batidinha from './simulations/batidinha';\nimport Bicardi from './simulations/bicardi';\nimport Blouse from './simulations/blouse';\nimport Brazil from './simulations/brazil';\nimport Choro from './simulations/choro';\nimport Dialogo from './simulations/dialogo';\nimport Flower from './simulations/flower';\nimport Games from './simulations/games';\nimport Lamento from './simulations/lamento';\nimport Look from './simulations/look';\nimport Mojave from './simulations/mojave';\nimport Sabia from './simulations/sabia';\nimport Tereza from './simulations/tereza';\nimport Triste from './simulations/triste';\nimport Wave from './simulations/wave';\n\nconst ANIMATION_MAP = {\n  // art\n  'blanket': Blanket,\n  'bounce ripple': BounceRipple,\n  'chrysanthedad': Chrysanthedad,\n  'chrysanthemum': Chrysanthemum,\n  'chrysanthemum2': Chrysanthemum2,\n  'chrysanthemum3': Chrysanthemum3,\n  'chrysanthemum4': Chrysanthemum4,\n  'chrysanthemum5': Chrysanthemum5,\n  'chrysanthemum6': Chrysanthemum6,\n  'chrysanthemum7': Chrysanthemum7,\n  'chrysanthemum8': Chrysanthemum8,\n  'chrysanthemum9': Chrysanthemum9,\n  'collide': Collide0scope,\n  'concentric polygons': ConcentricPolygons,\n  'concentric polygons 2': ConcentricPolygons2,\n  'fauxlidoscope': Fauxlidoscope,\n  'flowers': Flowers,\n  'gyro': Gyr0scope,\n  'pinwheel': Pinwheel,\n  'snowflake': Snowflake,\n  'slosh ripple': SloshRipple,\n  'starry night': StarryNight,\n  'wriggling donut': WrigglingDonut,\n  // math\n  'mosaic': Mosaic,\n  'mosaic2': Mosaic2,\n  'sacred circles': SacredCircles,\n  'star': OffsetStar,\n  'unoriginal': Unoriginal,\n  // physics\n  'sine wave': SineWave,\n  // shapes\n  'circle': Circle,\n  'clam': Clam,\n  'cube': Cube,\n  'pearl': Pearl,\n  'polystarter': Polygon,\n  'rectangle': Rectangle,\n  'triangle': Triangle,\n  // simulations\n  'amparo': Amparo,\n  'andorinha': Andorinha,\n  'antigua': Antigua,\n  'batidinha': Batidinha,\n  'bicardi': Bicardi,\n  'blouse': Blouse,\n  'brazil': Brazil,\n  'choro': Choro,\n  'dialogo': Dialogo,\n  'flower': Flower,\n  'games': Games,\n  'lamento': Lamento,\n  'look': Look,\n  'mojave': Mojave,\n  'sabia': Sabia,\n  'tereza': Tereza,\n  'triste': Triste,\n  'wave': Wave\n};\n\nexport function generateAnimation (scene, camera, animation) {\n\n  if (ANIMATION_MAP[animation.name]) {\n    return new ANIMATION_MAP[animation.name](scene, camera, animation);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/index.js","import Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi,\n\tpolygon\n\n} from '../../../utils';\n\nexport default class SacredCircles extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numLayers = parseFloat(this.parameters.numLayers.currentValue);\n\t\tthis.numCircles = parseFloat(this.parameters.numCircles.currentValue);\n\t\tthis.circleRadius = parseFloat(this.parameters.circleRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.color = colorNodes(0);\n\n\t\tthis.camera.position.set(0, 0, 4);\n\n\t}\n\n\tdraw () {\n\n\t  let center = [0, 0, 0];\n\n\t  for (let i = 0; i < this.numCircles; ++i) {\n\n\t    for (let j = 0; j < this.numLayers; ++j) {\n\n\t\t\t\tcenter = [\n\t      \tthis.globalRadius * (Math.cos(phi(i, this.numCircles)) + Math.sin(phi(j, this.numLayers))),\n\t      \tthis.globalRadius * (Math.sin(phi(i, this.numCircles)) + Math.cos(phi(j, this.numLayers))),\n\t\t\t\t\t0\n\t\t\t\t];\n\n\t      let poly = new polygon(center, this.circleRadius, 100, 0, this.color);\n\n\t      this.scene.add(poly.line);\n\n\t    }\n\n\t  }\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/sacredCircles.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nimport {\n\n\tcolorNodes,\n\tphi\n\n} from '../../../utils';\n\nexport default class Temp extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numNodes = parseFloat(this.parameters.numNodes.currentValue);\n\t\tthis.nodeRadius = parseFloat(this.parameters.nodeRadius.currentValue);\n\t\tthis.globalRadius = parseFloat(this.parameters.globalRadius.currentValue);\n\t\tthis.rate = parseFloat(this.parameters.rate.currentValue);\n\t\tthis.divisor = parseFloat(this.parameters.divisor.currentValue);\n\n  }\n\n  draw () {\n\n\t\tlet geometry = new THREE.CircleBufferGeometry(this.globalRadius, this.numNodes);\n\t\tlet material = new THREE.MeshBasicMaterial({color: 0xffffff, wireframe: true});\n\t\tlet mesh = new THREE.Mesh(geometry, material);\n\n\t\tthis.scene.add(mesh);\n\n\t\tif (this.numNodes > 100) {\n\t\t\tmesh.visible = false;\n\t\t}\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tlet geometry = new THREE.CircleBufferGeometry(this.nodeRadius / 10, 32);\n\t\t\tlet material = new THREE.MeshBasicMaterial({color: colorNodes(i), wireframe: false});\n\t\t\tlet mesh = new THREE.Mesh(geometry, material);\n\n\t\t\tmesh.position.set(\n\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)),\n\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)),\n\t\t\t\t0\n\t\t\t);\n\n\t\t\tthis.scene.add(mesh);\n\n\t\t}\n\n  }\n\n  update (t) {\n\n\t\tlet n = this.numNodes / this.divisor;\n\t\tlet rate = this.rate;\n\n\t\tfor (let i = 0; i < this.numNodes; ++i) {\n\n\t\t\tif (Math.floor(rate * t) >= i % n) {\n\n\t\t\t\tthis.scene.children[i + 1].position.set(\n\t\t\t\t\tthis.globalRadius * Math.cos(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\tthis.globalRadius * Math.sin(phi(i, this.numNodes)) * (1 - 2 * Math.abs(Math.sin(t - ((i % n) / rate)))),\n\t\t\t\t\t0\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/math/unoriginal.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class SineWave extends Animation {\n\n  constructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.amplitude = parseFloat(this.parameters.amplitude.currentValue);\n    this.frequency = parseFloat(this.parameters.frequency.currentValue);\n    this.phase = parseFloat(this.parameters.phase.currentValue);\n    this.displacement = parseFloat(this.parameters.displacement.currentValue);\n    this.numPoints = parseFloat(this.parameters.numPoints.currentValue);\n\n  }\n\n  draw () {\n\n    let node_x = [];\n    let node_y = [];\n\n    for (let i = -this.numPoints; i <= this.numPoints; ++i) {\n      node_x.push(i / 1000);\n      node_y.push(this.amplitude * Math.sin(this.frequency * node_x[i + this.numPoints] + this.phase) + this.displacement);\n\n    }\n\n    let vertices = new Float32Array(node_x.length * 3);\n\n    for (let i = 0; i < node_x.length; ++i) {\n      vertices[3 * i + 0] = node_x[i];\n      vertices[3 * i + 1] = node_y[i];\n      vertices[3 * i + 2] = 0;\n    }\n\n    let geometry = new THREE.BufferGeometry();\n\n    geometry.addAttribute(\n      'position',\n      new THREE.BufferAttribute(vertices, 3)\n    );\n\n    let material = new THREE.LineBasicMaterial(\n      {\n        color: 0x00ffff\n      }\n    );\n\n    let line = new THREE.Line(geometry, material);\n\n    this.scene.add(line);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/physics/sineWave.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Circle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.numSpokes = parseFloat(this.parameters.numSpokes.currentValue);\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\n\t}\n\n\tdraw () {\n\n\t\t  let geometry = new THREE.CircleBufferGeometry(this.radius, this.numSpokes);\n\t\t  let material = new THREE.MeshBasicMaterial({color: 0x00ffff, wireframe: true});\n\t\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/circle.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Cube extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t  let geometry = new THREE.BoxBufferGeometry(1, 1, 1);\n\t  let material = new THREE.MeshBasicMaterial({color: 0x00ffff, wireframe: false});\n\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/cube.js","import * as THREE from 'three';\nimport Animation from '../../animation';\n\nimport {\n\n\tphi\n\n} from '../../../utils';\n\nexport default class Polygon extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t\tthis.center = [0, 0];\n\t\tthis.radius = parseFloat(this.parameters.radius.currentValue);\n\t\tthis.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n\t\tthis.theta = parseFloat(this.parameters.theta.currentValue);\n\t\tthis.color = 0xf00a00;\n\n\t}\n\n\tdraw () {\n\n\t  this.vertices = new Float32Array(this.numVertices * 3);\n\n\t  for (let i = 0; i < this.numVertices; ++i) {\n\t    this.vertices[3 * i + 0] = this.radius * Math.sin(phi(i, this.numVertices) + this.theta) + this.center[0];\n\t    this.vertices[3 * i + 1] = this.radius * Math.cos(phi(i, this.numVertices) + this.theta) + this.center[1];\n\t    this.vertices[3 * i + 2] = 0;\n\t  }\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(this.vertices, 3)\n\t  );\n\n\t  let material = new THREE.LineBasicMaterial(\n\t    {\n\t      color: this.color\n\t    }\n\t  );\n\n\t  this.line = new THREE.LineLoop(geometry, material);\n\n\t\tthis.scene.add(this.line);\n\t}\n\n\tupdate (t) {\n\n\t  for (let i = 0; i < this.scene.children.length; ++i) {\n\t    this.scene.children[i].rotation.z += 1;\n\t  }\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/polygon.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Rectangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t  let geometry = new THREE.BufferGeometry();\n\n\t  let vertices = new Float32Array([\n\t    -0.5, -0.5, 0.0,\n\t     0.5, -0.5, 0.0,\n\t     0.5, 0.5, 0.0,\n\t    -0.5, 0.5, 0.0,\n\t    -0.5, -0.5, 0.0,\n\t     0.5, 0.5, 0.0\n\t  ]);\n\n\t  let colors = new Float32Array([\n\t    1.0, 0.0, 0.0,\n\t    0.0, 1.0, 0.0,\n\t    0.0, 0.0, 1.0,\n\t    0.0, 1.0, 1.0,\n\t    1.0, 0.0, 0.0,\n\t    0.0, 0.0, 1.0\n\t  ]);\n\n\t  geometry.addAttribute(\n\t    'position',\n\t    new THREE.BufferAttribute(vertices, 3)\n\t  );\n\n\t  geometry.addAttribute(\n\t    'color',\n\t    new THREE.BufferAttribute(colors, 3)\n\t  );\n\n\t  let material = new THREE.MeshBasicMaterial(\n\t    {\n\t      vertexColors: THREE.VertexColors,\n\t      wireframe: false\n\t    }\n\t  );\n\n\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/rectangle.js","import * as THREE from 'three';\n\nimport Animation from '../../animation';\n\nexport default class Triangle extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n\t}\n\n\tdraw () {\n\n\t\t  let geometry = new THREE.BufferGeometry();\n\n\t\t  let vertices = new Float32Array([\n\t\t    -0.5, -0.5, 0.0,\n\t\t     0.5, -0.5, 0.0,\n\t\t     0.0, 0.5, 0.0\n\t\t  ]);\n\n\t\t  let colors = new Float32Array([\n\t\t    1.0, 0.0, 0.0,\n\t\t    0.0, 1.0, 0.0,\n\t\t    0.0, 0.0, 1.0\n\t\t  ]);\n\n\t\t  geometry.addAttribute(\n\t\t    'position',\n\t\t    new THREE.BufferAttribute(vertices, 3)\n\t\t  );\n\n\t\t  geometry.addAttribute(\n\t\t    'color',\n\t\t    new THREE.BufferAttribute(colors, 3)\n\t\t  );\n\n\t\t  let material = new THREE.LineBasicMaterial(\n\t\t    {\n\t\t      vertexColors: THREE.VertexColors\n\t\t    }\n\t\t  );\n\n\t\t  let mesh = new THREE.Mesh(geometry, material);\n\n\t\t  this.scene.add(mesh);\n\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/humble_beginnings/shapes/triangle.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Amparo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n\t\tthis.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\tthis.graph.radius * Math.sin(i * i) * Math.sin(i * this.rate * t / 1e3) / 2,\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/amparo.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Andorinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.cos(i * this.rate * t / this.graph.numVertices),\n\t\t\t\tthis.graph.radius * Math.cos(i) * Math.sin(i * this.rate * t / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/andorinha.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Antigua extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n    let count = 0;\n\n    for (let i = 0; i < this.graph.partitionSizes.length; ++i) {\n\n      for (let j = 0; j < this.graph.partitionSizes[i]; ++j) {\n        this.graph.vertexGroup.children[count + j].position.set(\n          this.graph.vertexGroup.children[count + j].position.x + Math.cos(phi(this.rate * t, i + 1)) / 5e2,\n          this.graph.vertexGroup.children[count + j].position.y + Math.sin(phi(this.rate * t, i + 1)) / 5e2,\n          0\n        );\n      }\n\n      count += this.graph.partitionSizes[i];\n\n    }\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/antigua.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Batidinha extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/batidinha.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Bicardi extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tthis.graphRadius * Math.sin(this.scene.children[0].children[i].position.y - t * this.rate / this.graph.numVertices) * Math.sin(this.scene.children[0].children[i].position.y - i * t * this.rate / this.graph.numVertices),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/bicardi.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Blouse extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/blouse.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Brazil extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.cos(t) * Math.sin((i % this.divisor + 1) * t / 10) / 100),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/brazil.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Choro extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.graphRadius * Math.cos(phi(i, this.graph.numVertices) + this.rate * Math.sin(this.scene.children[0].children[i].position.x - t) / 10),\n\t\t\t\tthis.graphRadius * Math.sin(phi(i, this.graph.numVertices) + this.rate * Math.cos(this.scene.children[0].children[i].position.y - t) / 10),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/choro.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Dialogo extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        this.graph.radius * Math.sin(phi(i * i, this.graph.numVertices)) * Math.cos(this.rate * i * t / this.graph.numVertices),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/dialogo.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Flower extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) * Math.cos(this.rate * i * t / 1e3),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/flower.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Games extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.sin(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.sin(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/games.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Lamento extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.vertexGroup.children[i].position.x * (1 - Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        this.graph.vertexGroup.children[i].position.y * (1 + Math.cos(t) * Math.cos(this.rate * i) / 1000),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/lamento.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Look extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.dampening = parseFloat(this.parameters.dampening.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 5);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'concentric');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      if (i % 4 === 0) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 1) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else if (i % 4 === 2) {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 + this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n      } else {\n\n        this.graph.vertexGroup.children[i].position.set(\n          this.graph.vertexGroup.children[i].position.x * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.x / 10) / 1e3),\n          this.graph.vertexGroup.children[i].position.y * (1 - this.rate * Math.sin(this.dampening * this.graph.vertexGroup.children[i].position.y / 10) / 1e3),\n          0\n        );\n\n    }\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/look.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Mojave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n    this.camera.position.set(0, 0, 4);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/mojave.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Sabia extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(phi(this.rate * i * t, 1e3)),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(phi(this.rate * i * t, 1e3)),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/sabia.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Tereza extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) + Math.sin(t / 10) * Math.sin(this.rate * i * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) * Math.cos(this.rate * (i - 1) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/tereza.js","import Animation from '../animation';\n\nimport {\n\n  phi,\n  Graph\n\n} from '../../utils';\n\nexport default class Triste extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.divisor = parseFloat(this.parameters.divisor.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize();\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n      this.graph.vertexGroup.children[i].position.set(\n        this.graph.radius * Math.cos(phi(i, this.graph.numVertices)) - Math.sin(this.rate * (i % this.divisor) * t / 10),\n        this.graph.radius * Math.sin(phi(i, this.graph.numVertices)) + Math.cos(this.rate * (i % this.divisor) * t / 10),\n        0\n      );\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/triste.js","import Animation from '../animation';\n\nimport {\n\n  Graph\n\n} from '../../utils';\n\nexport default class Wave extends Animation {\n\n\tconstructor (scene, camera, animation) {\n\n\t\tsuper(scene, camera, animation);\n\n    this.numPartitions = parseFloat(this.parameters.numPartitions.currentValue);\n    this.numVertices = parseFloat(this.parameters.numVertices.currentValue);\n    this.graphRadius = parseFloat(this.parameters.graphRadius.currentValue);\n    this.vertexRadius = parseFloat(this.parameters.vertexRadius.currentValue);\n    this.rate = parseFloat(this.parameters.rate.currentValue);\n\n  }\n\n  draw () {\n\n    let partitionSizes = [];\n\n    for (let i = 0; i < this.numPartitions; ++i) {\n      partitionSizes.push(Math.floor(this.numVertices / this.numPartitions));\n    }\n\n    let center = [\n      0,\n      0,\n      0\n    ]\n\n    this.graph = new Graph(partitionSizes, center, this.graphRadius, this.vertexRadius, 'ball');\n    this.graph.initialize('null', 'grid');\n\n    this.scene.add(this.graph.vertexGroup);\n\n  }\n\n  update (t) {\n\n\t\tfor (let i = 0; i < this.graph.numVertices; ++i) {\n\n\t\t\tthis.scene.children[0].children[i].position.set(\n\t\t\t\tthis.scene.children[0].children[i].position.x,\n\t\t\t\tMath.sin(this.scene.children[0].children[i].position.y - t * this.rate / 100) * Math.sin(i * t * this.rate / 100),\n\t\t\t\t0\n\t\t\t);\n\n\t\t}\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/simulations/wave.js","import * as THREE from 'three';\n\nimport { generateAnimation } from './index';\n\nlet OrbitControls = require('three-orbit-controls')(THREE);\n\nexport default class CanvasManager {\n\n  constructor (canvas, animation) {\n    // initialize canvas\n\n    this.canvas = canvas;\n\n    this.checkCanvasSize();\n\n    this.setCamera(3);\n    this.setRenderer(0x000000);\n\n    this.checkCanvasSize();\n\n    window.addEventListener('resize', () => this.checkCanvasSize());\n\n    // initialize animation\n\n    this.scene = new THREE.Scene();\n\n    this.animation = generateAnimation(this.scene, this.camera, animation);\n\n    if (this.animation.controllable) {\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    }\n\n    this.dt = 0;\n\n    this.animation.draw();\n\n    this.tick = this.tick.bind(this);\n\n    // run animation\n\n    this.tick();\n\n  }\n\n  setRenderer (backgroundColor) {\n\n    this.renderer = new THREE.WebGLRenderer({canvas: this.canvas, antialias: true});\n    this.renderer.setClearColor(backgroundColor);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n\n  }\n\n  setCamera (offset) {\n\n    this.camera = new THREE.PerspectiveCamera(75, this.canvasWidth / this.canvasHeight, 0.1, 1000);\n    this.camera.position.z = offset;\n\n  }\n\n  checkCanvasSize () {\n\n    let cv = document.getElementById('opengl2webgl-display');\n\n    this.canvasWidth = cv.offsetWidth;\n    this.canvasHeight = cv.offsetHeight;\n\n    if (this.renderer) this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.camera) {\n\n      this.camera.aspect = this.canvasWidth / this.canvasHeight;\n      this.camera.updateProjectionMatrix();\n\n    }\n\n  }\n\n  tick () {\n\n    this.animationId = requestAnimationFrame(this.tick);\n\n    this.renderer.render(this.scene, this.camera);\n\n    if (this.animation.dynamic) {\n      this.dt += 1e-2;\n\n      if (this.dt > 2 * Math.PI * 1e6) {\n        this.dt -= 2 * Math.PI * 1e6;\n      }\n\n      this.animation.update(this.dt);\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OpenGL2WebGL/Navpane/canvasManager.js","<template>\n\n  <div>\n    <div v-for=\"category in categories\" v-if='!category.hidden' :key=\"category.name\" class=\"opengl2webgl-navpane-category\" >\n      <p v-b-toggle=\"'category-' + category.name\" class=\"opengl2webgl-navpane-category-text\"> {{ category.name }} </p>\n      <b-collapse :id=\"'category-' + category.name\">\n        <ul class=\"opengl2webgl-navpane-list\">\n          <li\n            v-if='item.category == category.name && !item.hidden'\n            v-for='item in filter'\n            :key='item.name'\n            class = \"opengl2webgl-navpane-item\"\n            >\n            <p\n              v-b-toggle=\"item.name\"\n              class=\"opengl2webgl-navpane-text\"\n              :class='{active: item.active}'\n              v-on:click='activate(item)'\n              > {{ item.text }}\n            </p>\n            <opengl2webgl-navpane-controls\n              v-if=\"item.parameters.length !== 0 && item.active\"\n              :animation=\"item\"\n              :screenType=\"screenType\"\n              v-bind=\"{activate, resetAnimation, toFullScreen, resetInput}\"\n              />\n          </li>\n        </ul>\n      </b-collapse>\n    </div>\n  </div>\n\n</template>\n\n<script>\n\nimport NavpaneControls from './NavpaneControls';\nimport CanvasManager from './canvasManager';\n\nlet canvasManager;\n\nexport default {\n  props: ['screenType', 'searchedText'],\n  components: {\n    'opengl2webgl-navpane-controls': NavpaneControls\n  },\n  data () {\n    return {\n      display: false,\n      categories: [\n        {\n          active: false,\n          hidden: false,\n          name: 'art'\n        },\n        {\n          active: false,\n          hidden: false,\n          name: 'math'\n        },\n        {\n          active: false,\n          hidden: true,\n          name: 'physics'\n        },\n        {\n          active: false,\n          hidden: true,\n          name: 'shapes'\n        },\n        {\n          active: false,\n          hidden: false,\n          name: 'simulations'\n        }\n      ],\n      animations: [\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_blanket',\n          category: 'art',\n          controllable: false,\n          dynamic: false,\n          hidden: false,\n          name: 'blanket',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 500,\n              minValue: 3\n            }\n          },\n          text: 'blanket'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_bounce_ripple',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'bounce ripple',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 6,\n              minValue: 1\n            }\n          },\n          text: 'bounce ripple'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthedad',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'chrysanthedad',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 32,\n              minValue: 2\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 32,\n              currentValue: 32,\n              maxValue: 32,\n              minValue: 2\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 32,\n              minValue: 1\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 8,\n              minValue: 1\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 8,\n              minValue: 1\n            }\n          },\n          text: 'chrysanthedad'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 120,\n              minValue: 4\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 16,\n              currentValue: 16,\n              maxValue: 120,\n              minValue: 12\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 6,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 6,\n              minValue: 1\n            }\n          },\n          text: 'chrysanthemum'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum2',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum2',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 2'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum3',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum3',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 3'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum4',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum4',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 4'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum5',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum5',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 5'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'chrysanthemum6',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 120,\n              minValue: 4\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 16,\n              currentValue: 16,\n              maxValue: 120,\n              minValue: 12\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 6,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 6,\n              minValue: 1\n            }\n          },\n          text: 'chrysanthemum'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum7',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum7',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 7'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum8',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum8',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum8'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_chrysanthemum9',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'chrysanthemum9',\n          parameters: {\n            numCenters: {\n              label: 'Number of Centers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 32,\n              currentValue: 32,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 30,\n              currentValue: 30,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'chrysanthemum 9'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_clam',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'clam',\n          parameters: {\n            numRidges: {\n              label: 'Number of Ridges',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'clam'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_collide0scope',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'collide',\n          parameters: {\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 100,\n              minValue: 2\n            }\n          },\n          text: 'collide0scope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_concentric_polygons',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'concentric polygons',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 3\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 48,\n              minValue: 3\n            }\n          },\n          text: 'concentric polygons'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_concentric_polygons2',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'concentric polygons 2',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 100,\n              minValue: 1\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 20,\n              minValue: 1\n            }\n          },\n          text: 'concentric polygons 2'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_fauxlidoscope',\n          cameraZoomMax: 100,\n          cameraZoomMin: 1,\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'fauxlidoscope',\n          parameters: {\n            numSteps: {\n              label: 'Number of Steps',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 120,\n              minValue: 1\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 120,\n              minValue: 2\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 64,\n              minValue: 3\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 60,\n              minValue: 2\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 64,\n              minValue: 1\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 0\n            }\n          },\n          text: 'fauxlidoscope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_flowers',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'flowers',\n          parameters: {\n            numFlowers: {\n              label: 'Number of Flowers',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 10,\n              minValue: 1\n            },\n            numPetals: {\n              label: 'Number of Petals',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 256,\n              minValue: 0\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 64,\n              minValue: 2\n            },\n            petalRadius: {\n              label: 'Petal Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1,\n              minValue: 1\n            }\n          },\n          text: 'flowers'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_gyr0scope',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'gyro',\n          parameters: {\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 100,\n              minValue: 0\n            }\n          },\n          text: 'gyr0scope'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_pearl',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'pearl',\n          parameters: {\n            numRidges: {\n              label: 'Number of Ridges',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'pearl'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_pinwheel',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'pinwheel',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 20,\n              minValue: 1\n            },\n            numFaces: {\n              label: 'Number of Faces',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 32,\n              minValue: 3\n            }\n          },\n          text: 'pinwheel'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_snowflake',\n          category: 'art',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'snowflake',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 12,\n              minValue: 1\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 8\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 100,\n              minValue: 3\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 64,\n              minValue: 2\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 500,\n              minValue: 0\n            }\n          },\n          text: 'snowflake'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_slosh_ripple',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'slosh ripple',\n          parameters: {\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 500,\n              minValue: 10\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 10,\n              minValue: 1\n            }\n          },\n          text: 'slosh ripple'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_starry_night',\n          category: 'art',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'starry night',\n          parameters: {\n            numStars: {\n              label: 'Number of Stars',\n              defaultValue: 42,\n              currentValue: 42,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numStems: {\n              label: 'Number of Stems',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 2\n            },\n            numSplits: {\n              label: 'Number of Splits',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 8,\n              minValue: 1\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 42,\n              currentValue: 42,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'starry night'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#art_wriggling_donut',\n          category: 'art',\n          controllable: false,\n          dynamic: true,\n          hidden: true,\n          name: 'wriggling donut',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 0.2,\n              currentValue: 0.2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'wriggling donut'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_mosaic',\n          category: 'math',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'mosaic',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 3\n            },\n            numPolygons: {\n              label: 'Number of Polygons',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 100,\n              minValue: 2\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 50,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 50,\n              minValue: 0\n            }\n          },\n          text: 'mosaic'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_mosaic2',\n          category: 'math',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'mosaic2',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 120,\n              minValue: 1\n            },\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 64,\n              currentValue: 64,\n              maxValue: 64,\n              minValue: 3\n            },\n            numLanes: {\n              label: 'Number of Lanes',\n              defaultValue: 24,\n              currentValue: 24,\n              maxValue: 120,\n              minValue: 4\n            },\n            polygonRadius: {\n              label: 'Polygon Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 20,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 0.5,\n              currentValue: 0.5,\n              maxValue: 5,\n              minValue: 0\n            }\n          },\n          text: 'mosaic'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_sacred_circles',\n          category: 'math',\n          controllable: true,\n          dynamic: false,\n          hidden: false,\n          name: 'sacred circles',\n          parameters: {\n            numLayers: {\n              label: 'Number of Layers',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 3\n            },\n            numCircles: {\n              label: 'Number of Circles',\n              defaultValue: 12,\n              currentValue: 12,\n              maxValue: 64,\n              minValue: 1\n            },\n            circleRadius: {\n              label: 'Circle Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 0\n            }\n          },\n          text: 'sacred circles'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_star',\n          category: 'math',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'star',\n          parameters: {\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            offset: {\n              label: 'Offset',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'star'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#math_unoriginal',\n          category: 'math',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'unoriginal',\n          parameters: {\n            numNodes: {\n              label: 'Number of Nodes',\n              defaultValue: 24,\n              currentValue: 24,\n              maxValue: 1000,\n              minValue: 3\n            },\n            nodeRadius: {\n              label: 'Node Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 10,\n              minValue: 0\n            },\n            globalRadius: {\n              label: 'Global Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 0\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 1000,\n              minValue: 0\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'unoriginal'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#physics_sine_wave',\n          category: 'physics',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'sine wave',\n          parameters: {\n            amplitude: {\n              label: 'Amplitude',\n              defaultValue: 0.5,\n              currentValue: 0.5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            frequency: {\n              label: 'Frequency',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 0\n            },\n            phase: {\n              label: 'Phase',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            },\n            displacement: {\n              label: 'Displacement',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numPoints: {\n              label: 'Number of Points',\n              defaultValue: 1500,\n              currentValue: 1500,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'sine wave'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_circle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'circle',\n          parameters: {\n            numSpokes: {\n              label: 'Number of Spokes',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 0\n            },\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'circle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_cube',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'cube',\n          parameters: [],\n          text: 'cube'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#polystarter',\n          category: 'shapes',\n          controllable: true,\n          dynamic: true,\n          hidden: true,\n          name: 'polystarter',\n          parameters: {\n            radius: {\n              label: 'Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 0\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 0\n            },\n            theta: {\n              label: 'Theta',\n              defaultValue: 0,\n              currentValue: 0,\n              maxValue: 1000,\n              minValue: 0\n            }\n          },\n          text: 'polystarter'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_rectangle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'rectangle',\n          parameters: [],\n          text: 'rectangle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#shapes_triangle',\n          category: 'shapes',\n          controllable: true,\n          dynamic: false,\n          hidden: true,\n          name: 'triangle',\n          parameters: [],\n          text: 'triangle'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_amparo',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'amparo',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'amparo'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_andorinha',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'andorinha',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 500,\n              currentValue: 500,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2.25,\n              currentValue: 2.25,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'andorinha'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_antigua',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'antigua',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 50,\n              currentValue: 50,\n              maxValue: 1000,\n              minValue: 10\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 50,\n              minValue: 1\n            }\n          },\n          text: 'antigua'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_batidinha',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'batidinha',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'batidinha'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_bicardi',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'bicardi',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 10,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 2\n            }\n          },\n          text: 'bicardi'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_blouse',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'blouse',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'blouse'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_brazil',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'brazil',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'brazil'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_choro',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'choro',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 50,\n              minValue: 1\n            }\n          },\n          text: 'choro'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_dialogo',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'dialogo',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 40,\n              currentValue: 40,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'dialogo'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_flower',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'flower',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 10,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'flower'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_games',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'games',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'games'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_lamento',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'lamento',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'lamento'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_look',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'look',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 6,\n              currentValue: 6,\n              maxValue: 100,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 1000,\n              currentValue: 1000,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            dampening: {\n              label: 'Dampening',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'look'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_mojave',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'mojave',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'mojave'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_sabia',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'sabia',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'sabia'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_tereza',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'tereza',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 8,\n              currentValue: 8,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'tereza'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_triste',\n          category: 'simulations',\n          controllable: true,\n          dynamic: true,\n          hidden: false,\n          name: 'triste',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 100,\n              currentValue: 100,\n              maxValue: 1000,\n              minValue: 1\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 200,\n              currentValue: 200,\n              maxValue: 1000,\n              minValue: 100\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 1,\n              currentValue: 1,\n              maxValue: 5,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 1\n            },\n            divisor: {\n              label: 'Divisor',\n              defaultValue: 20,\n              currentValue: 20,\n              maxValue: 1000,\n              minValue: 3\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 3,\n              currentValue: 3,\n              maxValue: 100,\n              minValue: 1\n            }\n          },\n          text: 'triste'\n        },\n        {\n          active: false,\n          address: '/opengl_webgl_conversion#simulations_wave',\n          category: 'simulations',\n          controllable: false,\n          dynamic: true,\n          hidden: false,\n          name: 'wave',\n          parameters: {\n            numPartitions: {\n              label: 'Number of Partitions',\n              defaultValue: 2,\n              currentValue: 2,\n              maxValue: 100,\n              minValue: 2\n            },\n            numVertices: {\n              label: 'Number of Vertices',\n              defaultValue: 120,\n              currentValue: 120,\n              maxValue: 1000,\n              minValue: 10\n            },\n            graphRadius: {\n              label: 'Graph Radius',\n              defaultValue: 4,\n              currentValue: 4,\n              maxValue: 100,\n              minValue: 1\n            },\n            vertexRadius: {\n              label: 'Vertex Radius',\n              defaultValue: 10,\n              currentValue: 10,\n              maxValue: 100,\n              minValue: 1\n            },\n            rate: {\n              label: 'Rate',\n              defaultValue: 5,\n              currentValue: 5,\n              maxValue: 1000,\n              minValue: 1\n            }\n          },\n          text: 'wave'\n        }\n      ]\n    }\n  },\n  methods: {\n    activate: function (animation) {\n      for (let i = 0; i < this.animations.length; ++i) {\n        this.animations[i].active = false;\n      }\n      animation.active = true;\n      this.display = true;\n      const canvas = document.getElementById('opengl2webgl-canvas');\n      if (canvasManager) {\n        if (canvasManager.animationId > 0) {\n          cancelAnimationFrame(canvasManager.animationId);\n        }\n      }\n      canvasManager = new CanvasManager(canvas, animation);\n    },\n    resetAnimation: function (animation, parameters) {\n      for (let parameter in animation.parameters) {\n        let param = animation.parameters[parameter];\n        param.currentValue = param.defaultValue;\n      }\n      this.activate(animation);\n    },\n    toFullScreen: function () {\n      let canvas = document.getElementById('opengl2webgl-canvas');\n      if (canvas.requestFullscreen) {\n      \tcanvas.requestFullscreen();\n      } else if (canvas.webkitRequestFullscreen) {\n      \tcanvas.webkitRequestFullscreen();\n      } else if (canvas.mozRequestFullScreen) {\n      \tcanvas.mozRequestFullScreen();\n      } else if (canvas.msRequestFullscreen) {\n      \tcanvas.msRequestFullscreen();\n      }\n    },\n    resetInput: function (parameter) {\n      if (parameter.currentValue > parameter.maxValue) {\n        parameter.currentValue = parameter.maxValue\n      } else if (parameter.currentValue < parameter.minValue) {\n        parameter.currentValue = parameter.minValue\n      }\n    }\n  },\n  computed: {\n    filter () {\n      return this.animations.filter(\n        animation => {\n          return animation.text.toLowerCase().includes(this.searchedText.toLowerCase())\n        }\n      );\n    }\n  }\n}\n\n</script>\n\n<style>\n\n.opengl2webgl-navpane-category-text {\n  font-family: \"Arial\";\n  font-weight: bold;\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n.opengl2webgl-navpane-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.opengl2webgl-navpane-text {\n  color: purple;\n  text-decoration: underline;\n  font-family: \"Arial\";\n  cursor: pointer;\n  position: relative;\n  margin: 0;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/OpenGL2WebGL/Navpane/Navpane.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((_vm.categories),function(category){return (!category.hidden)?_c('div',{key:category.name,staticClass:\"opengl2webgl-navpane-category\"},[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:('category-' + category.name),expression:\"'category-' + category.name\"}],staticClass:\"opengl2webgl-navpane-category-text\"},[_vm._v(\" \"+_vm._s(category.name)+\" \")]),_vm._v(\" \"),_c('b-collapse',{attrs:{\"id\":'category-' + category.name}},[_c('ul',{staticClass:\"opengl2webgl-navpane-list\"},_vm._l((_vm.filter),function(item){return (item.category == category.name && !item.hidden)?_c('li',{key:item.name,staticClass:\"opengl2webgl-navpane-item\"},[_c('p',{directives:[{name:\"b-toggle\",rawName:\"v-b-toggle\",value:(item.name),expression:\"item.name\"}],staticClass:\"opengl2webgl-navpane-text\",class:{active: item.active},on:{\"click\":function($event){_vm.activate(item)}}},[_vm._v(\" \"+_vm._s(item.text)+\"\\n          \")]),_vm._v(\" \"),(item.parameters.length !== 0 && item.active)?_c('opengl2webgl-navpane-controls',_vm._b({attrs:{\"animation\":item,\"screenType\":_vm.screenType}},'opengl2webgl-navpane-controls',{activate: _vm.activate, resetAnimation: _vm.resetAnimation, toFullScreen: _vm.toFullScreen, resetInput: _vm.resetInput},false)):_vm._e()],1):_vm._e()}))])],1):_vm._e()}))}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-519435c8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/OpenGL2WebGL/Navpane/Navpane.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-519435c8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Navpane.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Navpane.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Navpane.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-519435c8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Navpane.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/OpenGL2WebGL/Navpane/Navpane.vue\n// module id = null\n// module chunks = ","<template>\n  <div>\n    <b-container fluid id=\"opengl2webgl-container\">\n      <b-row v-if=\"screenType === 'phone'\">\n        <b-col>\n          <h1 id=\"opengl2webgl-phone-message\">ROTATE ME</h1>\n        </b-col>\n      </b-row>\n      <b-row v-else>\n        <b-col id=\"opengl2webgl-navpane\" md=\"2\" sm=\"3\">\n          <h2 id=\"opengl2webgl-navpane-title\" :class=\"screenType\">Animations</h2>\n          <input type=\"text\" id=\"opengl2webgl-search-bar\" placeholder=\"Search\" onfocus=\"this.value=''\" v-model=\"searchedText\"/>\n          <opengl2webgl-navpane-menu id=\"opengl2webgl-navpane-menu\" :class=\"[screenAspectRatio, screenType]\" :screenType=\"screenType\" :searchedText=\"searchedText\"/>\n        </b-col>\n        <b-col md=\"10\" sm=\"9\" id='opengl2webgl-display'>\n          <canvas id='opengl2webgl-canvas'></canvas>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport Navpane from './Navpane/Navpane';\n\nexport default {\n  props: ['screenType', 'screenAspectRatio'],\n  name: 'OpenGL2WebGLApp',\n  components: {\n    'opengl2webgl-navpane-menu': Navpane\n  },\n  data () {\n    return {\n      searchedText: ''\n    }\n  }\n}\n</script>\n\n<style>\n\n#opengl2webgl-phone-message {\n  position: relative;\n  top: 70%;\n  text-align: center;\n}\n\n#opengl2webgl-navpane {\n  height: 90vh;\n  background: none;\n  overflow: hidden;\n  position: relative;\n}\n\n#opengl2webgl-navpane-title {\n  position: relative;\n}\n\n#opengl2webgl-search-bar {\n  position: relative;\n  width: 100%;\n}\n\n#opengl2webgl-navpane-menu {\n  height: 87%;\n  width: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  position: absolute;\n  margin-top: 10px;\n}\n::-webkit-scrollbar {\n  background: transparent;\n}\n\n#opengl2webgl-navpane-menu.tablet, #opengl2webgl-navpane-menu.phone {\n  height: 80%;\n}\n\n#opengl2webgl-navpane-menu.widescreen {\n  height: 75%;\n}\n\n#opengl2webgl-display {\n  height:90vh;\n  overflow: hidden;\n}\n\n#opengl2webgl-display.tablet, #opengl2webgl-display.phone {\n  height:85vh;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"fluid\":\"\",\"id\":\"opengl2webgl-container\"}},[(_vm.screenType === 'phone')?_c('b-row',[_c('b-col',[_c('h1',{attrs:{\"id\":\"opengl2webgl-phone-message\"}},[_vm._v(\"ROTATE ME\")])])],1):_c('b-row',[_c('b-col',{attrs:{\"id\":\"opengl2webgl-navpane\",\"md\":\"2\",\"sm\":\"3\"}},[_c('h2',{class:_vm.screenType,attrs:{\"id\":\"opengl2webgl-navpane-title\"}},[_vm._v(\"Animations\")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchedText),expression:\"searchedText\"}],attrs:{\"type\":\"text\",\"id\":\"opengl2webgl-search-bar\",\"placeholder\":\"Search\",\"onfocus\":\"this.value=''\"},domProps:{\"value\":(_vm.searchedText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.searchedText=$event.target.value}}}),_vm._v(\" \"),_c('opengl2webgl-navpane-menu',{class:[_vm.screenAspectRatio, _vm.screenType],attrs:{\"id\":\"opengl2webgl-navpane-menu\",\"screenType\":_vm.screenType,\"searchedText\":_vm.searchedText}})],1),_vm._v(\" \"),_c('b-col',{attrs:{\"md\":\"10\",\"sm\":\"9\",\"id\":\"opengl2webgl-display\"}},[_c('canvas',{attrs:{\"id\":\"opengl2webgl-canvas\"}})])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-03e4ffeb\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-03e4ffeb\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./OpenGL2WebGLApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./OpenGL2WebGLApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./OpenGL2WebGLApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-03e4ffeb\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./OpenGL2WebGLApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/OpenGL2WebGL/OpenGL2WebGLApp.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"media-container\"}},[_c('h1',[_vm._v(\"Not for laptop speakers\")]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"media-players\"}},_vm._l((_vm.mediaPlayers),function(player){return _c('div',{key:player.name,staticClass:\"media-player\"},[_c('b-row',{staticClass:\"justify-content-md-center\"},[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(player.embedref)}})])],1)],1)}))])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1376980a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Media/MediaApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1376980a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./MediaApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MediaApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./MediaApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1376980a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./MediaApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Media/MediaApp.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{class:_vm.screenType,attrs:{\"align-h\":\"center\",\"id\":\"cv-container\"}},[(_vm.screenType !== 'monitor')?_c('div',_vm._l((_vm.cvContents),function(cvSection){return _c('b-row',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('b-col',{staticClass:\"cv-section\",class:_vm.screenType,attrs:{\"cols\":\"12\"}},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2)],1)})):_vm._e(),_vm._v(\" \"),(_vm.screenType === 'monitor')?_c('div',{attrs:{\"id\":\"cv-slider\"}},[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){_vm.onSlideLeft(_vm.currentSlide)}}},[_c('span',{staticClass:\"glyphicon glyphicon-chevron-left\"})])],1),_vm._v(\" \"),_c('b-col',{attrs:{\"cols\":\"8\"}},_vm._l((_vm.cvContents),function(cvSection){return (cvSection.display)?_c('div',{key:cvSection.header,staticClass:\"cv-section-content\"},[_c('h1',[_vm._v(_vm._s(cvSection.header))]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_vm._l((cvSection.details),function(detail){return _c('p',{key:detail.text,class:detail.type},[_vm._v(_vm._s(detail.text))])})],2):_vm._e()})),_vm._v(\" \"),_c('b-col',{attrs:{\"cols\":\"2\"}},[_c('b-btn',{staticClass:\"cv-slider-arrow\",on:{\"click\":function($event){_vm.onSlideRight(_vm.currentSlide)}}},[_c('span',{staticClass:\"glyphicon glyphicon-chevron-right\"})])],1)],1)],1):_vm._e()])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-47c04a5f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/CV/CVApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-47c04a5f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CVApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CVApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CVApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-47c04a5f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CVApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/CV/CVApp.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"align-h\":\"center\",\"id\":\"contact-container\"}},[_c('b-row',[_c('b-col',[_c('h1',[_vm._v(\"HIT ME UP\")])])],1),_vm._v(\" \"),_vm._l((_vm.contactInfo),function(contactInfoItem){return _c('b-row',{key:contactInfoItem.text},[_c('b-col',[_c('p',[_vm._v(_vm._s(contactInfoItem.text))])])],1)}),_vm._v(\" \"),_c('b-row',[_c('b-col',_vm._l((_vm.contactLinks),function(contactLink){return _c('a',{key:contactLink.icon,staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":contactLink.src,\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa\",class:contactLink.icon})])}))],1),_vm._v(\" \"),_c('b-row',[_c('b-col',[_c('a',{staticClass:\"contact-icon\",attrs:{\"rel\":\"noopener\",\"href\":\"https://github.com/max-t-wheeler\",\"target\":\"_blank\"}},[_c('span',{staticClass:\"fa fa-github\"})])])],1)],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1ec39e19\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Contact/ContactApp.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1ec39e19\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ContactApp.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ContactApp.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ContactApp.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1ec39e19\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ContactApp.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Contact/ContactApp.vue\n// module id = null\n// module chunks = ","<template>\n\n  <div id=\"app-base\">\n    <app-toolbar :homeContents=\"home\" :appContents=\"contents\" class=\"toolbar\"/>\n    <transition name=\"fade\" mode=\"out-in\">\n      <home-page v-if=\"home.display\" :screenType=\"screenType\" class=\"application\"/>\n      <opengl2webgl-app v-if=\"contents[0].display\" :screenType=\"screenType\" class=\"application\"/>\n      <media-app v-if=\"contents[1].display\" :screenType=\"screenType\" class=\"application\"/>\n      <cv-app v-if=\"contents[2].display\" :screenType=\"screenType\" class=\"application\"/>\n      <contact-app v-if=\"contents[3].display\" :screenType=\"screenType\" class=\"application\"/>\n    </transition>\n  </div>\n\n</template>\n\n<script>\n\nimport Toolbar from './components/Toolbar';\nimport Home from './components/Home/Home';\nimport OpenGL2WebGLApp from './components/OpenGL2WebGL/OpenGL2WebGLApp';\nimport MediaApp from './components/Media/MediaApp';\nimport CVApp from './components/CV/CVApp';\nimport ContactApp from './components/Contact/ContactApp';\n\nexport default {\n  name: 'App',\n  components: {\n    'app-toolbar': Toolbar,\n    'home-page': Home,\n    'opengl2webgl-app': OpenGL2WebGLApp,\n    'media-app': MediaApp,\n    'cv-app': CVApp,\n    'contact-app': ContactApp\n  },\n  data () {\n    return {\n      home: {\n        name: 'Home',\n        address: '#home',\n        display: true\n      },\n      contents: [\n        {\n          name: 'WebGL Projects',\n          address: '#webgl-projects',\n          display: false\n        },\n        {\n          name: 'Media',\n          address: '#media',\n          display: false\n        },\n        {\n          name: 'CV',\n          address: '#cv',\n          display: false\n        },\n        {\n          name: 'Contact',\n          address: '#contact',\n          display: false\n        }\n      ],\n      screenType: '',\n      screenAspectRatio: ''\n    }\n  },\n  methods: {\n    checkScreenSize: function () {\n\n      if (window.innerWidth < 576) {\n        this.screenType = 'phone';\n      } else if (window.innerWidth < 768) {\n        this.screenType = 'tablet';\n      } else {\n        this.screenType = 'monitor';\n      }\n\n      if (window.innerWidth / window.innerHeight > 2) {\n        this.screenAspectRatio = 'widescreen';\n      } else {\n        this.screenAspectRatio = 'normal';\n      }\n\n    },\n    resizeApp: function () {\n      window.addEventListener('resize', () => this.checkScreenSize());\n    }\n  },\n  mounted () {\n    this.checkScreenSize();\n  },\n  updated () {\n    this.resizeApp();\n  }\n}\n\n</script>\n\n<style>\n\nbody {\n  background: linear-gradient(10deg, rgba(0, 255, 255, 0.9), rgba(0, 102, 0, 0.9)), url(./assets/stars.jpg);\n}\n\n#app-base {\n  height: 100vh;\n  overflow: hidden;\n}\n\n.application {\n  height: 90vh;\n  overflow: auto;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"media-container\">\n      <h1>Not for laptop speakers</h1>\n      <div id=\"media-players\">\n        <div v-for=\"player in mediaPlayers\" :key=\"player.name\" class=\"media-player\">\n          <b-row class=\"justify-content-md-center\">\n            <b-col md=\"6\">\n              <span v-html='player.embedref'></span>\n            </b-col>\n          </b-row>\n        </div>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'MediaApp',\n  data () {\n    return {\n      mediaPlayers: [\n        {\n          name: 'bandcamp-dub',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=916923795/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=3453975111/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/siblings-and-friends\">Siblings and Friends by Siblings and Friends</a></iframe>'\n        },\n        {\n          name: 'soundlcoud-cheerio',\n          embedref: '<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/345594317&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true\"></iframe>'\n        },\n        {\n          name: 'bandcamp-gross',\n          embedref: '<iframe style=\"border: 0; width: 100%; height: 120px;\" src=\"https://bandcamp.com/EmbeddedPlayer/album=3621861420/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=493506869/transparent=true/\" seamless><a href=\"http://barncatboys.bandcamp.com/album/keepin-it-clean\">Keepin it Clean by Serge Dean</a></iframe>'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#media-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n  overflow: hidden;\n}\n\n#media-player {\n  width: 100%;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Media/MediaApp.vue","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"cv-container\" :class=\"screenType\">\n      <div v-if=\"screenType !== 'monitor'\">\n        <b-row v-for=\"cvSection in cvContents\" :key=\"cvSection.header\" class=\"cv-section-content\">\n          <b-col cols=\"12\" class=\"cv-section\" :class=\"screenType\">\n            <h1>{{cvSection.header}}</h1> <br>\n            <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n          </b-col>\n        </b-row>\n      </div>\n      <div v-if=\"screenType === 'monitor'\" id=\"cv-slider\">\n        <b-row>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" v-on:click=\"onSlideLeft(currentSlide)\">\n              <span class=\"glyphicon glyphicon-chevron-left\"></span>\n            </b-btn>\n          </b-col>\n          <b-col cols=\"8\">\n              <div v-for=\"cvSection in cvContents\" :key=\"cvSection.header\" v-if=\"cvSection.display\" class=\"cv-section-content\">\n                <h1>{{cvSection.header}}</h1> <br>\n                <p v-for=\"detail in cvSection.details\" :key=\"detail.text\" :class=\"detail.type\">{{detail.text}}</p>\n              </div>\n          </b-col>\n          <b-col cols=\"2\">\n            <b-btn class=\"cv-slider-arrow\" v-on:click=\"onSlideRight(currentSlide)\">\n              <span class=\"glyphicon glyphicon-chevron-right\"></span>\n            </b-btn>\n          </b-col>\n        </b-row>\n      </div>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  props: ['screenType'],\n  name: 'CVApp',\n  data () {\n    return {\n      currentSlide: 0,\n      cvContents: [\n        {\n          display: true,\n          header: 'Education',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute'\n            },\n            {\n              type: 'cv-description',\n              text: 'B.S. in Physics and Mathematics (2015)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Experience',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'FactSet Research Systems, Inc.'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Portfolio & Quant, Analytics Solutions'\n            },\n            {\n              type: 'cv-description',\n              text: 'Senior Product Developer (2016-)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Barncat Productions'\n            },\n            {\n              type: 'cv-description',\n              text: 'Chief Technical Officer, Head of Public Relations, Studio Musician (2015-2016)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Rensselaer Polytechnic Institute Department of Mathematics'\n            },\n            {\n              type: 'cv-description',\n              text: 'Research Student (2014-2015)'\n            },\n            {\n              type: 'cv-description',\n              text: 'Teaching Assistant, Introduction to Differential Equations (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Affiliations',\n          details: [\n            {\n              type: 'cv-organization',\n              text: 'Pi Mu Epsilon, Kappa'\n            },\n            {\n              type: 'cv-description',\n              text: 'Secretary (2014-2015)'\n            },\n            {\n              type: 'cv-organization',\n              text: 'Delta Tau Delta, Upsilon'\n            },\n            {\n              type: 'cv-description',\n              text: 'Recording Secretary (2013-2014)'\n            }\n          ]\n        },\n        {\n          display: false,\n          header: 'Accolades',\n          details: [\n            {\n              type: 'cv-description',\n              text: 'Rensselaer Medalist (2010)'\n            }\n          ]\n        }\n      ]\n    }\n  },\n  methods: {\n    onSlideLeft (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n\n      if (this.currentSlide === 0) {\n        this.currentSlide = this.cvContents.length - slide - 1;\n      } else {\n        this.currentSlide = slide - 1;\n      }\n\n      this.cvContents[this.currentSlide].display = true;\n    },\n    onSlideRight (slide) {\n      for (let i = 0; i < this.cvContents.length; ++i) {\n        this.cvContents[i].display = false;\n      }\n      this.currentSlide = (slide + 1) % this.cvContents.length;\n      this.cvContents[this.currentSlide].display = true;\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#cv-container {\n  position: relative;\n  top: 10%;\n  text-align: center;\n}\n\n#cv-container.monitor {\n  top: 30%;\n  overflow: hidden;\n}\n\n#cv-slider {\n  position: relative;\n  top: 50%;\n}\n\n.cv-slider-arrow, .cv-slider-arrow:hover, .cv-slider-arrow:active, .cv-slider-arrow:focus, .cv-slider-arrow:visited {\n  background: none;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  position: fixed;\n  top: 40%;\n}\n\n.cv-organization {\n  font-weight: bold;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/CV/CVApp.vue","<template>\n\n  <div>\n    <b-container align-h=\"center\" id=\"contact-container\">\n      <b-row>\n        <b-col>\n          <h1>HIT ME UP</h1>\n        </b-col>\n      </b-row>\n      <b-row v-for=\"contactInfoItem in contactInfo\" :key=\"contactInfoItem.text\" >\n        <b-col>\n          <p>{{ contactInfoItem.text }}</p>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a v-for=\"contactLink in contactLinks\" :key=\"contactLink.icon\" rel=\"noopener\" class=\"contact-icon\" :href=\"contactLink.src\" target=\"_blank\">\n            <span class=\"fa\" :class=\"contactLink.icon\"/>\n          </a>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col>\n          <a rel=\"noopener\" class=\"contact-icon\" href=\"https://github.com/max-t-wheeler\" target=\"_blank\">\n            <span class=\"fa fa-github\"/>\n          </a>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n\n</template>\n\n<script>\n\nexport default {\n  name: 'ContactApp',\n  data () {\n    return {\n      contactInfo: [\n        {\n          text: 'Max T. Wheeler'\n        },\n        {\n          text: 'max.t.wheeler@gmail.com'\n        },\n        {\n          text: 'CT | MA | NY'\n        }\n      ],\n      contactLinks: [\n        {\n          src: 'https://www.linkedin.com/in/max-wheeler-39557074/',\n          icon: 'fa-linkedin'\n        },\n        {\n          src: 'https://www.facebook.com/max.t.wheeler',\n          icon: 'fa-facebook'\n        },\n        {\n          src: 'https://soundcloud.com/the-dopest-kind',\n          icon: 'fa-soundcloud'\n        }\n      ]\n    }\n  }\n}\n\n</script>\n\n<style>\n\n#contact-container {\n  position: relative;\n  top: 20%;\n  text-align: center;\n}\n\n.contact-icon {\n  font-size: 20px;\n  color: black;\n  text-decoration: none;\n}\n\n.contact-icon:hover, .contact-icon:active, .contact-icon:visited {\n  color: black;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Contact/ContactApp.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app-base\"}},[_c('app-toolbar',{staticClass:\"toolbar\",attrs:{\"homeContents\":_vm.home,\"appContents\":_vm.contents}}),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\",\"mode\":\"out-in\"}},[(_vm.home.display)?_c('home-page',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[0].display)?_c('opengl2webgl-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[1].display)?_c('media-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[2].display)?_c('cv-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e(),_vm._v(\" \"),(_vm.contents[3].display)?_c('contact-app',{staticClass:\"application\",attrs:{\"screenType\":_vm.screenType}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-46c91718\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-46c91718\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-46c91718\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport App from './App';\n\nVue.use(BootstrapVue);\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}